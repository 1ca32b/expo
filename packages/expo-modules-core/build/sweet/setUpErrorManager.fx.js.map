{"version":3,"file":"setUpErrorManager.fx.js","sourceRoot":"","sources":["../../src/sweet/setUpErrorManager.fx.ts"],"names":[],"mappings":"AAAA,OAAO,kBAAkB,MAAM,sBAAsB,CAAC;AACtD,OAAO,YAAY,MAAM,iBAAiB,CAAC;AAC3C,OAAO,QAAQ,MAAM,aAAa,CAAC;AACnC,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAElD,IAAI,OAAO,IAAI,QAAQ,CAAC,EAAE,KAAK,SAAS,IAAI,kBAAkB,EAAE;IAC9D,MAAM,cAAc,GAAG,4CAA4C,CAAC;IACpE,MAAM,YAAY,GAAG,0CAA0C,CAAC;IAOhE,MAAM,YAAY,GAAG,IAAI,YAAY,CAAqB,kBAAkB,CAAC,CAAC;IAE9E,YAAY,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,EAAE,EAAE;QACrD,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,YAAY,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,OAAO,EAAE,EAAE;QACjD,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;CACJ;AAED,oFAAoF;AACpF,UAAU,CAAC,0BAA0B,GAAG,UAAU,CAAC","sourcesContent":["import NativeErrorManager from './NativeErrorManager';\nimport EventEmitter from '../EventEmitter';\nimport Platform from '../Platform';\nimport { CodedError } from '../errors/CodedError';\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  const onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  const onNewWarning = 'ExpoModulesCoreErrorManager.onNewWarning';\n\n  type NativeErrorManager = {\n    [onNewException](exception: { message: string });\n    [onNewWarning](warning: { message: string });\n  };\n\n  const eventEmitter = new EventEmitter<NativeErrorManager>(NativeErrorManager);\n\n  eventEmitter.addListener(onNewException, (exception) => {\n    console.error(exception.message);\n  });\n\n  eventEmitter.addListener(onNewWarning, (warning) => {\n    console.warn(warning.message);\n  });\n}\n\n// We have to export `CodedError` via global object to use in later in the C++ code.\nglobalThis.ExpoModulesCore_CodedError = CodedError;\n"]}