{"version":3,"file":"expo-definedRouter.js","sourceRoot":"","sources":["../../../src/rsc/router/expo-definedRouter.ts"],"names":[],"mappings":";;AAAA,2CAAuC;AAEvC,iDAA6C;AAE7C,qDAA+C;AAC/C,iDAA8C;AAE9C,6CAA+C;AAE/C,kBAAe,IAAA,0BAAW,EAAC,KAAK,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,qBAAqB,EAAE,EAAE,EAAE;IACvF,MAAM,KAAK,GAAG,UAAG,CAAC,IAAI,EAAE,CAAC;IAEzB,MAAM,MAAM,GAAG,IAAA,wBAAS,EAAC,UAAG,EAAE;QAC5B,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;QAC7B,aAAa,EAAE,IAAI;QACnB,UAAU,EAAE,MAAM;KACnB,CAAC,CAAC;IAEH,IAAI,CAAC,MAAM;QAAE,OAAO;IAEpB,SAAS,SAAS,CAAC,KAAgB,EAAE,MAAc;QACjD,MAAM,MAAM,GAAG,IAAA,wBAAa,EAAC,KAAK,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QACvE,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAC/B,YAAY,CAAC;YACX,IAAI,EAAE,MAAM;YACZ,cAAc;YACd,8DAA8D;YAC9D,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,CAAC,OAAO;YACpC,MAAM,EAAE,QAAQ;YAChB,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC,iBAAiB;YACtC,aAAa;SACd,CAAC,CAAC;QAEH,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAU,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YAChD,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAC3B,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;aAC1B;iBAAM;gBACL,MAAM,MAAM,GAAG,IAAA,wBAAa,EAAC,KAAK,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;gBACvE,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;gBAC5C,UAAU,CAAC;oBACT,IAAI,EAAE,MAAM;oBACZ,8DAA8D;oBAC9D,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,CAAC,OAAO;oBACpC,MAAM,EAAE,SAAS;oBACjB,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC,iBAAiB;iBACvC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,MAAM,CAAC,CAAC;IAElB,uBAAuB;IAEvB,8BAA8B;IAC9B,iCAAiC;IAEjC,kFAAkF;IAClF,sEAAsE;IACtE,2BAA2B;IAC3B,4BAA4B;IAC5B,6BAA6B;IAC7B,kBAAkB;IAClB,wBAAwB;IAExB,iBAAiB;IACjB,YAAY;IACZ,oGAAoG;IACpG,YAAY;IACZ,SAAS;IAET,wCAAwC;IAExC,0CAA0C;IAC1C,0CAA0C;IAE1C,oCAAoC;IACpC,8DAA8D;IAE9D,qBAAqB;IACrB,cAAc;IACd,uBAAuB;IACvB,uEAAuE;IACvE,yDAAyD;IACzD,0BAA0B;IAC1B,mBAAmB;IACnB,UAAU;IACV,aAAa;IACb,wCAAwC;IACxC,mBAAmB;IACnB,cAAc;IACd,uEAAuE;IACvE,yDAAyD;IACzD,2BAA2B;IAC3B,mBAAmB;IACnB,UAAU;IACV,MAAM;IACN,IAAI;AACN,CAAC,CAAC,CAAC","sourcesContent":["import { ctx } from 'expo-router/_ctx';\n\nimport { createPages } from './create-pages';\n\nimport { getRoutes } from '../../getRoutesSSR';\nimport { sortRoutes } from '../../sortRoutes';\nimport { RouteNode } from '../../Route';\nimport { getContextKey } from '../../matchers';\n\nexport default createPages(async ({ createPage, createLayout, unstable_setBuildData }) => {\n  const files = ctx.keys();\n\n  const routes = getRoutes(ctx, {\n    platform: process.env.EXPO_OS,\n    skipGenerated: true,\n    importMode: 'lazy',\n  });\n\n  if (!routes) return;\n\n  function addLayout(route: RouteNode, parent: string) {\n    const normal = getContextKey(route.contextKey).replace(/\\/index$/, '');\n    console.log('layout:', normal);\n    createLayout({\n      path: normal,\n      // staticPaths\n      // NOTE(EvanBacon): Support routes with top-level \"use client\"\n      component: route.loadRoute().default,\n      render: 'static',\n      ...route.loadRoute().unstable_settings,\n      // ...config,\n    });\n\n    route.children.sort(sortRoutes).forEach((child) => {\n      if (child.type === 'layout') {\n        addLayout(child, normal);\n      } else {\n        const normal = getContextKey(child.contextKey).replace(/\\/index$/, '');\n        console.log('page:', normal, parent, child);\n        createPage({\n          path: normal,\n          // NOTE(EvanBacon): Support routes with top-level \"use client\"\n          component: child.loadRoute().default,\n          render: 'dynamic',\n          ...child.loadRoute().unstable_settings,\n        });\n      }\n    });\n  }\n\n  addLayout(routes);\n\n  // console.log(routes);\n\n  // for (const file of files) {\n  //   const mod = await ctx(file);\n\n  //   // NOTE(EvanBacon): Support `getConfig` in routes with top-level \"use client\"\n  //   const config = 'getConfig' in mod ? await mod.getConfig?.() : {};\n  //   const pathItems = file\n  //     .replace(/^\\.\\//, '')\n  //     .replace(/\\.\\w+$/, '')\n  //     .split('/')\n  //     .filter(Boolean);\n\n  //   const path =\n  //     '/' +\n  //     (['_layout', 'index'].includes(pathItems.at(-1)!) ? pathItems.slice(0, -1) : pathItems).join(\n  //       '/'\n  //     );\n\n  //   unstable_setBuildData(path, files);\n\n  //   if (pathItems.at(-1) === '_layout') {\n  //     console.log('layout:', path, file);\n\n  //     // TODO: Support static paths\n  //     // const staticPaths = await mod.generateStaticParams()\n\n  //     createLayout({\n  //       path,\n  //       // staticPaths\n  //       // NOTE(EvanBacon): Support routes with top-level \"use client\"\n  //       component: 'default' in mod ? mod.default : mod,\n  //       render: 'static',\n  //       ...config,\n  //     });\n  //   } else {\n  //     console.log('page:', path, file);\n  //     createPage({\n  //       path,\n  //       // NOTE(EvanBacon): Support routes with top-level \"use client\"\n  //       component: 'default' in mod ? mod.default : mod,\n  //       render: 'dynamic',\n  //       ...config,\n  //     });\n  //   }\n  // }\n});\n"]}