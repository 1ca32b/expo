{"version":3,"file":"html-renderer.js","sourceRoot":"","sources":["../../src/rsc/html-renderer.ts"],"names":[],"mappings":"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","sourcesContent":["// SSR middleware:\n\n// import '@expo/metro-runtime/async-require';\n\nimport type {\n  default as ReactType,\n  createElement as createElementType,\n  ReactNode,\n  FunctionComponent,\n  ComponentProps,\n} from 'react';\n// import type * as RDServerType from 'react-dom/server.edge';\n// import type { default as RSDWClientType } from 'react-server-dom-webpack/client.edge';\n\nimport { createElement } from 'react';\nimport { renderToReadableStream } from 'react-dom/server.edge';\nimport { createFromReadableStream } from 'react-server-dom-webpack/client.edge';\nimport { ServerRoot } from './router/host';\n// import { injectRSCPayload } from 'rsc-html-stream/server';\n\nimport 'expo-router/build/rsc/router/client.js';\n\nimport 'react-dom';\n\nconsole.log('REACT VERSIONS:', {\n  react: require('react/package.json').version,\n  'react-dom': require('react-dom/package.json').version,\n});\n\nglobal.__webpack_chunk_load__ = async (chunk) => {\n  return globalThis.__metro_node_chunk_load__(chunk);\n};\n\nglobal.__webpack_require__ = (id) => {\n  console.log('[SSR]__webpack_require__:', id);\n  return global[`__r`](\n    // TODO: The require path needs to be populated with the right ID.\n    'node:' + id\n  );\n};\n\n// renderHtml:\n// Import\n// - react -> createElement,\n// - react-dom/server.edge -> renderToReadableStream\n// - react-server-dom-webpack/client.edge -> createFromReadableStream\n// - expo-router/build/rsc/router/host -> ServerRoot\n\n// Load SSR config for pathname + searchParams (could be nullish?)\n\n// Create ReadableStream by rendering RSC for HTML (input + searchParams) (option passed with renderRscForHtml)\n\n// Create a moduleMap Proxy. Should have some client chunk loading for SSR.\n\n// Perform stream.tee() on the ReadableStream\n// Use createFromReadableStream on stream1 for the elements.\n// Use createFromReadableStream on ssrConfig.body for the body.\n\n// Create a new readable stream with renderToReadableStream and pass it `buildHtml` which creates a React HTML element.\n// pipe through \"rectify html\" -- use as-is from waku and disable to find out what it's doing.\n// pipe through \"inject script\" -- Should inject `__EXPO_PREFETCHED__` in the head that is used in the client module.\n// pipe through injecting RSC payloads from stream2 (rsc-html-stream/server).\n\ntype ResolveClientEntry = (id: string) => { id: string; chunks: string[] };\ntype ImportManifestEntry = any;\n\nconst DIST_SSR = 'TODO';\n\nexport async function renderHtml({\n  pathname,\n  isExporting,\n  htmlHead,\n  searchParams,\n  serverRoot,\n  loadModule,\n  getSsrConfigForHtml,\n  resolveClientEntry,\n  renderRscForHtml,\n  scriptUrl,\n}: {\n  scriptUrl: string;\n  pathname: string;\n  isExporting: boolean;\n  searchParams: URLSearchParams;\n  htmlHead: string;\n  serverRoot: string;\n  renderRscForHtml: (input: string, searchParams: URLSearchParams) => Promise<ReadableStream>;\n  getSsrConfigForHtml: (\n    pathname: string,\n    searchParams: URLSearchParams\n  ) => Promise<{\n    input: string;\n    searchParams?: URLSearchParams;\n    body: ReadableStream;\n  } | null>;\n  resolveClientEntry: ResolveClientEntry;\n  loadModule: (id: string) => Promise<any>;\n}) {\n  // const loadClientModule = async <T>(name: string): Promise<T> => {\n  //   // console.log('loadClientModule:', name);\n  //   const m = await $$require_external(name);\n  //   // console.log('loadClientModule.2:', m);\n  //   // Interop default\n  //   return { default: m.default ? Promise.resolve(m.default) : m };\n  // };\n  //   const { injectRSCPayload } = await import('rsc-html-stream/server');\n\n  // const [\n  //   {\n  //     default: { createElement },\n  //   },\n  //   {\n  //     default: { renderToReadableStream },\n  //   },\n  //   {\n  //     default: { createFromReadableStream },\n  //   },\n  //   {\n  //     default: { ServerRoot },\n  //   },\n  // ] = await Promise.all([\n  //   loadClientModule<{ default: typeof ReactType }>('react'),\n  //   loadClientModule<{ default: typeof RDServerType }>('react-dom/server.edge'),\n  //   loadClientModule<{ default: typeof RSDWClientType }>('react-server-dom-webpack/client.edge'),\n  //   loadClientModule<typeof import('./router/host')>('expo-router/build/rsc/router/host'),\n  // ]);\n\n  const ssrConfig = await getSsrConfigForHtml?.(pathname, searchParams);\n  if (!ssrConfig) {\n    return null;\n  }\n  console.log('render stream:', ssrConfig);\n  let stream: ReadableStream;\n  try {\n    stream = await renderRscForHtml(ssrConfig.input || '/', ssrConfig.searchParams || searchParams);\n  } catch (e) {\n    if ('statusCode' in e && e.statusCode === 404) {\n      return null;\n    }\n    throw e;\n  }\n\n  const moduleMap = new Proxy({} as Record<string, Record<string, ImportManifestEntry>>, {\n    get(_target, filePath: string) {\n      return new Proxy(\n        {},\n        {\n          get(_target, name: string) {\n            const fp = joinPath(serverRoot, filePath);\n            // console.log('SSR module map:', fp, filePath, name);\n\n            const { id, chunks } = resolveClientEntry(fp);\n            // console.log('SSR module map>>id:', id, chunks);\n            return { id, chunks, name, async: true };\n\n            // const resolveClientEntry\n            // // TODO: All of this...\n            // // const id = filePath.slice(serverRoot.length);\n            // // (globalThis as any).__EXPO_CLIENT_CHUNK_LOAD__(id, (id: string) =>\n            // //   loadModule(joinPath(DIST_SSR, id))\n            // // );\n            // return { id: filePath, chunks: [id], name };\n          },\n        }\n      );\n    },\n  });\n\n  console.log('moduleMap:', moduleMap);\n  console.log('stream:', stream);\n\n  // Safe verbetim from waku\n\n  const config = {\n    basePath: '',\n    htmlAttrs: '',\n    rscPath: '/_flight',\n    srcDir: 'TODO+SRC',\n  };\n  const SRC_MAIN = 'TODO+SRC+MAIN';\n\n  const [stream1, stream2] = stream.tee();\n  const elements: Promise<Record<string, ReactNode>> = createFromReadableStream(stream1, {\n    ssrManifest: { moduleMap, moduleLoading: null },\n  });\n  console.log('elements:', elements);\n  const body: Promise<ReactNode> = createFromReadableStream(ssrConfig.body, {\n    ssrManifest: { moduleMap, moduleLoading: null },\n  });\n  const readable = (\n    await renderToReadableStream(\n      buildHtml(\n        createElement,\n        config.htmlAttrs,\n        htmlHead,\n        createElement(\n          ServerRoot as FunctionComponent<Omit<ComponentProps<typeof ServerRoot>, 'children'>>,\n          { elements },\n          body as any\n        )\n      ),\n      {\n        onError(err: unknown) {\n          console.error(err);\n        },\n      }\n    )\n  )\n    .pipeThrough(rectifyHtml())\n    .pipeThrough(\n      injectScript(\n        config.basePath + config.rscPath + '/web/' + encodeInput(ssrConfig.input),\n        !isExporting ? scriptUrl : ''\n      )\n    )\n    .pipeThrough(injectRSCPayload(stream2));\n  return readable;\n}\n\nconst parseHtmlAttrs = (attrs: string): Record<string, string> => {\n  // HACK this is very brittle\n  const result: Record<string, string> = {};\n  const kebab2camel = (s: string) => s.replace(/-./g, (m) => m[1]!.toUpperCase());\n  const matches = attrs.matchAll(/(?<=^|\\s)([^\\s=]+)=\"([^\"]+)\"(?=\\s|$)/g);\n  for (const match of matches) {\n    result[kebab2camel(match[1]!)] = match[2]!;\n  }\n  return result;\n};\n\nconst buildHtml = (\n  createElement: typeof createElementType,\n  attrs: string,\n  head: string,\n  body: ReactNode\n) =>\n  createElement(\n    'html',\n    attrs ? parseHtmlAttrs(attrs) : null,\n    createElement('head', { dangerouslySetInnerHTML: { __html: head } }),\n    createElement('body', { 'data-hydrate': true }, body)\n  );\n\nconst fakeFetchCode = `\nPromise.resolve(new Response(new ReadableStream({\n  start(c) {\n    const d = (self.__FLIGHT_DATA ||= []);\n    const t = new TextEncoder();\n    const f = (s) => c.enqueue(typeof s === 'string' ? t.encode(s) : s);\n    d.forEach(f);\n    d.push = f;\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => c.close());\n    } else {\n      c.close();\n    }\n  }\n})))\n`\n  .split('\\n')\n  .map((line) => line.trim())\n  .join('');\n\nconst injectScript = (\n  urlForFakeFetch: string,\n  mainJsPath: string // for DEV only, pass `''` for PRD\n) => {\n  const modifyHead = (data: string) => {\n    const matchPrefetched = data.match(\n      // HACK This is very brittle\n      /(.*<script[^>]*>\\nglobalThis\\.__EXPO_PREFETCHED__ = {\\n)(.*?)(\\n};.*)/s\n    );\n    if (matchPrefetched) {\n      data = matchPrefetched[1] + `  '${urlForFakeFetch}': ${fakeFetchCode},` + matchPrefetched[3];\n    }\n    const closingHeadIndex = data.indexOf('</head>');\n    if (closingHeadIndex === -1) {\n      throw new Error('closing head not found');\n    }\n    let code = '';\n    if (!matchPrefetched) {\n      code += `\n  globalThis.__EXPO_PREFETCHED__ = {\n    '${urlForFakeFetch}': ${fakeFetchCode},\n  };\n  `;\n    }\n    if (code) {\n      data =\n        data.slice(0, closingHeadIndex) +\n        `<script type=\"module\" async>${code}</script>` +\n        data.slice(closingHeadIndex);\n    }\n    return data;\n  };\n  const encoder = new TextEncoder();\n  const decoder = new TextDecoder();\n  let headSent = false;\n  let data = '';\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (!(chunk instanceof Uint8Array)) {\n        throw new Error('Unknown chunk type');\n      }\n      data += decoder.decode(chunk);\n      if (!headSent) {\n        if (!/<\\/head><body[^>]*>/.test(data)) {\n          return;\n        }\n        headSent = true;\n        data = modifyHead(data);\n        if (mainJsPath) {\n          const closingBodyIndex = data.indexOf('</body>');\n          const [firstPart, secondPart] =\n            closingBodyIndex === -1\n              ? [data, '']\n              : [data.slice(0, closingBodyIndex), data.slice(closingBodyIndex)];\n          data = firstPart + `<script src=\"${mainJsPath}\" async></script>` + secondPart;\n        }\n      }\n      controller.enqueue(encoder.encode(data));\n      data = '';\n    },\n  });\n};\n\n// HACK for now, do we want to use HTML parser?\nconst rectifyHtml = () => {\n  const pending: Uint8Array[] = [];\n  const decoder = new TextDecoder();\n  let timer: ReturnType<typeof setTimeout> | undefined;\n  return new TransformStream({\n    transform(chunk, controller) {\n      if (!(chunk instanceof Uint8Array)) {\n        throw new Error('Unknown chunk type');\n      }\n      pending.push(chunk);\n      if (/<\\/\\w+>$/.test(decoder.decode(chunk))) {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n          controller.enqueue(concatUint8Arrays(pending.splice(0)));\n        });\n      }\n    },\n    flush(controller) {\n      clearTimeout(timer);\n      if (pending.length) {\n        controller.enqueue(concatUint8Arrays(pending.splice(0)));\n      }\n    },\n  });\n};\n\nconst filePathToFileURL = (filePath: string) => 'file://' + encodeURI(filePath);\n\n// for filePath\nconst joinPath = (...paths: string[]) => {\n  const isAbsolute = paths[0]?.startsWith('/');\n  const items = ([] as string[]).concat(...paths.map((path) => path.split('/')));\n  let i = 0;\n  while (i < items.length) {\n    if (items[i] === '.' || items[i] === '') {\n      items.splice(i, 1);\n    } else if (items[i] === '..') {\n      if (i > 0) {\n        items.splice(i - 1, 2);\n        --i;\n      } else {\n        items.splice(i, 1);\n      }\n    } else {\n      ++i;\n    }\n  }\n  return (isAbsolute ? '/' : '') + items.join('/') || '.';\n};\n\nconst concatUint8Arrays = (arrs: Uint8Array[]): Uint8Array => {\n  const len = arrs.reduce((acc, arr) => acc + arr.length, 0);\n  const array = new Uint8Array(len);\n  let offset = 0;\n  for (const arr of arrs) {\n    array.set(arr, offset);\n    offset += arr.length;\n  }\n  return array;\n};\n\nconst encodeInput = (input: string) => {\n  if (input === '') {\n    return 'index.txt';\n  }\n  if (input === 'index') {\n    throw new Error('Input should not be `index`');\n  }\n  if (input.startsWith('/')) {\n    throw new Error('Input should not start with `/`');\n  }\n  if (input.endsWith('/')) {\n    throw new Error('Input should not end with `/`');\n  }\n  return input + '.txt';\n};\n\nconst encoder = new TextEncoder();\nconst trailer = '</body></html>';\n\n// Extracted cuz ESM in Node.js is stupid\nfunction injectRSCPayload(rscStream) {\n  const decoder = new TextDecoder();\n  let resolveFlightDataPromise;\n  const flightDataPromise = new Promise((resolve) => (resolveFlightDataPromise = resolve));\n  let started = false;\n  return new TransformStream({\n    transform(chunk, controller) {\n      let buf = decoder.decode(chunk);\n      if (buf.endsWith(trailer)) {\n        buf = buf.slice(0, -trailer.length);\n      }\n      controller.enqueue(encoder.encode(buf));\n\n      if (!started) {\n        started = true;\n        setTimeout(async () => {\n          try {\n            await writeRSCStream(rscStream, controller);\n          } catch (err) {\n            controller.error(err);\n          }\n          resolveFlightDataPromise();\n        }, 0);\n      }\n    },\n    async flush(controller) {\n      await flightDataPromise;\n      controller.enqueue(encoder.encode('</body></html>'));\n    },\n  });\n}\n\nasync function writeRSCStream(rscStream, controller) {\n  const decoder = new TextDecoder('utf-8', { fatal: true });\n  for await (const chunk of rscStream) {\n    // Try decoding the chunk to send as a string.\n    // If that fails (e.g. binary data that is invalid unicode), write as base64.\n    try {\n      writeChunk(JSON.stringify(decoder.decode(chunk, { stream: true })), controller);\n    } catch (err) {\n      const base64 = JSON.stringify(btoa(String.fromCodePoint(...chunk)));\n      writeChunk(`Uint8Array.from(atob(${base64}), m => m.codePointAt(0))`, controller);\n    }\n  }\n\n  const remaining = decoder.decode();\n  if (remaining.length) {\n    writeChunk(JSON.stringify(remaining), controller);\n  }\n}\n\nfunction writeChunk(chunk, controller) {\n  controller.enqueue(\n    encoder.encode(`<script>${escapeScript(`(self.__FLIGHT_DATA||=[]).push(${chunk})`)}</script>`)\n  );\n}\n\n// Escape closing script tags and HTML comments in JS content.\n// https://www.w3.org/TR/html52/semantics-scripting.html#restrictions-for-contents-of-script-elements\n// Avoid replacing </script with <\\/script as it would break the following valid JS: 0</script/ (i.e. regexp literal).\n// Instead, escape the s character.\nfunction escapeScript(script) {\n  return script.replace(/<!--/g, '<\\\\!--').replace(/<\\/(script)/gi, '</\\\\$1');\n}\n"]}