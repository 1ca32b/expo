{"version":3,"file":"ScreenRedirect.js","sourceRoot":"","sources":["../../src/views/ScreenRedirect.tsx"],"names":[],"mappings":";;;AAAA,oCAAqC;AAErC,sDAAmD;AAMnD,SAAgB,cAAc,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE,UAAU,EAAiB;IACrF,MAAM,MAAM,GAAG,IAAA,iBAAS,GAAE,CAAC;IAC3B,IAAA,+BAAc,EAAC,GAAG,EAAE;QAClB,IAAI;YACF,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,mBAAmB,EAAE,UAAU,EAAE,CAAC,CAAC;SAC3D;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACtB;IACH,CAAC,CAAC,CAAC;IACH,OAAO,IAAI,CAAC;AACd,CAAC;AAVD,wCAUC","sourcesContent":["import { useRouter } from '../hooks';\nimport { RedirectProps } from '../link/Link';\nimport { useFocusEffect } from '../useFocusEffect';\n\nexport type ScreenRedirectProps = RedirectProps & {\n  name: string;\n};\n\nexport function ScreenRedirect({ href, relativeToDirectory, withAnchor }: RedirectProps) {\n  const router = useRouter();\n  useFocusEffect(() => {\n    try {\n      router.replace(href, { relativeToDirectory, withAnchor });\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return null;\n}\n"]}