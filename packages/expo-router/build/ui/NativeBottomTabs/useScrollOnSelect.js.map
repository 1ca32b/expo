{"version":3,"file":"useScrollOnSelect.js","sourceRoot":"","sources":["../../../src/ui/NativeBottomTabs/useScrollOnSelect.tsx"],"names":[],"mappings":";;AAYA,8CAmBC;AA/BD,yDAAiE;AACjE,iCAAiD;AAEjD,mFAAmE;AAEnE,qDAAkD;AAOlD,SAAgB,iBAAiB,CAAC,IAAW;IAC3C,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC;IAC3C,MAAM,aAAa,GAAG,IAAA,cAAM,EAAa,IAAI,CAAC,CAAC;IAE/C,MAAM,MAAM,GAAG,IAAA,kDAAiB,GAAE,CAAC;IACnC,MAAM,YAAY,GAAG,UAAU,IAAI,8BAAmB,CAAC,CAAC,CAAC,CAAC,IAAA,WAAG,EAAC,8BAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7F,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;IAEtE,MAAM,WAAW,GAAG,IAAA,mBAAW,EAAC,GAAG,EAAE;QACnC,IAAI,aAAa,CAAC,OAAO,EAAE,CAAC;YAC1B,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACnE,CAAC;IACH,CAAC,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC;IAE9B,IAAA,+BAAc,EAAC,WAAW,CAAC,CAAC;IAE5B,OAAO;QACL,aAAa;KACd,CAAC;AACJ,CAAC","sourcesContent":["import { HeaderHeightContext } from '@react-navigation/elements';\nimport { use, useCallback, useRef } from 'react';\nimport { ScrollView } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { useOnTabSelect } from './useOnTabSelect';\n\ninterface Args {\n  noInset?: boolean;\n  withHeader?: boolean;\n}\n\nexport function useScrollOnSelect(args?: Args) {\n  const { noInset, withHeader } = args ?? {};\n  const scrollViewRef = useRef<ScrollView>(null);\n\n  const insets = useSafeAreaInsets();\n  const headerHeight = withHeader && HeaderHeightContext ? (use(HeaderHeightContext) ?? 0) : 0;\n  const topInset = noInset ? 0 : withHeader ? headerHeight : insets.top;\n\n  const onTabSelect = useCallback(() => {\n    if (scrollViewRef.current) {\n      scrollViewRef.current.scrollTo({ y: -topInset, animated: true });\n    }\n  }, [scrollViewRef, topInset]);\n\n  useOnTabSelect(onTabSelect);\n\n  return {\n    scrollViewRef,\n  };\n}\n"]}