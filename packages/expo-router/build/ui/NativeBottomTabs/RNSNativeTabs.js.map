{"version":3,"file":"RNSNativeTabs.js","sourceRoot":"","sources":["../../../src/ui/NativeBottomTabs/RNSNativeTabs.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Children, useState } from 'react';\nimport { View, Text, StyleSheet, type ColorValue, type ViewProps, Pressable } from 'react-native';\nimport { WithDefault } from 'react-native/Libraries/Types/CodegenTypes';\n\nimport { RNSNativeTabsScreen, RNSNativeTabsScreenProps } from './RNSNativeTabsScreen';\n\n// TODO: Report issue on RN repo, that nesting color value inside a struct does not work.\n// Generated code is ok, but the value is not passed down correctly - whatever color is set\n// host component receives RGBA(0, 0, 0, 0) anyway.\ntype TabBarAppearance = Readonly<{\n  backgroundColor?: ColorValue;\n}>;\n\ntype BlurEffect =\n  | 'none'\n  | 'extraLight'\n  | 'light'\n  | 'dark'\n  | 'regular'\n  | 'prominent'\n  | 'systemUltraThinMaterial'\n  | 'systemThinMaterial'\n  | 'systemMaterial'\n  | 'systemThickMaterial'\n  | 'systemChromeMaterial'\n  | 'systemUltraThinMaterialLight'\n  | 'systemThinMaterialLight'\n  | 'systemMaterialLight'\n  | 'systemThickMaterialLight'\n  | 'systemChromeMaterialLight'\n  | 'systemUltraThinMaterialDark'\n  | 'systemThinMaterialDark'\n  | 'systemMaterialDark'\n  | 'systemThickMaterialDark'\n  | 'systemChromeMaterialDark';\n\nexport interface NativeProps extends ViewProps {\n  tabBarAppearance?: TabBarAppearance;\n  tabBarBackgroundColor?: ColorValue;\n  tabBarBlurEffect?: WithDefault<BlurEffect, 'none'>;\n}\n\nexport function RNSNativeTabs(props: NativeProps) {\n  const [lastFocus, setLastFocus] = useState<number>(0);\n  const [currentFocus, setCurrentFocus] = useState<number>(lastFocus);\n\n  const propFocus = Children.map(props.children, (child) => {\n    if (\n      !child ||\n      typeof child !== 'object' ||\n      !('props' in child) ||\n      typeof child.props !== 'object' ||\n      !child.props\n    ) {\n      return null;\n    }\n\n    return (child.props as Record<string, any>).isFocused;\n  })?.findIndex((child) => child === true);\n\n  if (propFocus !== undefined && propFocus !== lastFocus) {\n    setLastFocus(propFocus);\n    setCurrentFocus(propFocus);\n  }\n\n  return (\n    <View style={styles.root} testID=\"native-tabs-root\">\n      {Children.map(props.children, (child, index) => {\n        if (React.isValidElement(child) && !child.props) {\n          return null;\n        }\n\n        if (index !== currentFocus) {\n          return null;\n        }\n\n        return (\n          <>\n            <View style={{ flex: 1 }}>{child}</View>\n          </>\n        );\n      })}\n      <View\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          padding: 10,\n          backgroundColor: props.tabBarAppearance?.backgroundColor,\n        }}>\n        {Children.map(props.children, (child, index) => {\n          if (!React.isValidElement(child) || child?.type !== RNSNativeTabsScreen) {\n            return null;\n          }\n          return (\n            <Pressable\n              onPress={() => {\n                setCurrentFocus(index);\n              }}\n              style={{\n                borderColor: 'black',\n                borderWidth: 1,\n                padding: 10,\n              }}>\n              <Text>{(child.props as RNSNativeTabsScreenProps | undefined)?.badgeValue ?? ''}</Text>\n            </Pressable>\n          );\n        })}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n  },\n});\n"]}