{"version":3,"file":"Navigator.js","names":["Object","defineProperty","exports","value","DefaultNavigator","Navigator","NavigatorContext","QualifiedSlot","Slot","useNavigatorContext","useSlot","_native","data","require","React","_interopRequireWildcard","_reactNativeSafeAreaContext","_Screen","_Route","_withLayoutContext","_useScreens","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","createContext","process","env","NODE_ENV","displayName","initialRouteName","screenOptions","children","router","contextKey","useContextKey","screens","otherSlot","useFilterScreenChildren","isCustomNavigator","sorted","useSortedScreens","length","console","warn","createElement","QualifiedNavigator","StackRouter","state","navigation","descriptors","NavigationContent","useNavigationBuilder","id","Provider","context","useContext","Error","current","routes","find","route","index","key","render","props","SafeAreaView","style","flex","Screen"],"sources":["../../../src/views/Navigator.tsx"],"sourcesContent":["// Copyright Â© 2024 650 Industries.\n'use client';\n\nimport { RouterFactory, StackRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport { Screen } from './Screen';\nimport { useContextKey } from '../Route';\nimport { useFilterScreenChildren } from '../layouts/withLayoutContext';\nimport { useSortedScreens } from '../useScreens';\n\ntype NavigatorTypes = ReturnType<typeof useNavigationBuilder>;\n\n// TODO: This might already exist upstream, maybe something like `useCurrentRender` ?\nexport const NavigatorContext = React.createContext<{\n  contextKey: string;\n  state: NavigatorTypes['state'];\n  navigation: NavigatorTypes['navigation'];\n  descriptors: NavigatorTypes['descriptors'];\n  router: RouterFactory<any, any, any>;\n} | null>(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  NavigatorContext.displayName = 'NavigatorContext';\n}\n\nexport type NavigatorProps = {\n  initialRouteName?: Parameters<typeof useNavigationBuilder>[1]['initialRouteName'];\n  screenOptions?: Parameters<typeof useNavigationBuilder>[1]['screenOptions'];\n  children?: Parameters<typeof useNavigationBuilder>[1]['children'];\n  router?: Parameters<typeof useNavigationBuilder>[0];\n};\n\n/** An unstyled custom navigator. Good for basic web layouts */\nexport function Navigator({ initialRouteName, screenOptions, children, router }: NavigatorProps) {\n  const contextKey = useContextKey();\n\n  // Allows adding Screen components as children to configure routes.\n  const { screens, children: otherSlot } = useFilterScreenChildren(children, {\n    isCustomNavigator: true,\n    contextKey,\n  });\n\n  const sorted = useSortedScreens(screens ?? []);\n\n  if (!sorted.length) {\n    console.warn(`Navigator at \"${contextKey}\" has no children.`);\n    return null;\n  }\n\n  return (\n    <QualifiedNavigator\n      initialRouteName={initialRouteName}\n      screenOptions={screenOptions}\n      screens={sorted}\n      contextKey={contextKey}\n      router={router}>\n      {otherSlot}\n    </QualifiedNavigator>\n  );\n}\n\nfunction QualifiedNavigator({\n  initialRouteName,\n  screenOptions,\n  children,\n  screens,\n  contextKey,\n  router = StackRouter,\n}: NavigatorProps & { contextKey: string; screens: React.ReactNode[] }) {\n  const { state, navigation, descriptors, NavigationContent } = useNavigationBuilder(router, {\n    // Used for getting the parent with navigation.getParent('/normalized/path')\n    id: contextKey,\n    children: screens,\n    screenOptions,\n    initialRouteName,\n  });\n\n  return (\n    <NavigatorContext.Provider\n      value={{\n        contextKey,\n        state,\n        navigation,\n        descriptors,\n        router,\n      }}>\n      <NavigationContent>{children}</NavigationContent>\n    </NavigatorContext.Provider>\n  );\n}\n\nexport function useNavigatorContext() {\n  const context = React.useContext(NavigatorContext);\n  if (!context) {\n    throw new Error('useNavigatorContext must be used within a <Navigator />');\n  }\n  return context;\n}\n\nexport function useSlot() {\n  const context = useNavigatorContext();\n\n  const { state, descriptors } = context;\n\n  const current = state.routes.find((route, i) => {\n    return state.index === i;\n  });\n\n  if (!current) {\n    return null;\n  }\n\n  return descriptors[current.key]?.render() ?? null;\n}\n\n/** Renders the currently selected content. */\nexport function Slot(props: Omit<NavigatorProps, 'children'>) {\n  const contextKey = useContextKey();\n  const context = React.useContext(NavigatorContext);\n  // Ensure the context is for the current contextKey\n  if (context?.contextKey !== contextKey) {\n    // Qualify the content and re-export.\n    return (\n      <Navigator {...props}>\n        <QualifiedSlot />\n      </Navigator>\n    );\n  }\n\n  return <QualifiedSlot />;\n}\n\nexport function QualifiedSlot() {\n  return useSlot();\n}\n\nexport function DefaultNavigator() {\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <Navigator>\n        <QualifiedSlot />\n      </Navigator>\n    </SafeAreaView>\n  );\n}\n\nNavigator.Slot = Slot;\nNavigator.useContext = useNavigatorContext;\n\n/** Used to configure route settings. */\nNavigator.Screen = Screen;\n"],"mappings":"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"}