{"version":3,"file":"LocationProvider.js","names":["_getStateFromPath","data","require","getRouteInfoFromState","getPathFromState","state","baseUrl","path","qualified","unstable_globalHref","pathname","stripBaseUrl","split","isIndex","isIndexPath","getNormalizedStatePath","route","routes","index","length","params","screen","statePath","segments","filter","Boolean","map","decodeURIComponent","Object","entries","reduce","prev","key","value","Array","isArray","v"],"sources":["../../src/LocationProvider.tsx"],"sourcesContent":["import type { State } from './fork/getPathFromState';\nimport { stripBaseUrl } from './fork/getStateFromPath';\n\ntype SearchParams = Record<string, string | string[]>;\n\nexport type UrlObject = {\n  unstable_globalHref: string;\n  pathname: string;\n  readonly params: SearchParams;\n  segments: string[];\n  isIndex: boolean;\n};\n\nexport function getRouteInfoFromState(\n  getPathFromState: (state: State, asPath: boolean) => { path: string; params: any },\n  state: State,\n  baseUrl?: string\n): UrlObject {\n  const { path } = getPathFromState(state, false);\n  const qualified = getPathFromState(state, true);\n\n  return {\n    // TODO: This may have a predefined origin attached in the future.\n    unstable_globalHref: path,\n    pathname: stripBaseUrl(path, baseUrl).split('?')['0'],\n    isIndex: isIndexPath(state),\n    ...getNormalizedStatePath(qualified, baseUrl),\n  };\n}\n\nfunction isIndexPath(state: State) {\n  const route = state.routes[state.index ?? state.routes.length - 1];\n  if (route.state) {\n    return isIndexPath(route.state);\n  }\n  // router.params is typed as 'object', so this usual syntax is to please TypeScript\n  if (route.params && 'screen' in route.params) {\n    return route.params.screen === 'index';\n  }\n  return false;\n}\n\n// TODO: Split up getPathFromState to return all this info at once.\nexport function getNormalizedStatePath(\n  {\n    path: statePath,\n    params,\n  }: {\n    path: string;\n    params: any;\n  },\n  baseUrl?: string\n): Pick<UrlObject, 'segments' | 'params'> {\n  const [pathname] = statePath.split('?');\n  return {\n    // Strip empty path at the start\n    segments: stripBaseUrl(pathname, baseUrl).split('/').filter(Boolean).map(decodeURIComponent),\n    // TODO: This is not efficient, we should generate based on the state instead\n    // of converting to string then back to object\n    params: Object.entries(params).reduce((prev, [key, value]) => {\n      if (Array.isArray(value)) {\n        prev[key] = value.map((v: string) => {\n          try {\n            return decodeURIComponent(v);\n          } catch {\n            return v;\n          }\n        });\n      } else {\n        try {\n          prev[key] = decodeURIComponent(value as string);\n        } catch {\n          prev[key] = value as string;\n        }\n      }\n      return prev;\n    }, {} as SearchParams),\n  };\n}\n"],"mappings":";;;;;;;AACA,SAAAA,kBAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,iBAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAYO,SAASE,qBAAqBA,CACnCC,gBAAkF,EAClFC,KAAY,EACZC,OAAgB,EACL;EACX,MAAM;IAAEC;EAAK,CAAC,GAAGH,gBAAgB,CAACC,KAAK,EAAE,KAAK,CAAC;EAC/C,MAAMG,SAAS,GAAGJ,gBAAgB,CAACC,KAAK,EAAE,IAAI,CAAC;EAE/C,OAAO;IACL;IACAI,mBAAmB,EAAEF,IAAI;IACzBG,QAAQ,EAAE,IAAAC,gCAAY,EAACJ,IAAI,EAAED,OAAO,CAAC,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACrDC,OAAO,EAAEC,WAAW,CAACT,KAAK,CAAC;IAC3B,GAAGU,sBAAsB,CAACP,SAAS,EAAEF,OAAO;EAC9C,CAAC;AACH;AAEA,SAASQ,WAAWA,CAACT,KAAY,EAAE;EACjC,MAAMW,KAAK,GAAGX,KAAK,CAACY,MAAM,CAACZ,KAAK,CAACa,KAAK,IAAIb,KAAK,CAACY,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC;EAClE,IAAIH,KAAK,CAACX,KAAK,EAAE;IACf,OAAOS,WAAW,CAACE,KAAK,CAACX,KAAK,CAAC;EACjC;EACA;EACA,IAAIW,KAAK,CAACI,MAAM,IAAI,QAAQ,IAAIJ,KAAK,CAACI,MAAM,EAAE;IAC5C,OAAOJ,KAAK,CAACI,MAAM,CAACC,MAAM,KAAK,OAAO;EACxC;EACA,OAAO,KAAK;AACd;;AAEA;AACO,SAASN,sBAAsBA,CACpC;EACER,IAAI,EAAEe,SAAS;EACfF;AAIF,CAAC,EACDd,OAAgB,EACwB;EACxC,MAAM,CAACI,QAAQ,CAAC,GAAGY,SAAS,CAACV,KAAK,CAAC,GAAG,CAAC;EACvC,OAAO;IACL;IACAW,QAAQ,EAAE,IAAAZ,gCAAY,EAACD,QAAQ,EAAEJ,OAAO,CAAC,CAACM,KAAK,CAAC,GAAG,CAAC,CAACY,MAAM,CAACC,OAAO,CAAC,CAACC,GAAG,CAACC,kBAAkB,CAAC;IAC5F;IACA;IACAP,MAAM,EAAEQ,MAAM,CAACC,OAAO,CAACT,MAAM,CAAC,CAACU,MAAM,CAAC,CAACC,IAAI,EAAE,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;MAC5D,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;QACxBF,IAAI,CAACC,GAAG,CAAC,GAAGC,KAAK,CAACP,GAAG,CAAEU,CAAS,IAAK;UACnC,IAAI;YACF,OAAOT,kBAAkB,CAACS,CAAC,CAAC;UAC9B,CAAC,CAAC,MAAM;YACN,OAAOA,CAAC;UACV;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,IAAI;UACFL,IAAI,CAACC,GAAG,CAAC,GAAGL,kBAAkB,CAACM,KAAe,CAAC;QACjD,CAAC,CAAC,MAAM;UACNF,IAAI,CAACC,GAAG,CAAC,GAAGC,KAAe;QAC7B;MACF;MACA,OAAOF,IAAI;IACb,CAAC,EAAE,CAAC,CAAiB;EACvB,CAAC;AACH"}