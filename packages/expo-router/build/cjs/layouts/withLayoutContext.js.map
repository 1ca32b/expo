{"version":3,"file":"withLayoutContext.js","names":["_react","data","_interopRequireDefault","require","_Route","_useScreens","_Screen","obj","__esModule","default","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","useFilterScreenChildren","children","isCustomNavigator","contextKey","React","useMemo","customChildren","screens","Children","map","child","isValidElement","type","Screen","props","name","Error","process","env","NODE_ENV","some","push","console","warn","names","screen","Set","size","withLayoutContext","Nav","processor","Navigator","forwardRef","userDefinedChildren","ref","useContextKey","processed","sorted","useSortedScreens","createElement","id"],"sources":["../../../src/layouts/withLayoutContext.tsx"],"sourcesContent":["import { EventMapBase, NavigationState } from '@react-navigation/native';\nimport React from 'react';\n\nimport { useContextKey } from '../Route';\nimport { PickPartial } from '../types';\nimport { useSortedScreens, ScreenProps } from '../useScreens';\nimport { Screen } from '../views/Screen';\n\nexport function useFilterScreenChildren(\n  children: React.ReactNode,\n  {\n    isCustomNavigator,\n    contextKey,\n  }: {\n    isCustomNavigator?: boolean;\n    /** Used for sending developer hints */\n    contextKey?: string;\n  } = {}\n) {\n  return React.useMemo(() => {\n    const customChildren: any[] = [];\n    const screens = React.Children.map(children, (child) => {\n      if (React.isValidElement(child) && child && child.type === Screen) {\n        if (!child.props.name) {\n          throw new Error(\n            `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`\n          );\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          if (['children', 'component', 'getComponent'].some((key) => key in child.props)) {\n            throw new Error(\n              `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`children\\`, \\`component\\`, or \\`getComponent\\` prop when used as a child of a Layout Route`\n            );\n          }\n        }\n        return child.props;\n      } else {\n        if (isCustomNavigator) {\n          customChildren.push(child);\n        } else {\n          console.warn(\n            `Layout children must be of type Screen, all other children are ignored. To use custom children, create a custom <Layout />. Update Layout Route at: \"app${contextKey}/_layout\"`\n          );\n        }\n      }\n    });\n\n    // Add an assertion for development\n    if (process.env.NODE_ENV !== 'production') {\n      // Assert if names are not unique\n      const names = screens?.map((screen) => screen.name);\n      if (names && new Set(names).size !== names.length) {\n        throw new Error('Screen names must be unique: ' + names);\n      }\n    }\n\n    return {\n      screens,\n      children: customChildren,\n    };\n  }, [children]);\n}\n\n/** Return a navigator that automatically injects matched routes and renders nothing when there are no children. Return type with children prop optional */\nexport function withLayoutContext<\n  TOptions extends object,\n  T extends React.ComponentType<any>,\n  State extends NavigationState,\n  EventMap extends EventMapBase,\n>(\n  Nav: T,\n  processor?: (\n    options: ScreenProps<TOptions, State, EventMap>[]\n  ) => ScreenProps<TOptions, State, EventMap>[]\n): React.ForwardRefExoticComponent<\n  React.PropsWithoutRef<PickPartial<React.ComponentProps<T>, 'children'>> &\n    React.RefAttributes<unknown>\n> & {\n  Screen: (props: ScreenProps<TOptions, State, EventMap>) => null;\n} {\n  const Navigator = React.forwardRef(\n    (\n      { children: userDefinedChildren, ...props }: PickPartial<React.ComponentProps<T>, 'children'>,\n      ref\n    ) => {\n      const contextKey = useContextKey();\n\n      const { screens } = useFilterScreenChildren(userDefinedChildren, {\n        contextKey,\n      });\n\n      const processed = processor ? processor(screens ?? []) : screens;\n\n      const sorted = useSortedScreens(processed ?? []);\n\n      // Prevent throwing an error when there are no screens.\n      if (!sorted.length) {\n        return null;\n      }\n\n      return (\n        // @ts-expect-error\n        <Nav {...props} id={contextKey} ref={ref} children={sorted} />\n      );\n    }\n  );\n\n  // @ts-expect-error\n  Navigator.Screen = Screen;\n  // @ts-expect-error\n  return Navigator;\n}\n"],"mappings":"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"}