{"version":3,"file":"ExpoRoot.js","names":["Object","defineProperty","exports","value","ExpoRoot","_expoStatusBar","data","require","_react","_interopRequireWildcard","_Platform","_interopRequireDefault","_reactNativeSafeAreaContext","_NavigationContainer","_routerStore","_serverContext","_statusbar","_Splash","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_extends","assign","bind","target","arguments","length","source","key","apply","isTestEnv","process","env","NODE_ENV","INITIAL_METRICS","Platform","OS","frame","x","y","width","height","insets","top","left","right","bottom","undefined","wrapper","ParentWrapper","Fragment","props","children","createElement","SafeAreaProvider","initialMetrics","hasViewControllerBasedStatusBarAppearance","StatusBar","style","ContextNavigator","initialUrl","window","URL","location","href","context","initialLocation","WrapperComponent","linking","serverContext","useMemo","contextType","pathname","search","url","serverUrl","store","useInitializeExpoRouter","shouldShowTutorial","SplashScreen","hideAsync","Tutorial","Component","rootComponent","ref","navigationRef","initialState","onUnhandledAction","documentTitle","enabled","Provider","action","payload","message","type","JSON","stringify","name","Error","console","error"],"sources":["../../src/ExpoRoot.tsx"],"sourcesContent":["'use client';\n\nimport { LinkingOptions, NavigationAction } from '@react-navigation/native';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { type PropsWithChildren, Fragment, type ComponentType, useMemo } from 'react';\nimport { Platform } from 'react-native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport UpstreamNavigationContainer from './fork/NavigationContainer';\nimport { ExpoLinkingOptions } from './getLinkingConfig';\nimport { useInitializeExpoRouter } from './global-state/router-store';\nimport ServerContext, { ServerContextType } from './global-state/serverContext';\nimport { RequireContext } from './types';\nimport { hasViewControllerBasedStatusBarAppearance } from './utils/statusbar';\nimport { SplashScreen } from './views/Splash';\n\nexport type ExpoRootProps = {\n  context: RequireContext;\n  location?: URL | string;\n  wrapper?: ComponentType<PropsWithChildren>;\n  linking?: Partial<ExpoLinkingOptions>;\n};\n\nexport type NativeIntent = {\n  redirectSystemPath?: (event: {\n    path: string | null;\n    initial: boolean;\n  }) => Promise<string | null | undefined> | string | null | undefined;\n};\n\nconst isTestEnv = process.env.NODE_ENV === 'test';\n\nconst INITIAL_METRICS =\n  Platform.OS === 'web' || isTestEnv\n    ? {\n        frame: { x: 0, y: 0, width: 0, height: 0 },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }\n    : undefined;\n\nexport function ExpoRoot({ wrapper: ParentWrapper = Fragment, ...props }: ExpoRootProps) {\n  /*\n   * Due to static rendering we need to wrap these top level views in second wrapper\n   * View's like <SafeAreaProvider /> generate a <div> so if the parent wrapper\n   * is a HTML document, we need to ensure its inside the <body>\n   */\n  const wrapper = ({ children }: PropsWithChildren) => {\n    return (\n      <ParentWrapper>\n        <SafeAreaProvider\n          // SSR support\n          initialMetrics={INITIAL_METRICS}>\n          {children}\n          {/* Users can override this by adding another StatusBar element anywhere higher in the component tree. */}\n          {!hasViewControllerBasedStatusBarAppearance && <StatusBar style=\"auto\" />}\n        </SafeAreaProvider>\n      </ParentWrapper>\n    );\n  };\n\n  return <ContextNavigator {...props} wrapper={wrapper} />;\n}\n\nconst initialUrl =\n  Platform.OS === 'web' && typeof window !== 'undefined'\n    ? new URL(window.location.href)\n    : undefined;\n\nfunction ContextNavigator({\n  context,\n  location: initialLocation = initialUrl,\n  wrapper: WrapperComponent = Fragment,\n  linking = {},\n}: ExpoRootProps) {\n  // location and linking.getInitialURL are both used to initialize the router state\n  //  - location is used on web and during static rendering\n  //  - linking.getInitialURL is used on native\n  const serverContext = useMemo(() => {\n    let contextType: ServerContextType = {};\n\n    if (initialLocation instanceof URL) {\n      contextType = {\n        location: {\n          pathname: initialLocation.pathname,\n          search: initialLocation.search,\n        },\n      };\n    } else if (typeof initialLocation === 'string') {\n      // The initial location is a string, so we need to parse it into a URL.\n      const url = new URL(initialLocation, 'http://placeholder.base');\n      contextType = {\n        location: {\n          pathname: url.pathname,\n          search: url.search,\n        },\n      };\n    }\n\n    return contextType;\n  }, []);\n\n  /*\n   * The serverUrl is an initial URL used in server rendering environments.\n   * e.g Static renders, units tests, etc\n   */\n  const serverUrl = serverContext.location\n    ? `${serverContext.location.pathname}${serverContext.location.search}`\n    : undefined;\n\n  const store = useInitializeExpoRouter(context, {\n    ...linking,\n    serverUrl,\n  });\n\n  if (store.shouldShowTutorial()) {\n    SplashScreen.hideAsync();\n    if (process.env.NODE_ENV === 'development') {\n      const Tutorial = require('./onboard/Tutorial').Tutorial;\n      return (\n        <WrapperComponent>\n          <Tutorial />\n        </WrapperComponent>\n      );\n    } else {\n      // Ensure tutorial styles are stripped in production.\n      return null;\n    }\n  }\n\n  const Component = store.rootComponent;\n\n  return (\n    <UpstreamNavigationContainer\n      ref={store.navigationRef}\n      initialState={store.initialState}\n      linking={store.linking as LinkingOptions<any>}\n      onUnhandledAction={onUnhandledAction}\n      documentTitle={{\n        enabled: false,\n      }}>\n      <ServerContext.Provider value={serverContext}>\n        <WrapperComponent>\n          <Component />\n        </WrapperComponent>\n      </ServerContext.Provider>\n    </UpstreamNavigationContainer>\n  );\n}\n\nlet onUnhandledAction: (action: NavigationAction) => void;\n\nif (process.env.NODE_ENV !== 'production') {\n  onUnhandledAction = (action: NavigationAction) => {\n    const payload: Record<string, any> | undefined = action.payload;\n\n    let message = `The action '${action.type}'${\n      payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n    } was not handled by any navigator.`;\n\n    switch (action.type) {\n      case 'NAVIGATE':\n      case 'PUSH':\n      case 'REPLACE':\n      case 'JUMP_TO':\n        if (payload?.name) {\n          message += `\\n\\nDo you have a route named '${payload.name}'?`;\n        } else {\n          message += `\\n\\nYou need to pass the name of the screen to navigate to. This may be a bug.`;\n        }\n\n        break;\n      case 'GO_BACK':\n      case 'POP':\n      case 'POP_TO_TOP':\n        message += `\\n\\nIs there any screen to go back to?`;\n        break;\n      case 'OPEN_DRAWER':\n      case 'CLOSE_DRAWER':\n      case 'TOGGLE_DRAWER':\n        message += `\\n\\nIs your screen inside a Drawer navigator?`;\n        break;\n    }\n\n    message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n    if (process.env.NODE_ENV === 'test') {\n      throw new Error(message);\n    }\n    console.error(message);\n  };\n} else {\n  onUnhandledAction = function () {};\n}\n"],"mappings":"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"}