{"version":3,"file":"url.js","names":["_expoConstants","data","_interopRequireDefault","require","obj","__esModule","default","protocolWarningString","memoize","fn","cache","args","key","JSON","stringify","result","sanitizeUrl","url","parsed","URL","validProtocol","protocol","throwOrAlert","pathname","search","hash","toString","replace","memoSanitizeUrl","getUrlFromConstants","manifest","Constants","expoConfig","origin","extra","router","headOrigin","match","console","warn","msg","process","env","NODE_ENV","error","alert","Error","getStaticUrlFromExpoRouter"],"sources":["../../../src/head/url.tsx"],"sourcesContent":["import Constants from 'expo-constants';\n\nconst protocolWarningString = `{ plugins: [[\"expo-router\", { origin: \"...<URL>...\" }]] }`;\n\n/** `lodash.memoize` */\nfunction memoize<T extends (...args: any[]) => any>(fn: T): T {\n  const cache: Record<string, any> = {};\n  return ((...args: any[]) => {\n    const key = JSON.stringify(args);\n    if (cache[key]) {\n      return cache[key];\n    }\n    const result = fn(...args);\n    cache[key] = result;\n    return result;\n  }) as any;\n}\n\nfunction sanitizeUrl(url: string): string {\n  const parsed = new URL(url);\n\n  // Allow empty protocol, http, and https\n  const validProtocol =\n    !parsed.protocol || parsed.protocol === 'http:' || parsed.protocol === 'https:';\n\n  if (!validProtocol) {\n    throwOrAlert(\n      `Expo Head: Native origin has invalid protocol \"${parsed.protocol}\" for URL in Expo Config: ${protocolWarningString}.`\n    );\n  }\n\n  parsed.pathname = '';\n  parsed.search = '';\n  parsed.hash = '';\n  parsed.protocol ??= 'https:';\n\n  return parsed.toString().replace(/\\/$/, '');\n}\n\nconst memoSanitizeUrl = memoize(sanitizeUrl);\n\nfunction getUrlFromConstants(): string | null {\n  // This will require a rebuild in bare-workflow to update.\n  const manifest = Constants.expoConfig;\n\n  const origin = manifest?.extra?.router?.headOrigin ?? manifest?.extra?.router?.origin;\n\n  if (!origin) {\n    throwOrAlert(\n      `Expo Head: Add the handoff origin to the Expo Config (requires rebuild). Add the Config Plugin ${protocolWarningString}, where \\`origin\\` is the hosted URL.`\n    );\n    // Fallback value that shouldn't be used for real.\n    return 'https://expo.dev';\n  }\n\n  // Without this, the URL will go to an IP address which is not allowed.\n  if (!origin.match(/^http(s)?:\\/\\//)) {\n    console.warn(\n      `Expo Head: origin \"${origin}\" is missing a \\`https://\\` protocol. ${protocolWarningString}.`\n    );\n  }\n\n  // Return the development URL last so the user gets all production warnings first.\n  return memoSanitizeUrl(origin);\n}\n\nfunction throwOrAlert(msg: string) {\n  // Production apps fatally crash which is often not helpful.\n  if (\n    // @ts-ignore: process is defined\n    process.env.NODE_ENV === 'production'\n  ) {\n    console.error(msg);\n    alert(msg);\n  } else {\n    throw new Error(msg);\n  }\n}\n\nexport function getStaticUrlFromExpoRouter(pathname: string) {\n  // const host = \"https://expo.io\";\n  // Append the URL we'd find in context\n  return getUrlFromConstants() + pathname;\n}\n"],"mappings":";;;;;;AAAA,SAAAA,eAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,cAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAuC,SAAAC,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEvC,MAAMG,qBAAqB,GAAI,2DAA0D;;AAEzF;AACA,SAASC,OAAOA,CAAoCC,EAAK,EAAK;EAC5D,MAAMC,KAA0B,GAAG,CAAC,CAAC;EACrC,OAAQ,CAAC,GAAGC,IAAW,KAAK;IAC1B,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IAChC,IAAID,KAAK,CAACE,GAAG,CAAC,EAAE;MACd,OAAOF,KAAK,CAACE,GAAG,CAAC;IACnB;IACA,MAAMG,MAAM,GAAGN,EAAE,CAAC,GAAGE,IAAI,CAAC;IAC1BD,KAAK,CAACE,GAAG,CAAC,GAAGG,MAAM;IACnB,OAAOA,MAAM;EACf,CAAC;AACH;AAEA,SAASC,WAAWA,CAACC,GAAW,EAAU;EACxC,MAAMC,MAAM,GAAG,IAAIC,GAAG,CAACF,GAAG,CAAC;;EAE3B;EACA,MAAMG,aAAa,GACjB,CAACF,MAAM,CAACG,QAAQ,IAAIH,MAAM,CAACG,QAAQ,KAAK,OAAO,IAAIH,MAAM,CAACG,QAAQ,KAAK,QAAQ;EAEjF,IAAI,CAACD,aAAa,EAAE;IAClBE,YAAY,CACT,kDAAiDJ,MAAM,CAACG,QAAS,6BAA4Bd,qBAAsB,GACtH,CAAC;EACH;EAEAW,MAAM,CAACK,QAAQ,GAAG,EAAE;EACpBL,MAAM,CAACM,MAAM,GAAG,EAAE;EAClBN,MAAM,CAACO,IAAI,GAAG,EAAE;EAChBP,MAAM,CAACG,QAAQ,KAAK,QAAQ;EAE5B,OAAOH,MAAM,CAACQ,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AAC7C;AAEA,MAAMC,eAAe,GAAGpB,OAAO,CAACQ,WAAW,CAAC;AAE5C,SAASa,mBAAmBA,CAAA,EAAkB;EAC5C;EACA,MAAMC,QAAQ,GAAGC,wBAAS,CAACC,UAAU;EAErC,MAAMC,MAAM,GAAGH,QAAQ,EAAEI,KAAK,EAAEC,MAAM,EAAEC,UAAU,IAAIN,QAAQ,EAAEI,KAAK,EAAEC,MAAM,EAAEF,MAAM;EAErF,IAAI,CAACA,MAAM,EAAE;IACXX,YAAY,CACT,kGAAiGf,qBAAsB,uCAC1H,CAAC;IACD;IACA,OAAO,kBAAkB;EAC3B;;EAEA;EACA,IAAI,CAAC0B,MAAM,CAACI,KAAK,CAAC,gBAAgB,CAAC,EAAE;IACnCC,OAAO,CAACC,IAAI,CACT,sBAAqBN,MAAO,yCAAwC1B,qBAAsB,GAC7F,CAAC;EACH;;EAEA;EACA,OAAOqB,eAAe,CAACK,MAAM,CAAC;AAChC;AAEA,SAASX,YAAYA,CAACkB,GAAW,EAAE;EACjC;EACA;EACE;EACAC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EACrC;IACAL,OAAO,CAACM,KAAK,CAACJ,GAAG,CAAC;IAClBK,KAAK,CAACL,GAAG,CAAC;EACZ,CAAC,MAAM;IACL,MAAM,IAAIM,KAAK,CAACN,GAAG,CAAC;EACtB;AACF;AAEO,SAASO,0BAA0BA,CAACxB,QAAgB,EAAE;EAC3D;EACA;EACA,OAAOM,mBAAmB,CAAC,CAAC,GAAGN,QAAQ;AACzC"}