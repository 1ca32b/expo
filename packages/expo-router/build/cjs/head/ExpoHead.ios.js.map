{"version":3,"file":"ExpoHead.ios.js","names":["_core","data","require","_react","_interopRequireDefault","_ExpoHeadModule","_url","_hooks","obj","__esModule","default","urlToId","url","replace","getLastSegment","path","lastSegment","split","pop","useAddressableLink","pathname","useUnstableGlobalHref","params","useLocalSearchParams","getStaticUrlFromExpoRouter","useMetaChildren","children","React","useMemo","renderableChildren","metaChildren","Children","forEach","child","isValidElement","type","push","serializedMetaChildren","meta","validMeta","filter","map","props","undefined","property","content","useActivityFromMetaChildren","href","previousMeta","useRef","cachedActivity","sortedMeta","urlMeta","find","startsWith","title","titleTag","titleMeta","activity","current","deepObjectCompare","userActivity","description","isEligibleForHandoff","isTruthy","isEligibleForSearch","parsedActivity","keywords","webpageURL","activityType","ExpoHead","activities","INDEXED_ROUTE","userInfo","value","includes","HeadNative","isFocused","useIsFocused","createElement","UnfocusedHead","FocusedHead","Fragment","useRegisterCurrentActivity","Map","activityId","usePathname","cascadingId","useSegments","join","activityIds","Array","from","keys","cascadingActivity","has","get","id","set","previousActivity","useEffect","Error","createActivity","suspendActivity","a","b","isArray","length","every","item","index","aKeys","Object","bKeys","key","Provider","HeadShim","Head","exports"],"sources":["../../../src/head/ExpoHead.ios.tsx"],"sourcesContent":["import { useIsFocused } from '@react-navigation/core';\nimport React from 'react';\n\nimport { ExpoHead, UserActivity } from './ExpoHeadModule';\nimport { getStaticUrlFromExpoRouter } from './url';\nimport { useLocalSearchParams, useUnstableGlobalHref, usePathname, useSegments } from '../hooks';\n\nfunction urlToId(url: string) {\n  return url.replace(/[^a-zA-Z0-9]/g, '-');\n}\n\nfunction getLastSegment(path: string) {\n  // Remove the extension\n  const lastSegment = path.split('/').pop() ?? '';\n  return lastSegment.replace(/\\.[^/.]+$/, '').split('?')[0];\n}\n\n// TODO: Use Head Provider to collect all props so only one Head is rendered for a given route.\n\nfunction useAddressableLink() {\n  const pathname = useUnstableGlobalHref();\n  const params = useLocalSearchParams<any>();\n  const url = getStaticUrlFromExpoRouter(pathname);\n  return { url, pathname, params };\n}\n\ntype MetaNode =\n  | React.ReactPortal\n  | React.ReactElement<unknown, string | React.JSXElementConstructor<any>>;\n\nfunction useMetaChildren(children: React.ReactNode) {\n  return React.useMemo(() => {\n    const renderableChildren: React.ReactNode[] = [];\n    const metaChildren: MetaNode[] = [];\n\n    React.Children.forEach(children, (child) => {\n      if (!React.isValidElement(child)) {\n        return;\n      }\n      if (typeof child.type === 'string') {\n        metaChildren.push(child);\n      } else {\n        renderableChildren.push(child);\n      }\n    });\n\n    return { children: renderableChildren, metaChildren };\n  }, [children]);\n}\n\ntype SerializedMeta = {\n  type: string;\n  props: Record<string, string | undefined>;\n};\n\nfunction serializedMetaChildren(meta: MetaNode[]): SerializedMeta[] {\n  const validMeta = meta.filter((child) => child.type === 'meta' || child.type === 'title');\n\n  return validMeta.map((child) => {\n    if (child.type === 'title') {\n      return {\n        type: 'title',\n        props: {\n          children: typeof child.props.children === 'string' ? child.props.children : undefined,\n        },\n      };\n    }\n    return {\n      type: 'meta',\n      props: {\n        property: typeof child.props.property === 'string' ? child.props.property : undefined,\n        content: typeof child.props.content === 'string' ? child.props.content : undefined,\n      },\n    };\n  });\n}\n\nfunction useActivityFromMetaChildren(meta: MetaNode[]) {\n  const { url: href, pathname } = useAddressableLink();\n\n  const previousMeta = React.useRef<SerializedMeta[]>([]);\n  const cachedActivity = React.useRef<Partial<UserActivity>>({});\n\n  const sortedMeta = React.useMemo(() => serializedMetaChildren(meta), [meta]);\n\n  const url = React.useMemo(() => {\n    const urlMeta = sortedMeta.find(\n      (child) => child.type === 'meta' && child.props.property === 'og:url'\n    );\n\n    if (urlMeta) {\n      // Support =`/foo/bar` -> `https://example.com/foo/bar`\n      if (urlMeta.props.content?.startsWith('/')) {\n        return getStaticUrlFromExpoRouter(urlMeta.props.content);\n      }\n      return urlMeta.props.content;\n    }\n    return href;\n  }, [sortedMeta, href]);\n\n  const title = React.useMemo(() => {\n    const titleTag = sortedMeta.find((child) => child.type === 'title');\n    if (titleTag) {\n      return titleTag.props.children ?? '';\n    }\n    const titleMeta = sortedMeta.find(\n      (child) => child.type === 'meta' && child.props.property === 'og:title'\n    );\n    if (titleMeta) {\n      return titleMeta.props.content ?? '';\n    }\n\n    return getLastSegment(pathname);\n  }, [sortedMeta, pathname]);\n\n  const activity = React.useMemo(() => {\n    if (\n      !!previousMeta.current &&\n      !!cachedActivity.current &&\n      deepObjectCompare(previousMeta.current, sortedMeta)\n    ) {\n      return cachedActivity.current;\n    }\n    previousMeta.current = sortedMeta;\n\n    const userActivity: Partial<UserActivity> = {};\n\n    sortedMeta.forEach((child) => {\n      if (\n        // <meta />\n        child.type === 'meta'\n      ) {\n        const { property, content } = child.props;\n\n        switch (property) {\n          case 'og:description':\n            userActivity.description = content;\n            break;\n          // Custom properties\n          case 'expo:handoff':\n            userActivity.isEligibleForHandoff = isTruthy(content);\n            break;\n          case 'expo:spotlight':\n            userActivity.isEligibleForSearch = isTruthy(content);\n            break;\n        }\n\n        // // <meta name=\"keywords\" content=\"foo,bar,baz\" />\n        // if ([\"keywords\"].includes(name)) {\n        //   userActivity.keywords = Array.isArray(content)\n        //     ? content\n        //     : content.split(\",\");\n        // }\n      }\n    });\n\n    cachedActivity.current = userActivity;\n    return userActivity;\n  }, [meta, pathname, href]);\n\n  const parsedActivity: UserActivity = {\n    keywords: [title],\n    ...activity,\n    title,\n    webpageURL: url,\n    activityType: ExpoHead!.activities.INDEXED_ROUTE,\n    userInfo: {\n      // TODO: This may need to be  versioned in the future, e.g. `_v1` if we change the format.\n      href,\n    },\n  };\n\n  return parsedActivity;\n}\n\nfunction isTruthy(value: any): boolean {\n  return [true, 'true'].includes(value);\n}\n\nfunction HeadNative(props: { children?: React.ReactNode }) {\n  const isFocused = useIsFocused();\n  if (!isFocused) {\n    return <UnfocusedHead />;\n  }\n  return <FocusedHead {...props} />;\n}\n\nfunction UnfocusedHead(props: { children?: React.ReactNode }): JSX.Element {\n  const { children } = useMetaChildren(props.children);\n  return <>{children}</>;\n}\n\nfunction FocusedHead(props: { children?: React.ReactNode }): JSX.Element {\n  const { metaChildren, children } = useMetaChildren(props.children);\n  const activity = useActivityFromMetaChildren(metaChildren);\n  useRegisterCurrentActivity(activity);\n  return <>{children}</>;\n}\n\n// segments => activity\nconst activities: Map<string, UserActivity> = new Map();\n\nfunction useRegisterCurrentActivity(activity: UserActivity) {\n  // ID is tied to Expo Router and agnostic of URLs to ensure dynamic parameters are not considered.\n  // Using all segments ensures that cascading routes are considered.\n  const activityId = urlToId(usePathname() || '/');\n  const cascadingId = urlToId(useSegments().join('-') || '-');\n  const activityIds = Array.from(activities.keys());\n  const cascadingActivity: UserActivity = React.useMemo(() => {\n    // Get all nested activities together, then update the id to match the current pathname.\n    // This enables cases like `/user/[name]/post/[id]` to match all nesting, while still having a URL-specific ID, i.e. `/user/evanbacon/post/123`\n    const cascadingActivity = activities.has(cascadingId)\n      ? {\n          ...activities.get(cascadingId),\n          ...activity,\n          id: activityId,\n        }\n      : {\n          ...activity,\n          id: activityId,\n        };\n    activities.set(cascadingId, cascadingActivity);\n\n    return cascadingActivity;\n  }, [cascadingId, activityId, activity, activityIds]);\n\n  const previousActivity = React.useRef<UserActivity | null>(null);\n\n  React.useEffect(() => {\n    if (!cascadingActivity) {\n      return () => {};\n    }\n    if (\n      !!previousActivity.current &&\n      deepObjectCompare(previousActivity.current, cascadingActivity)\n    ) {\n      return () => {};\n    }\n\n    previousActivity.current = cascadingActivity;\n    if (!cascadingActivity.id) {\n      throw new Error('Activity must have an ID');\n    }\n\n    // If no features are enabled, then skip registering the activity\n    if (cascadingActivity.isEligibleForHandoff || cascadingActivity.isEligibleForSearch) {\n      ExpoHead?.createActivity(cascadingActivity);\n    }\n\n    return () => {};\n  }, [cascadingActivity]);\n\n  React.useEffect(() => {\n    return () => {\n      if (activityId) {\n        ExpoHead?.suspendActivity(activityId);\n      }\n    };\n  }, [activityId]);\n}\n\nfunction deepObjectCompare(a: any, b: any) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'object') {\n    if (Array.isArray(a) !== Array.isArray(b)) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n      return a.every((item, index) => deepObjectCompare(item, b[index]));\n    }\n    // handle null\n    if (a === null || b === null) {\n      return a === b;\n    }\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every((key) => deepObjectCompare(a[key], b[key]));\n  }\n  return a === b;\n}\n\nHeadNative.Provider = React.Fragment;\n\nfunction HeadShim(props: React.PropsWithChildren) {\n  return null;\n}\n\nHeadShim.Provider = React.Fragment;\n\n// Native Head is only enabled in bare iOS apps.\nexport const Head: ((props: React.PropsWithChildren) => React.ReactNode) & {\n  Provider: React.ComponentType;\n} = ExpoHead ? HeadNative : HeadShim;\n"],"mappings":"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"}