{"version":3,"file":"useScreens.js","names":["_react","data","_interopRequireDefault","require","_Route","_importMode","_primitives","_EmptyRoute","_SuspenseFallback","_Try","obj","__esModule","default","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","getSortedChildren","children","order","initialRouteName","sort","sortRoutesWithInitial","map","route","props","entries","ordered","name","redirect","initialParams","listeners","options","getId","console","warn","matchIndex","findIndex","child","match","splice","Error","filter","Boolean","push","useSortedScreens","node","useRouteNode","sorted","React","useMemo","value","routeToScreen","fromImport","ErrorBoundary","component","forwardRef","ref","createElement","EmptyRoute","Try","catch","process","env","NODE_ENV","keys","fromLoadedRoute","res","Promise","then","qualifiedStore","WeakMap","getQualifiedRouteComponent","has","get","ScreenComponent","EXPO_ROUTER_IMPORT_MODE","lazy","loadRoute","Component","getLoadable","Suspense","fallback","SuspenseFallback","segment","QualifiedRoute","navigation","loadable","Route","displayName","set","createGetIdForRoute","include","Map","dynamic","params","segments","values","Array","isArray","join","deep","contextKey","Screen","args","staticOptions","generated","getNavOptions","staticResult","dynamicResult","output","tabBarButton","drawerItemStyle","height","display","getComponent"],"sources":["../../src/useScreens.tsx"],"sourcesContent":["import type {\n  EventMapBase,\n  NavigationState,\n  ParamListBase,\n  RouteProp,\n  ScreenListeners,\n} from '@react-navigation/native';\nimport React from 'react';\n\nimport {\n  DynamicConvention,\n  LoadedRoute,\n  Route,\n  RouteNode,\n  sortRoutesWithInitial,\n  useRouteNode,\n} from './Route';\nimport EXPO_ROUTER_IMPORT_MODE from './import-mode';\nimport { Screen } from './primitives';\nimport { EmptyRoute } from './views/EmptyRoute';\nimport { SuspenseFallback } from './views/SuspenseFallback';\nimport { Try } from './views/Try';\n\nexport type ScreenProps<\n  TOptions extends Record<string, any> = Record<string, any>,\n  State extends NavigationState = NavigationState,\n  EventMap extends EventMapBase = EventMapBase,\n> = {\n  /** Name is required when used inside a Layout component. */\n  name?: string;\n  /**\n   * Redirect to the nearest sibling route.\n   * If all children are redirect={true}, the layout will render `null` as there are no children to render.\n   */\n  redirect?: boolean;\n  initialParams?: Record<string, any>;\n  options?: TOptions;\n\n  listeners?:\n    | ScreenListeners<State, EventMap>\n    | ((prop: {\n        route: RouteProp<ParamListBase, string>;\n        navigation: any;\n      }) => ScreenListeners<State, EventMap>);\n\n  getId?: ({ params }: { params?: Record<string, any> }) => string | undefined;\n};\n\nfunction getSortedChildren(\n  children: RouteNode[],\n  order?: ScreenProps[],\n  initialRouteName?: string\n): { route: RouteNode; props: Partial<ScreenProps> }[] {\n  if (!order?.length) {\n    return children\n      .sort(sortRoutesWithInitial(initialRouteName))\n      .map((route) => ({ route, props: {} }));\n  }\n  const entries = [...children];\n\n  const ordered = order\n    .map(({ name, redirect, initialParams, listeners, options, getId }) => {\n      if (!entries.length) {\n        console.warn(`[Layout children]: Too many screens defined. Route \"${name}\" is extraneous.`);\n        return null;\n      }\n      const matchIndex = entries.findIndex((child) => child.route === name);\n      if (matchIndex === -1) {\n        console.warn(\n          `[Layout children]: No route named \"${name}\" exists in nested children:`,\n          children.map(({ route }) => route)\n        );\n        return null;\n      } else {\n        // Get match and remove from entries\n        const match = entries[matchIndex];\n        entries.splice(matchIndex, 1);\n\n        // Ensure to return null after removing from entries.\n        if (redirect) {\n          if (typeof redirect === 'string') {\n            throw new Error(`Redirecting to a specific route is not supported yet.`);\n          }\n          return null;\n        }\n\n        return {\n          route: match,\n          props: { initialParams, listeners, options, getId },\n        };\n      }\n    })\n    .filter(Boolean) as {\n    route: RouteNode;\n    props: Partial<ScreenProps>;\n  }[];\n\n  // Add any remaining children\n  ordered.push(\n    ...entries.sort(sortRoutesWithInitial(initialRouteName)).map((route) => ({ route, props: {} }))\n  );\n\n  return ordered;\n}\n\n/**\n * @returns React Navigation screens sorted by the `route` property.\n */\nexport function useSortedScreens(order: ScreenProps[]): React.ReactNode[] {\n  const node = useRouteNode();\n\n  const sorted = node?.children?.length\n    ? getSortedChildren(node.children, order, node.initialRouteName)\n    : [];\n  return React.useMemo(\n    () => sorted.map((value) => routeToScreen(value.route, value.props)),\n    [sorted]\n  );\n}\n\nfunction fromImport({ ErrorBoundary, ...component }: LoadedRoute) {\n  if (ErrorBoundary) {\n    return {\n      default: React.forwardRef((props: any, ref: any) => {\n        const children = React.createElement(component.default || EmptyRoute, {\n          ...props,\n          ref,\n        });\n        return <Try catch={ErrorBoundary}>{children}</Try>;\n      }),\n    };\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (\n      typeof component.default === 'object' &&\n      component.default &&\n      Object.keys(component.default).length === 0\n    ) {\n      return { default: EmptyRoute };\n    }\n  }\n\n  return { default: component.default };\n}\n\nfunction fromLoadedRoute(res: LoadedRoute) {\n  if (!(res instanceof Promise)) {\n    return fromImport(res);\n  }\n\n  return res.then(fromImport);\n}\n\n// TODO: Maybe there's a more React-y way to do this?\n// Without this store, the process enters a recursive loop.\nconst qualifiedStore = new WeakMap<RouteNode, React.ComponentType<any>>();\n\n/** Wrap the component with various enhancements and add access to child routes. */\nexport function getQualifiedRouteComponent(value: RouteNode) {\n  if (qualifiedStore.has(value)) {\n    return qualifiedStore.get(value)!;\n  }\n\n  let ScreenComponent: React.ForwardRefExoticComponent<React.RefAttributes<unknown>>;\n\n  // TODO: This ensures sync doesn't use React.lazy, but it's not ideal.\n  if (EXPO_ROUTER_IMPORT_MODE === 'lazy') {\n    ScreenComponent = React.lazy(async () => {\n      const res = value.loadRoute();\n      return fromLoadedRoute(res) as Promise<{\n        default: React.ComponentType<any>;\n      }>;\n    });\n  } else {\n    const res = value.loadRoute();\n    const Component = fromImport(res).default as React.ComponentType<any>;\n    ScreenComponent = React.forwardRef((props, ref) => {\n      return <Component {...props} ref={ref} />;\n    });\n  }\n\n  const getLoadable = (props: any, ref: any) => (\n    <React.Suspense fallback={<SuspenseFallback route={value} />}>\n      <ScreenComponent\n        {...{\n          ...props,\n          ref,\n          // Expose the template segment path, e.g. `(home)`, `[foo]`, `index`\n          // the intention is to make it possible to deduce shared routes.\n          segment: value.route,\n        }}\n      />\n    </React.Suspense>\n  );\n\n  const QualifiedRoute = React.forwardRef(\n    (\n      {\n        // Remove these React Navigation props to\n        // enforce usage of expo-router hooks (where the query params are correct).\n        route,\n        navigation,\n\n        // Pass all other props to the component\n        ...props\n      }: any,\n      ref: any\n    ) => {\n      const loadable = getLoadable(props, ref);\n\n      return <Route node={value}>{loadable}</Route>;\n    }\n  );\n\n  QualifiedRoute.displayName = `Route(${value.route})`;\n\n  qualifiedStore.set(value, QualifiedRoute);\n  return QualifiedRoute;\n}\n\n/** @returns a function which provides a screen id that matches the dynamic route name in params. */\nexport function createGetIdForRoute(\n  route: Pick<RouteNode, 'dynamic' | 'route' | 'contextKey' | 'children'>\n) {\n  const include = new Map<string, DynamicConvention>();\n\n  if (route.dynamic) {\n    for (const segment of route.dynamic) {\n      include.set(segment.name, segment);\n    }\n  }\n\n  return ({ params = {} } = {} as { params?: Record<string, any> }) => {\n    const segments: string[] = [];\n\n    for (const dynamic of include.values()) {\n      const value = params?.[dynamic.name];\n      if (Array.isArray(value) && value.length > 0) {\n        // If we are an array with a value\n        segments.push(value.join('/'));\n      } else if (value && !Array.isArray(value)) {\n        // If we have a value and not an empty array\n        segments.push(value);\n      } else if (dynamic.deep) {\n        segments.push(`[...${dynamic.name}]`);\n      } else {\n        segments.push(`[${dynamic.name}]`);\n      }\n    }\n\n    return segments.join('/') ?? route.contextKey;\n  };\n}\n\nfunction routeToScreen(route: RouteNode, { options, ...props }: Partial<ScreenProps> = {}) {\n  return (\n    <Screen\n      // Users can override the screen getId function.\n      getId={createGetIdForRoute(route)}\n      {...props}\n      name={route.route}\n      key={route.route}\n      options={(args) => {\n        // Only eager load generated components\n        const staticOptions = route.generated ? route.loadRoute()?.getNavOptions : null;\n        const staticResult =\n          typeof staticOptions === 'function' ? staticOptions(args) : staticOptions;\n        const dynamicResult = typeof options === 'function' ? options?.(args) : options;\n        const output = {\n          ...staticResult,\n          ...dynamicResult,\n        };\n\n        // Prevent generated screens from showing up in the tab bar.\n        if (route.generated) {\n          output.tabBarButton = () => null;\n          // TODO: React Navigation doesn't provide a way to prevent rendering the drawer item.\n          output.drawerItemStyle = { height: 0, display: 'none' };\n        }\n\n        return output;\n      }}\n      getComponent={() => getQualifiedRouteComponent(route)}\n    />\n  );\n}\n"],"mappings":"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"}