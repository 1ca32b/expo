{"version":3,"file":"hooks.js","names":["_native","data","require","_react","_interopRequireDefault","_routerStore","obj","__esModule","default","useRootNavigationState","useStoreRootState","useRouteInfo","useStoreRouteInfo","useRootNavigation","store","navigationRef","current","useNavigationContainerRef","useRouter","React","useMemo","push","dismiss","dismissAll","canDismiss","back","goBack","replace","setParams","canGoBack","navigate","useUnstableGlobalHref","unstable_globalHref","useSegments","segments","usePathname","pathname","useGlobalSearchParams","params","useLocalSearchParams","useContext","NavigationRouteContext","Object","fromEntries","entries","map","key","value","Array","isArray","v","decodeURIComponent"],"sources":["../../src/hooks.ts"],"sourcesContent":["import { NavigationRouteContext } from '@react-navigation/native';\nimport React from 'react';\n\nimport { store, useStoreRootState, useStoreRouteInfo } from './global-state/router-store';\nimport { Router } from './types';\n\ntype SearchParams = Record<string, string | string[]>;\n\nexport function useRootNavigationState() {\n  return useStoreRootState();\n}\n\nexport function useRouteInfo() {\n  return useStoreRouteInfo();\n}\n\n/** @deprecated use `useNavigationContainerRef()` instead, which returns a React ref. */\nexport function useRootNavigation() {\n  return store.navigationRef.current;\n}\n\n/** @return the root `<NavigationContainer />` ref for the app. The `ref.current` may be `null` if the `<NavigationContainer />` hasn't mounted yet. */\nexport function useNavigationContainerRef() {\n  return store.navigationRef;\n}\n\nexport function useRouter(): Router {\n  return React.useMemo(\n    () => ({\n      push: store.push,\n      dismiss: store.dismiss,\n      dismissAll: store.dismissAll,\n      canDismiss: store.canDismiss,\n      back: store.goBack,\n      replace: store.replace,\n      setParams: store.setParams,\n      canGoBack: store.canGoBack,\n      navigate: store.navigate,\n      // TODO(EvanBacon): add `reload`\n    }),\n    []\n  );\n}\n\n/**\n * @private\n * @returns the current global pathname with query params attached. This may change in the future to include the hostname from a predefined universal link, i.e. `/foobar?hey=world` becomes `https://acme.dev/foobar?hey=world`\n */\nexport function useUnstableGlobalHref(): string {\n  return useStoreRouteInfo().unstable_globalHref;\n}\n\n/**\n * Get a list of selected file segments for the currently selected route. Segments are not normalized, so they will be the same as the file path. e.g. /[id]?id=normal -> [\"[id]\"]\n *\n * `useSegments` can be typed using an abstract.\n * Consider the following file structure, and strictly typed `useSegments` function:\n *\n * ```md\n * - app\n *   - [user]\n *     - index.js\n *     - followers.js\n *   - settings.js\n * ```\n * This can be strictly typed using the following abstract:\n *\n * ```ts\n * const [first, second] = useSegments<['settings'] | ['[user]'] | ['[user]', 'followers']>()\n * ```\n */\nexport function useSegments<TSegments extends string[] = string[]>(): TSegments {\n  return useStoreRouteInfo().segments as TSegments;\n}\n\n/** @returns global selected pathname without query parameters. */\nexport function usePathname(): string {\n  return useStoreRouteInfo().pathname;\n}\n\n/**\n * Get the globally selected query parameters, including dynamic path segments. This function will update even when the route is not focused.\n * Useful for analytics or other background operations that don't draw to the screen.\n *\n * When querying search params in a stack, opt-towards using `useLocalSearchParams` as these will only\n * update when the route is focused.\n *\n * @see `useLocalSearchParams`\n */\nexport function useGlobalSearchParams<\n  TParams extends SearchParams = SearchParams,\n>(): Partial<TParams> {\n  return useStoreRouteInfo().params as Partial<TParams>;\n}\n\n/**\n * Returns the URL search parameters for the contextually focused route. e.g. `/acme?foo=bar` -> `{ foo: \"bar\" }`.\n * This is useful for stacks where you may push a new screen that changes the query parameters.\n *\n * To observe updates even when the invoking route is not focused, use `useGlobalSearchParams()`.\n */\nexport function useLocalSearchParams<\n  TParams extends SearchParams = SearchParams,\n>(): Partial<TParams> {\n  const params = React.useContext(NavigationRouteContext)?.params ?? {};\n  return Object.fromEntries(\n    Object.entries(params).map(([key, value]) => {\n      if (Array.isArray(value)) {\n        return [\n          key,\n          value.map((v) => {\n            try {\n              return decodeURIComponent(v);\n            } catch {\n              return v;\n            }\n          }),\n        ];\n      } else {\n        try {\n          return [key, decodeURIComponent(value as string)];\n        } catch {\n          return [key, value];\n        }\n      }\n    })\n  ) as Partial<TParams>;\n}\n"],"mappings":"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"}