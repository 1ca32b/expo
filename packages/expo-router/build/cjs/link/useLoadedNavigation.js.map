{"version":3,"file":"useLoadedNavigation.js","names":["_native","data","require","_react","_routerStore","useLoadedNavigation","navigationRef","useExpoRouter","navigation","useNavigation","isMounted","useRef","pending","useEffect","current","flush","useCallback","pendingCallbacks","forEach","callback","push","fn","useOptionalNavigation","setNavigation","useState","loadNavigation","nav"],"sources":["../../../src/link/useLoadedNavigation.ts"],"sourcesContent":["import { NavigationProp, NavigationState, useNavigation } from '@react-navigation/native';\nimport { useCallback, useState, useEffect, useRef } from 'react';\n\nimport { useExpoRouter } from '../global-state/router-store';\n\ntype GenericNavigation = NavigationProp<ReactNavigation.RootParamList> & {\n  getState(): NavigationState | undefined;\n};\n\n/** Returns a callback which is invoked when the navigation state has loaded. */\nexport function useLoadedNavigation() {\n  const { navigationRef } = useExpoRouter();\n  const navigation = useNavigation();\n  const isMounted = useRef(true);\n  const pending = useRef<((navigation: GenericNavigation) => void)[]>([]);\n\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const flush = useCallback(() => {\n    if (isMounted.current) {\n      const pendingCallbacks = pending.current;\n      pending.current = [];\n      pendingCallbacks.forEach((callback) => {\n        callback(navigation as GenericNavigation);\n      });\n    }\n  }, [navigation]);\n\n  useEffect(() => {\n    if (navigationRef.current) {\n      flush();\n    }\n  }, [flush]);\n\n  const push = useCallback(\n    (fn: (navigation: GenericNavigation) => void) => {\n      pending.current.push(fn);\n      if (navigationRef.current) {\n        flush();\n      }\n    },\n    [flush]\n  );\n\n  return push;\n}\n\nexport function useOptionalNavigation(): GenericNavigation | null {\n  const [navigation, setNavigation] = useState<GenericNavigation | null>(null);\n  const loadNavigation = useLoadedNavigation();\n\n  useEffect(() => {\n    loadNavigation((nav) => setNavigation(nav));\n  }, []);\n\n  return navigation;\n}\n"],"mappings":";;;;;;;AAAA,SAAAA,QAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,OAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,OAAA;EAAA,MAAAF,IAAA,GAAAC,OAAA;EAAAC,MAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAG,aAAA;EAAA,MAAAH,IAAA,GAAAC,OAAA;EAAAE,YAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAMA;AACO,SAASI,mBAAmBA,CAAA,EAAG;EACpC,MAAM;IAAEC;EAAc,CAAC,GAAG,IAAAC,4BAAa,EAAC,CAAC;EACzC,MAAMC,UAAU,GAAG,IAAAC,uBAAa,EAAC,CAAC;EAClC,MAAMC,SAAS,GAAG,IAAAC,eAAM,EAAC,IAAI,CAAC;EAC9B,MAAMC,OAAO,GAAG,IAAAD,eAAM,EAA8C,EAAE,CAAC;EAEvE,IAAAE,kBAAS,EAAC,MAAM;IACdH,SAAS,CAACI,OAAO,GAAG,IAAI;IACxB,OAAO,MAAM;MACXJ,SAAS,CAACI,OAAO,GAAG,KAAK;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAG,IAAAC,oBAAW,EAAC,MAAM;IAC9B,IAAIN,SAAS,CAACI,OAAO,EAAE;MACrB,MAAMG,gBAAgB,GAAGL,OAAO,CAACE,OAAO;MACxCF,OAAO,CAACE,OAAO,GAAG,EAAE;MACpBG,gBAAgB,CAACC,OAAO,CAAEC,QAAQ,IAAK;QACrCA,QAAQ,CAACX,UAA+B,CAAC;MAC3C,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,IAAAK,kBAAS,EAAC,MAAM;IACd,IAAIP,aAAa,CAACQ,OAAO,EAAE;MACzBC,KAAK,CAAC,CAAC;IACT;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMK,IAAI,GAAG,IAAAJ,oBAAW,EACrBK,EAA2C,IAAK;IAC/CT,OAAO,CAACE,OAAO,CAACM,IAAI,CAACC,EAAE,CAAC;IACxB,IAAIf,aAAa,CAACQ,OAAO,EAAE;MACzBC,KAAK,CAAC,CAAC;IACT;EACF,CAAC,EACD,CAACA,KAAK,CACR,CAAC;EAED,OAAOK,IAAI;AACb;AAEO,SAASE,qBAAqBA,CAAA,EAA6B;EAChE,MAAM,CAACd,UAAU,EAAEe,aAAa,CAAC,GAAG,IAAAC,iBAAQ,EAA2B,IAAI,CAAC;EAC5E,MAAMC,cAAc,GAAGpB,mBAAmB,CAAC,CAAC;EAE5C,IAAAQ,kBAAS,EAAC,MAAM;IACdY,cAAc,CAAEC,GAAG,IAAKH,aAAa,CAACG,GAAG,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOlB,UAAU;AACnB"}