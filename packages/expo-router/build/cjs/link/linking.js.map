{"version":3,"file":"linking.js","names":["Linking","data","_interopRequireWildcard","require","_Platform","_interopRequireDefault","_extractPathFromURL","_getPathFromState","_getStateFromPath","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","isExpoGo","expo","globalThis","modules","ExpoGo","getInitialURL","process","env","NODE_ENV","getRootURL","Platform","OS","window","location","href","Promise","race","url","parsed","parse","path","includes","adjustPathname","hostname","pathname","resolve","setTimeout","_rootURL","undefined","createURL","addEventListener","listener","callback","subscription","remove"],"sources":["../../../src/link/linking.ts"],"sourcesContent":["import * as Linking from 'expo-linking';\nimport { Platform } from 'react-native';\n\nimport { adjustPathname } from '../fork/extractPathFromURL';\nimport getPathFromState from '../fork/getPathFromState';\nimport getStateFromPath from '../fork/getStateFromPath';\n\nconst isExpoGo = typeof expo !== 'undefined' && globalThis.expo?.modules?.ExpoGo;\n\n// A custom getInitialURL is used on native to ensure the app always starts at\n// the root path if it's launched from something other than a deep link.\n// This helps keep the native functionality working like the web functionality.\n// For example, if you had a root navigator where the first screen was `/settings` and the second was `/index`\n// then `/index` would be used on web and `/settings` would be used on native.\nexport function getInitialURL(): Promise<string | null> | string {\n  if (process.env.NODE_ENV === 'test') {\n    return Linking.getInitialURL() ?? getRootURL();\n  }\n\n  if (Platform.OS === 'web') {\n    if (typeof window === 'undefined') {\n      return '';\n    } else if (window.location?.href) {\n      return window.location.href;\n    }\n  }\n  return Promise.race<string>([\n    (async () => {\n      const url = await Linking.getInitialURL();\n\n      // NOTE(EvanBacon): This could probably be wrapped with the development boundary\n      // since Expo Go is mostly just used in development.\n\n      // Expo Go is weird and requires the root path to be `/--/`\n      if (url && isExpoGo) {\n        const parsed = Linking.parse(url);\n        // If the URL is defined (default in Expo Go dev apps) and the URL has no path:\n        // `exp://192.168.87.39:19000/` then use the default `exp://192.168.87.39:19000/--/`\n        if (\n          parsed.path === null ||\n          ['', '/'].includes(\n            adjustPathname({\n              hostname: parsed.hostname,\n              pathname: parsed.path,\n            })\n          )\n        ) {\n          return getRootURL();\n        }\n      }\n      // The path will be nullish in bare apps when the app is launched from the home screen.\n      // TODO(EvanBacon): define some policy around notifications.\n      return url ?? getRootURL();\n    })(),\n    new Promise<string>((resolve) =>\n      // Timeout in 150ms if `getInitialState` doesn't resolve\n      // Workaround for https://github.com/facebook/react-native/issues/25675\n      setTimeout(() => resolve(getRootURL()), 150)\n    ),\n  ]);\n}\n\nlet _rootURL: string | undefined;\n\nexport function getRootURL(): string {\n  if (_rootURL === undefined) {\n    _rootURL = Linking.createURL('/');\n  }\n  return _rootURL;\n}\n\nexport function addEventListener(listener: (url: string) => void) {\n  let callback: (({ url }: { url: string }) => void) | undefined;\n\n  if (isExpoGo) {\n    // This extra work is only done in the Expo Go app.\n    callback = ({ url }: { url: string }) => {\n      const parsed = Linking.parse(url);\n\n      // If the URL is defined (default in Expo Go dev apps) and the URL has no path:\n      // `exp://192.168.87.39:19000/` then use the default `exp://192.168.87.39:19000/--/`\n      if (\n        parsed.path === null ||\n        ['', '/'].includes(adjustPathname({ hostname: parsed.hostname, pathname: parsed.path }))\n      ) {\n        listener(getRootURL());\n      } else {\n        listener(url);\n      }\n    };\n  } else {\n    callback = ({ url }: { url: string }) => listener(url);\n  }\n  const subscription = Linking.addEventListener('url', callback);\n\n  return () => {\n    // https://github.com/facebook/react-native/commit/6d1aca806cee86ad76de771ed3a1cc62982ebcd7\n    subscription?.remove?.();\n  };\n}\n\nexport { getStateFromPath, getPathFromState };\n"],"mappings":"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"}