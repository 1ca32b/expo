{"version":3,"file":"useLinking.native.js","names":["_core","data","require","React","_interopRequireWildcard","_Linking","_interopRequireDefault","_Platform","_extractPathFromURL","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","linkingHandlers","useLinking","ref","filter","config","getInitialURL","Promise","race","Linking","resolve","setTimeout","subscribe","listener","callback","url","subscription","addEventListener","remove","getStateFromPath","getStateFromPathDefault","getActionFromState","getActionFromStateDefault","useEffect","process","env","NODE_ENV","undefined","length","console","error","Platform","OS","join","trim","handler","Symbol","push","index","indexOf","splice","filterRef","useRef","configRef","getInitialURLRef","getStateFromPathRef","getActionFromStateRef","current","getStateFromURL","useCallback","path","extractExpoPathFromURL","getInitialState","then","state","thenable","onfulfilled","catch","navigation","rootState","getRootState","routes","some","routeNames","includes","name","warn","action","dispatch","message","resetRoot"],"sources":["../../../src/fork/useLinking.native.ts"],"sourcesContent":["// Forked from react-navigation with a custom `extractPathFromURL` that automatically\n// allows any prefix and parses Expo Go URLs.\n// For simplicity the following are disabled: enabled, prefixes, independent\n// https://github.com/react-navigation/react-navigation/blob/main/packages/native/src/useLinking.native.tsx\nimport {\n  getActionFromState as getActionFromStateDefault,\n  getStateFromPath as getStateFromPathDefault,\n  NavigationContainerRef,\n  ParamListBase,\n} from '@react-navigation/core';\nimport type { LinkingOptions } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Linking, Platform } from 'react-native';\n\nimport { extractExpoPathFromURL } from './extractPathFromURL';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\ntype Options = LinkingOptions<ParamListBase>;\n\nconst linkingHandlers: symbol[] = [];\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    // enabled = true,\n    // prefixes,\n    filter,\n    config,\n    getInitialURL = () =>\n      Promise.race([\n        Linking.getInitialURL(),\n        new Promise<undefined>((resolve) =>\n          // Timeout in 150ms if `getInitialState` doesn't resolve\n          // Workaround for https://github.com/facebook/react-native/issues/25675\n          setTimeout(resolve, 150)\n        ),\n      ]),\n    subscribe = (listener) => {\n      const callback = ({ url }: { url: string }) => listener(url);\n\n      const subscription = Linking.addEventListener('url', callback) as\n        | { remove(): void }\n        | undefined;\n\n      return () => {\n        subscription?.remove();\n      };\n    },\n    getStateFromPath = getStateFromPathDefault,\n    getActionFromState = getActionFromStateDefault,\n  }: Options\n) {\n  //   const independent = useNavigationIndependentTree();\n\n  React.useEffect(\n    () => {\n      if (process.env.NODE_ENV === 'production') {\n        return undefined;\n      }\n\n      // if (independent) {\n      //   return undefined;\n      // }\n\n      if (\n        // enabled !== false &&\n        linkingHandlers.length\n      ) {\n        console.error(\n          [\n            'Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\n            \"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",\n            '- Only a single instance of the root component is rendered',\n            Platform.OS === 'android'\n              ? \"- You have set 'android:launchMode=singleTask' in the '<activity />' section of the 'AndroidManifest.xml' file to avoid launching multiple instances\"\n              : '',\n          ]\n            .join('\\n')\n            .trim()\n        );\n      }\n\n      const handler = Symbol();\n\n      // if (enabled !== false) {\n      linkingHandlers.push(handler);\n      // }\n\n      return () => {\n        const index = linkingHandlers.indexOf(handler);\n\n        if (index > -1) {\n          linkingHandlers.splice(index, 1);\n        }\n      };\n    },\n    [\n      // enabled,\n      // independent\n    ]\n  );\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  //   const enabledRef = React.useRef(enabled);\n  //   const prefixesRef = React.useRef(prefixes);\n  const filterRef = React.useRef(filter);\n  const configRef = React.useRef(config);\n  const getInitialURLRef = React.useRef(getInitialURL);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getActionFromStateRef = React.useRef(getActionFromState);\n\n  React.useEffect(() => {\n    // enabledRef.current = enabled;\n    // prefixesRef.current = prefixes;\n    filterRef.current = filter;\n    configRef.current = config;\n    getInitialURLRef.current = getInitialURL;\n    getStateFromPathRef.current = getStateFromPath;\n    getActionFromStateRef.current = getActionFromState;\n  });\n\n  const getStateFromURL = React.useCallback((url?: string | null) => {\n    if (!url || (filterRef.current && !filterRef.current(url))) {\n      return undefined;\n    }\n\n    // NOTE(EvanBacon): This is the important part.\n    const path = extractExpoPathFromURL(url);\n\n    return path !== undefined ? getStateFromPathRef.current(path, configRef.current) : undefined;\n  }, []);\n\n  const getInitialState = React.useCallback(() => {\n    // let state: ResultState | undefined;\n    // if (enabledRef.current) {\n    const url = getInitialURLRef.current();\n\n    if (url != null && typeof url !== 'string') {\n      return url.then((url) => {\n        const state = getStateFromURL(url);\n\n        return state;\n      });\n    }\n\n    const state = getStateFromURL(url);\n    // }\n\n    const thenable = {\n      then(onfulfilled?: (state?: ResultState) => void) {\n        onfulfilled?.(state);\n        return thenable;\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n  }, [getStateFromURL]);\n\n  React.useEffect(() => {\n    const listener = (url: string) => {\n      //   if (!enabled) {\n      //     return;\n      //   }\n\n      const navigation = ref.current;\n      const state = navigation ? getStateFromURL(url) : undefined;\n\n      if (navigation && state) {\n        // Make sure that the routes in the state exist in the root navigator\n        // Otherwise there's an error in the linking configuration\n        const rootState = navigation.getRootState();\n\n        if (state.routes.some((r) => !rootState?.routeNames.includes(r.name))) {\n          console.warn(\n            \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\"\n          );\n          return;\n        }\n\n        const action = getActionFromStateRef.current(state, configRef.current);\n\n        if (action !== undefined) {\n          try {\n            navigation.dispatch(action);\n          } catch (e) {\n            // Ignore any errors from deep linking.\n            // This could happen in case of malformed links, navigation object not being initialized etc.\n            console.warn(\n              `An error occurred when trying to handle the link '${url}': ${\n                typeof e === 'object' && e != null && 'message' in e ? e.message : e\n              }`\n            );\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      }\n    };\n\n    return subscribe(listener);\n  }, [\n    // enabled,\n    getStateFromURL,\n    ref,\n    subscribe,\n  ]);\n\n  return {\n    getInitialState,\n  };\n}\n"],"mappings":"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"}