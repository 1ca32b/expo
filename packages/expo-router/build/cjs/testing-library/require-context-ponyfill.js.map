{"version":3,"file":"require-context-ponyfill.js","names":["_nodeFs","data","_interopRequireDefault","require","_nodePath","obj","__esModule","default","requireContext","base","scanSubDirectories","regularExpression","files","readDirectory","directory","fs","readdirSync","forEach","file","fullPath","path","resolve","relativePath","relative","split","sep","join","statSync","isDirectory","test","context","Object","assign","Module","keys","key","id","__add","__delete"],"sources":["../../../src/testing-library/require-context-ponyfill.ts"],"sourcesContent":["// @ts-ignore: types node\nimport fs from 'node:fs';\n// @ts-ignore: types node\nimport path from 'node:path';\n\nimport type { RequireContext } from '../types';\n\ninterface RequireContextPonyFill extends RequireContext {\n  __add(file: string): void;\n  __delete(file: string): void;\n}\n\nexport default function requireContext(\n  base = '.',\n  scanSubDirectories = true,\n  regularExpression = /\\.[tj]sx?$/\n) {\n  const files: Record<string, unknown> = {};\n\n  function readDirectory(directory: string) {\n    fs.readdirSync(directory).forEach((file: string) => {\n      const fullPath = path.resolve(directory, file);\n      const relativePath = `./${path.relative(base, fullPath).split(path.sep).join('/')}`;\n\n      if (fs.statSync(fullPath).isDirectory()) {\n        if (scanSubDirectories) readDirectory(fullPath);\n\n        return;\n      }\n\n      if (!regularExpression.test(relativePath)) return;\n\n      files[relativePath] = true;\n    });\n  }\n\n  readDirectory(base);\n\n  const context: RequireContextPonyFill = Object.assign(\n    function Module(file: string) {\n      return require(path.join(base, file));\n    },\n    {\n      keys: () => Object.keys(files),\n      resolve: (key: string) => key,\n      id: '0',\n      __add(file: string) {\n        files[file] = true;\n      },\n      __delete(file: string) {\n        delete files[file];\n      },\n    }\n  );\n\n  return context;\n}\n"],"mappings":";;;;;;AACA,SAAAA,QAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,OAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAG,UAAA;EAAA,MAAAH,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAC,SAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAA6B,SAAAC,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAH7B;;AAEA;;AAUe,SAASG,cAAcA,CACpCC,IAAI,GAAG,GAAG,EACVC,kBAAkB,GAAG,IAAI,EACzBC,iBAAiB,GAAG,YAAY,EAChC;EACA,MAAMC,KAA8B,GAAG,CAAC,CAAC;EAEzC,SAASC,aAAaA,CAACC,SAAiB,EAAE;IACxCC,iBAAE,CAACC,WAAW,CAACF,SAAS,CAAC,CAACG,OAAO,CAAEC,IAAY,IAAK;MAClD,MAAMC,QAAQ,GAAGC,mBAAI,CAACC,OAAO,CAACP,SAAS,EAAEI,IAAI,CAAC;MAC9C,MAAMI,YAAY,GAAI,KAAIF,mBAAI,CAACG,QAAQ,CAACd,IAAI,EAAEU,QAAQ,CAAC,CAACK,KAAK,CAACJ,mBAAI,CAACK,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAE,EAAC;MAEnF,IAAIX,iBAAE,CAACY,QAAQ,CAACR,QAAQ,CAAC,CAACS,WAAW,CAAC,CAAC,EAAE;QACvC,IAAIlB,kBAAkB,EAAEG,aAAa,CAACM,QAAQ,CAAC;QAE/C;MACF;MAEA,IAAI,CAACR,iBAAiB,CAACkB,IAAI,CAACP,YAAY,CAAC,EAAE;MAE3CV,KAAK,CAACU,YAAY,CAAC,GAAG,IAAI;IAC5B,CAAC,CAAC;EACJ;EAEAT,aAAa,CAACJ,IAAI,CAAC;EAEnB,MAAMqB,OAA+B,GAAGC,MAAM,CAACC,MAAM,CACnD,SAASC,MAAMA,CAACf,IAAY,EAAE;IAC5B,OAAOf,OAAO,CAACiB,mBAAI,CAACM,IAAI,CAACjB,IAAI,EAAES,IAAI,CAAC,CAAC;EACvC,CAAC,EACD;IACEgB,IAAI,EAAEA,CAAA,KAAMH,MAAM,CAACG,IAAI,CAACtB,KAAK,CAAC;IAC9BS,OAAO,EAAGc,GAAW,IAAKA,GAAG;IAC7BC,EAAE,EAAE,GAAG;IACPC,KAAKA,CAACnB,IAAY,EAAE;MAClBN,KAAK,CAACM,IAAI,CAAC,GAAG,IAAI;IACpB,CAAC;IACDoB,QAAQA,CAACpB,IAAY,EAAE;MACrB,OAAON,KAAK,CAACM,IAAI,CAAC;IACpB;EACF,CACF,CAAC;EAED,OAAOY,OAAO;AAChB"}