{"version":3,"file":"context-stubs.js","names":["_path","data","_interopRequireDefault","require","_requireContextPonyfill","obj","__esModule","default","validExtensions","inMemoryContext","context","Object","assign","id","replace","resolve","key","keys","map","ext","path","extname","includes","requireContextWithOverrides","dir","overrides","existingContext","requireContext","process","cwd","route"],"sources":["../../../src/testing-library/context-stubs.ts"],"sourcesContent":["import path from 'path';\n\nimport requireContext from './require-context-ponyfill';\n\nexport type ReactComponent = () => React.ReactElement<any, any> | null;\nexport type NativeIntentStub = {\n  redirectSystemPath?: (event: {\n    path: string | null;\n    initial: boolean;\n  }) => Promise<string | null | undefined> | string | null | undefined;\n  subscribe?: (\n    listener: (path: string) => void\n  ) => Promise<() => void | void> | (() => void) | void;\n};\nexport type FileStub =\n  | (Record<string, unknown> & {\n      default: ReactComponent;\n      unstable_settings?: Record<string, any>;\n    })\n  | ReactComponent;\n\nexport type MemoryContext = Record<string, FileStub | NativeIntentStub> & {\n  '+native-intent'?: NativeIntentStub;\n};\n\nexport { requireContext };\n\nconst validExtensions = ['.js', '.jsx', '.ts', '.tsx'];\n\nexport function inMemoryContext(context: MemoryContext) {\n  return Object.assign(\n    function (id: string) {\n      id = id.replace(/^\\.\\//, '').replace(/\\.\\w*$/, '');\n      return typeof context[id] === 'function' ? { default: context[id] } : context[id];\n    },\n    {\n      resolve: (key: string) => key,\n      id: '0',\n      keys: () =>\n        Object.keys(context).map((key) => {\n          const ext = path.extname(key);\n          key = key.replace(/^\\.\\//, '');\n          return validExtensions.includes(ext) ? `./${key}` : `./${key}.js`;\n        }),\n    }\n  );\n}\n\nexport function requireContextWithOverrides(dir: string, overrides: MemoryContext) {\n  const existingContext = requireContext(path.resolve(process.cwd(), dir));\n\n  return Object.assign(\n    function (id: string) {\n      if (id in overrides) {\n        const route = overrides[id];\n        return typeof route === 'function' ? { default: route } : route;\n      } else {\n        return existingContext(id);\n      }\n    },\n    {\n      keys: () => [...Object.keys(overrides), ...existingContext.keys()],\n      resolve: (key: string) => key,\n      id: '0',\n    }\n  );\n}\n"],"mappings":";;;;;;;;;;;;;AAAA,SAAAA,MAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,KAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAG,wBAAA;EAAA,MAAAH,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAC,uBAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAwD,SAAAC,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAyBxD,MAAMG,eAAe,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC;AAE/C,SAASC,eAAeA,CAACC,OAAsB,EAAE;EACtD,OAAOC,MAAM,CAACC,MAAM,CAClB,UAAUC,EAAU,EAAE;IACpBA,EAAE,GAAGA,EAAE,CAACC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;IAClD,OAAO,OAAOJ,OAAO,CAACG,EAAE,CAAC,KAAK,UAAU,GAAG;MAAEN,OAAO,EAAEG,OAAO,CAACG,EAAE;IAAE,CAAC,GAAGH,OAAO,CAACG,EAAE,CAAC;EACnF,CAAC,EACD;IACEE,OAAO,EAAGC,GAAW,IAAKA,GAAG;IAC7BH,EAAE,EAAE,GAAG;IACPI,IAAI,EAAEA,CAAA,KACJN,MAAM,CAACM,IAAI,CAACP,OAAO,CAAC,CAACQ,GAAG,CAAEF,GAAG,IAAK;MAChC,MAAMG,GAAG,GAAGC,eAAI,CAACC,OAAO,CAACL,GAAG,CAAC;MAC7BA,GAAG,GAAGA,GAAG,CAACF,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;MAC9B,OAAON,eAAe,CAACc,QAAQ,CAACH,GAAG,CAAC,GAAI,KAAIH,GAAI,EAAC,GAAI,KAAIA,GAAI,KAAI;IACnE,CAAC;EACL,CACF,CAAC;AACH;AAEO,SAASO,2BAA2BA,CAACC,GAAW,EAAEC,SAAwB,EAAE;EACjF,MAAMC,eAAe,GAAG,IAAAC,iCAAc,EAACP,eAAI,CAACL,OAAO,CAACa,OAAO,CAACC,GAAG,CAAC,CAAC,EAAEL,GAAG,CAAC,CAAC;EAExE,OAAOb,MAAM,CAACC,MAAM,CAClB,UAAUC,EAAU,EAAE;IACpB,IAAIA,EAAE,IAAIY,SAAS,EAAE;MACnB,MAAMK,KAAK,GAAGL,SAAS,CAACZ,EAAE,CAAC;MAC3B,OAAO,OAAOiB,KAAK,KAAK,UAAU,GAAG;QAAEvB,OAAO,EAAEuB;MAAM,CAAC,GAAGA,KAAK;IACjE,CAAC,MAAM;MACL,OAAOJ,eAAe,CAACb,EAAE,CAAC;IAC5B;EACF,CAAC,EACD;IACEI,IAAI,EAAEA,CAAA,KAAM,CAAC,GAAGN,MAAM,CAACM,IAAI,CAACQ,SAAS,CAAC,EAAE,GAAGC,eAAe,CAACT,IAAI,CAAC,CAAC,CAAC;IAClEF,OAAO,EAAGC,GAAW,IAAKA,GAAG;IAC7BH,EAAE,EAAE;EACN,CACF,CAAC;AACH"}