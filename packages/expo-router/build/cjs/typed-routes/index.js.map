{"version":3,"file":"index.js","names":["_nodeFs","data","_interopRequireDefault","require","_nodePath","_generate","_ctxShared","_matchers","_requireContextPonyfill","obj","__esModule","default","ctx","requireContext","process","env","EXPO_ROUTER_APP_ROOT","EXPO_ROUTER_CTX_IGNORE","getWatchHandler","outputDir","routeFiles","Set","keys","filter","key","isTypedRoute","callback","filePath","type","shouldRegenerate","__delete","has","delete","__add","regenerateDeclarations","exports","throttle","file","getTypedRoutesDeclarationFile","fs","writeFileSync","path","resolve","fn","interval","timerId","shouldRunAgain","run","args","setTimeout"],"sources":["../../../src/typed-routes/index.ts"],"sourcesContent":["import fs from 'node:fs';\nimport path from 'node:path';\n\nimport { getTypedRoutesDeclarationFile } from './generate';\nimport { EXPO_ROUTER_CTX_IGNORE } from '../../_ctx-shared';\nimport { isTypedRoute } from '../matchers';\nimport requireContext from '../testing-library/require-context-ponyfill';\n\nconst ctx = requireContext(process.env.EXPO_ROUTER_APP_ROOT, true, EXPO_ROUTER_CTX_IGNORE);\n\n/**\n * Generate a Metro watch handler that regenerates the typed routes declaration file\n */\nexport function getWatchHandler(outputDir: string) {\n  const routeFiles = new Set(ctx.keys().filter((key) => isTypedRoute(key)));\n\n  return async function callback({ filePath, type }: { filePath: string; type: string }) {\n    let shouldRegenerate = false;\n\n    if (type === 'delete') {\n      ctx.__delete(filePath);\n      if (routeFiles.has(filePath)) {\n        routeFiles.delete(filePath);\n        shouldRegenerate = true;\n      }\n    } else if (type === 'add') {\n      ctx.__add(filePath);\n      shouldRegenerate = isTypedRoute(filePath);\n    } else {\n      shouldRegenerate = routeFiles.has(filePath);\n    }\n\n    if (shouldRegenerate) {\n      regenerateDeclarations(outputDir);\n    }\n  };\n}\n\n/**\n * A throttled function that regenerates the typed routes declaration file\n */\nexport const regenerateDeclarations = throttle((outputDir: string) => {\n  const file = getTypedRoutesDeclarationFile(ctx);\n  if (!file) return;\n  fs.writeFileSync(path.resolve(outputDir, './router.d.ts'), file);\n}, 100);\n\n/**\n * Throttles a function to only run once every `internal` milliseconds.\n * If called while waiting, it will run again after the timer has elapsed.\n */\nfunction throttle<T extends (...args: any[]) => any>(fn: T, interval: number) {\n  let timerId;\n  let shouldRunAgain = false;\n  return function run(...args: Parameters<T>) {\n    if (timerId) {\n      shouldRunAgain = true;\n    } else {\n      fn(...args);\n      timerId = setTimeout(() => {\n        timerId = null; // reset the timer so next call will be executed\n        if (shouldRunAgain) {\n          run(...args); // call the function again\n        }\n      }, interval);\n    }\n  };\n}\n"],"mappings":"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"}