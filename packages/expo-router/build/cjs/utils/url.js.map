{"version":3,"file":"url.js","names":["hasUrlProtocolPrefix","href","test","isWellKnownUri","shouldLinkExternally"],"sources":["../../../src/utils/url.ts"],"sourcesContent":["/**\n * Does the input string start with a valid URL scheme.\n * NOTE: Additional strictness added to ensure URLs sent in query parameters for in-app navigation are not matched.\n */\nexport function hasUrlProtocolPrefix(href: string): boolean {\n  return /^[\\w\\d_+.-]+:\\/\\//.test(href);\n}\n\nexport function isWellKnownUri(href: string): boolean {\n  // This is a hack and we should change this to work like the web in the future where we have full confidence in the\n  // ability to match URLs and send anything unmatched to the OS. The main difference between this and `hasUrlProtocolPrefix` is\n  // that we don't require `//`, e.g. `mailto:` is valid and common, and `mailto://bacon` is invalid.\n  return /^(https?|mailto|tel|sms|geo|maps|market|itmss?|itms-apps|content|file):/.test(href);\n}\n\nexport function shouldLinkExternally(href: string): boolean {\n  // Cheap check first to avoid regex if the href is not a path fragment.\n  return !/^[./]/.test(href) && (hasUrlProtocolPrefix(href) || isWellKnownUri(href));\n}\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACO,SAASA,oBAAoBA,CAACC,IAAY,EAAW;EAC1D,OAAO,mBAAmB,CAACC,IAAI,CAACD,IAAI,CAAC;AACvC;AAEO,SAASE,cAAcA,CAACF,IAAY,EAAW;EACpD;EACA;EACA;EACA,OAAO,yEAAyE,CAACC,IAAI,CAACD,IAAI,CAAC;AAC7F;AAEO,SAASG,oBAAoBA,CAACH,IAAY,EAAW;EAC1D;EACA,OAAO,CAAC,OAAO,CAACC,IAAI,CAACD,IAAI,CAAC,KAAKD,oBAAoB,CAACC,IAAI,CAAC,IAAIE,cAAc,CAACF,IAAI,CAAC,CAAC;AACpF"}