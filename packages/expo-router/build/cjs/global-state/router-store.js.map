{"version":3,"file":"router-store.js","names":["_native","data","require","SplashScreen","_interopRequireWildcard","_react","_routing","_sortRoutes","_LocationProvider","_getPathFromState","_getLinkingConfig","_getRoutes","_useScreens","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","RouterStore","hasAttemptedToHideSplash","rootStateSubscribers","Set","storeSubscribers","linkTo","bind","getSortedRoutes","goBack","canGoBack","push","dismiss","replace","dismissAll","canDismiss","setParams","navigate","initialize","context","navigationRef","initialLocation","initialState","undefined","rootState","nextState","routeInfo","linking","navigationRefSubscription","clear","routeNode","getRoutes","ignoreEntryPoints","rootComponent","getQualifiedRouteComponent","Fragment","process","env","NODE_ENV","Error","getLinkingConfig","getInitialURL","toString","getStateFromPath","pathname","search","config","getRouteInfo","unstable_globalHref","isIndex","params","segments","addListener","state","requestAnimationFrame","_internal_maybeHideAsync","shouldUpdateSubscribers","store","updateState","subscriber","nextRouteInfo","deepEqual","getRouteInfoFromState","asPath","getPathDataFromState","screens","preserveDynamicRoutes","preserveGroups","shouldShowTutorial","subscribeToRootState","add","delete","subscribeToStore","snapshot","rootStateSnapshot","routeInfoSnapshot","exports","useExpoRouter","useSyncExternalStore","syncStoreRootState","isReady","currentState","getRootState","useStoreRootState","useStoreRouteInfo","useInitializeExpoRouter","useNavigationContainerRef","useMemo"],"sources":["../../../src/global-state/router-store.tsx"],"sourcesContent":["import {\n  NavigationContainerRefWithCurrent,\n  getPathFromState,\n  useNavigationContainerRef,\n} from '@react-navigation/native';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useSyncExternalStore, useMemo, ComponentType, Fragment } from 'react';\n\nimport {\n  canGoBack,\n  canDismiss,\n  goBack,\n  linkTo,\n  navigate,\n  dismiss,\n  dismissAll,\n  push,\n  replace,\n  setParams,\n} from './routing';\nimport { getSortedRoutes } from './sort-routes';\nimport { UrlObject, getRouteInfoFromState } from '../LocationProvider';\nimport { RouteNode } from '../Route';\nimport { deepEqual, getPathDataFromState } from '../fork/getPathFromState';\nimport { ResultState } from '../fork/getStateFromPath';\nimport { ExpoLinkingOptions, getLinkingConfig } from '../getLinkingConfig';\nimport { getRoutes } from '../getRoutes';\nimport { RequireContext } from '../types';\nimport { getQualifiedRouteComponent } from '../useScreens';\n\n/**\n * This is the global state for the router. It is used to keep track of the current route, and to provide a way to navigate to other routes.\n *\n * There should only be one instance of this class and be initialized via `useInitializeExpoRouter`\n */\nexport class RouterStore {\n  routeNode!: RouteNode | null;\n  rootComponent!: ComponentType;\n  linking?: ExpoLinkingOptions;\n  private hasAttemptedToHideSplash: boolean = false;\n\n  initialState?: ResultState;\n  rootState?: ResultState;\n  nextState?: ResultState;\n  routeInfo?: UrlObject;\n\n  navigationRef!: NavigationContainerRefWithCurrent<ReactNavigation.RootParamList>;\n  navigationRefSubscription!: () => void;\n\n  rootStateSubscribers = new Set<() => void>();\n  storeSubscribers = new Set<() => void>();\n\n  linkTo = linkTo.bind(this);\n  getSortedRoutes = getSortedRoutes.bind(this);\n  goBack = goBack.bind(this);\n  canGoBack = canGoBack.bind(this);\n  push = push.bind(this);\n  dismiss = dismiss.bind(this);\n  replace = replace.bind(this);\n  dismissAll = dismissAll.bind(this);\n  canDismiss = canDismiss.bind(this);\n  setParams = setParams.bind(this);\n  navigate = navigate.bind(this);\n\n  initialize(\n    context: RequireContext,\n    navigationRef: NavigationContainerRefWithCurrent<ReactNavigation.RootParamList>,\n    initialLocation?: URL\n  ) {\n    // Clean up any previous state\n    this.initialState = undefined;\n    this.rootState = undefined;\n    this.nextState = undefined;\n    this.routeInfo = undefined;\n    this.linking = undefined;\n    this.navigationRefSubscription?.();\n    this.rootStateSubscribers.clear();\n    this.storeSubscribers.clear();\n\n    this.routeNode = getRoutes(context, { ignoreEntryPoints: true });\n\n    this.rootComponent = this.routeNode ? getQualifiedRouteComponent(this.routeNode) : Fragment;\n\n    // Only error in production, in development we will show the onboarding screen\n    if (!this.routeNode && process.env.NODE_ENV === 'production') {\n      throw new Error('No routes found');\n    }\n\n    this.navigationRef = navigationRef;\n\n    if (this.routeNode) {\n      this.linking = getLinkingConfig(this.routeNode!);\n\n      if (initialLocation) {\n        this.linking.getInitialURL = () => initialLocation.toString();\n        this.initialState = this.linking.getStateFromPath?.(\n          initialLocation.pathname + initialLocation.search,\n          this.linking.config\n        );\n      }\n    }\n\n    // There is no routeNode, so we will be showing the onboarding screen\n    // In the meantime, just mock the routeInfo\n    if (this.initialState) {\n      this.rootState = this.initialState;\n      this.routeInfo = this.getRouteInfo(this.initialState);\n    } else {\n      this.routeInfo = {\n        unstable_globalHref: '',\n        pathname: '',\n        isIndex: false,\n        params: {},\n        segments: [],\n      };\n    }\n\n    /**\n     * Counter intuitively - this fires AFTER both React Navigation's state changes and the subsequent paint.\n     * This poses a couple of issues for Expo Router,\n     *   - Ensuring hooks (e.g. useSearchParams()) have data in the initial render\n     *   - Reacting to state changes after a navigation event\n     *\n     * This is why the initial render renders a Fragment and we wait until `onReady()` is called\n     * Additionally, some hooks compare the state from both the store and the navigationRef. If the store it stale,\n     * that hooks will manually update the store.\n     *\n     */\n    this.navigationRefSubscription = navigationRef.addListener('state', (data) => {\n      const state = data.data.state as ResultState;\n\n      if (!this.hasAttemptedToHideSplash) {\n        this.hasAttemptedToHideSplash = true;\n        // NOTE(EvanBacon): `navigationRef.isReady` is sometimes not true when state is called initially.\n        requestAnimationFrame(\n          () =>\n            // @ts-expect-error: This function is native-only and for internal-use only.\n            SplashScreen._internal_maybeHideAsync?.()\n        );\n      }\n\n      let shouldUpdateSubscribers = this.nextState === state;\n      this.nextState = undefined;\n\n      // This can sometimes be undefined when an error is thrown in the Root Layout Route.\n      // Additionally that state may already equal the rootState if it was updated within a hook\n      if (state && state !== this.rootState) {\n        store.updateState(state, undefined);\n        shouldUpdateSubscribers = true;\n      }\n\n      // If the state has changed, or was changed inside a hook we need to update the subscribers\n      if (shouldUpdateSubscribers) {\n        for (const subscriber of this.rootStateSubscribers) {\n          subscriber();\n        }\n      }\n    });\n\n    for (const subscriber of this.storeSubscribers) {\n      subscriber();\n    }\n  }\n\n  updateState(state: ResultState, nextState = state) {\n    store.rootState = state;\n    store.nextState = nextState;\n\n    const nextRouteInfo = store.getRouteInfo(state);\n\n    if (!deepEqual(this.routeInfo, nextRouteInfo)) {\n      store.routeInfo = nextRouteInfo;\n    }\n  }\n\n  getRouteInfo(state: ResultState) {\n    return getRouteInfoFromState(\n      (state: Parameters<typeof getPathFromState>[0], asPath: boolean) => {\n        return getPathDataFromState(state, {\n          screens: [],\n          ...this.linking?.config,\n          preserveDynamicRoutes: asPath,\n          preserveGroups: asPath,\n        });\n      },\n      state\n    );\n  }\n\n  // This is only used in development, to show the onboarding screen\n  // In production we should have errored during the initialization\n  shouldShowTutorial() {\n    return !this.routeNode && process.env.NODE_ENV === 'development';\n  }\n\n  /** Make sure these are arrow functions so `this` is correctly bound */\n  subscribeToRootState = (subscriber: () => void) => {\n    this.rootStateSubscribers.add(subscriber);\n    return () => this.rootStateSubscribers.delete(subscriber);\n  };\n  subscribeToStore = (subscriber: () => void) => {\n    this.storeSubscribers.add(subscriber);\n    return () => this.storeSubscribers.delete(subscriber);\n  };\n  snapshot = () => {\n    return this;\n  };\n  rootStateSnapshot = () => {\n    return this.rootState!;\n  };\n  routeInfoSnapshot = () => {\n    return this.routeInfo!;\n  };\n}\n\nexport const store = new RouterStore();\n\nexport function useExpoRouter() {\n  return useSyncExternalStore(store.subscribeToStore, store.snapshot, store.snapshot);\n}\n\nfunction syncStoreRootState() {\n  if (store.navigationRef.isReady()) {\n    const currentState = store.navigationRef.getRootState() as unknown as ResultState;\n\n    if (store.rootState !== currentState) {\n      store.updateState(currentState);\n    }\n  }\n}\n\nexport function useStoreRootState() {\n  syncStoreRootState();\n  return useSyncExternalStore(\n    store.subscribeToRootState,\n    store.rootStateSnapshot,\n    store.rootStateSnapshot\n  );\n}\n\nexport function useStoreRouteInfo() {\n  syncStoreRootState();\n  return useSyncExternalStore(\n    store.subscribeToRootState,\n    store.routeInfoSnapshot,\n    store.routeInfoSnapshot\n  );\n}\n\nexport function useInitializeExpoRouter(context: RequireContext, initialLocation: URL | undefined) {\n  const navigationRef = useNavigationContainerRef();\n  useMemo(\n    () => store.initialize(context, navigationRef, initialLocation),\n    [context, initialLocation]\n  );\n  useExpoRouter();\n  return store;\n}\n"],"mappings":"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"}