{"version":3,"file":"Tabs.js","sourceRoot":"","sources":["../../src/layouts/Tabs.tsx"],"names":[],"mappings":";;;;;;AAAA,+DAIuC;AAEvC,kDAA0B;AAC1B,+CAAmD;AAEnD,2DAAwD;AACxD,oCAAuE;AACvE,uCAAoC;AAGpC,gDAAgD;AAChD,MAAM,kBAAkB,GAAG,IAAA,sCAAwB,GAAE,CAAC,SAAS,CAAC;AAEnD,QAAA,IAAI,GAAG,IAAA,qCAAiB,EAKnC,kBAAkB,EAAE,CAAC,OAAO,EAAE,EAAE;IAChC,MAAM,YAAY,GAAG,IAAA,6BAAqB,GAAE,CAAC;IAC7C,MAAM,iBAAiB,GAAG,IAAA,4BAAoB,GAAE,CAAC;IAEjD,MAAM,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;SACvD,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC;SAC3C,IAAI,CAAC,GAAG,CAAC,CAAC;IAEb,oCAAoC;IACpC,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;QAC5B,MAAM,aAAa,GAAG,GAAG,MAAM,CAAC,IAAI,IAAI,mBAAmB,EAAE,CAAC;QAE9D,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,UAAU,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,KAAK,SAAS,EAAE;YAC9E,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC;YAC5C,IAAI,OAAO,CAAC,YAAY,EAAE;gBACxB,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;aACnE;YACD,OAAO;gBACL,GAAG,MAAM;gBACT,aAAa,EAAE,MAAM,CAAC,aAAa,IAAI,aAAa;gBACpD,OAAO,EAAE;oBACP,GAAG,OAAO;oBACV,YAAY,EAAE,CAAC,KAAK,EAAE,EAAE;wBACtB,IAAI,IAAI,IAAI,IAAI,EAAE;4BAChB,OAAO,IAAI,CAAC;yBACb;wBACD,MAAM,QAAQ,GACZ,uBAAQ,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,wBAAS,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,wBAAS,CAAC,CAAC;wBACnF,OAAO,CACL,CAAC,WAAI,CACH,IAAI,KAAK,CAAC,CACV,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAC1C,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,OAAO,CAAC,CAAC,uBAAQ,CAAC,EAAE,KAAK,KAAK,CAAC,CAC/B,QAAQ,CAAC,CAAC,QAAQ,CAAC,EACnB,CACH,CAAC;oBACJ,CAAC;iBACF;aACF,CAAC;SACH;QACD,OAAO;YACL,GAAG,MAAM;YACT,aAAa,EAAE,MAAM,CAAC,aAAa,IAAI,aAAa;SACrD,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,kBAAe,YAAI,CAAC","sourcesContent":["import {\n  BottomTabNavigationEventMap,\n  BottomTabNavigationOptions,\n  createBottomTabNavigator,\n} from '@react-navigation/bottom-tabs';\nimport { ParamListBase, TabNavigationState } from '@react-navigation/native';\nimport React from 'react';\nimport { Pressable, Platform } from 'react-native';\n\nimport { withLayoutContext } from './withLayoutContext';\nimport { useGlobalSearchParams, useLocalSearchParams } from '../hooks';\nimport { Link } from '../link/Link';\nimport { Href } from '../link/href';\n\n// This is the only way to access the navigator.\nconst BottomTabNavigator = createBottomTabNavigator().Navigator;\n\nexport const Tabs = withLayoutContext<\n  BottomTabNavigationOptions & { href?: Href | null },\n  typeof BottomTabNavigator,\n  TabNavigationState<ParamListBase>,\n  BottomTabNavigationEventMap\n>(BottomTabNavigator, (screens) => {\n  const globalParams = useGlobalSearchParams();\n  const localSearchParams = useLocalSearchParams();\n\n  const navigationKeySuffix = Object.keys(localSearchParams)\n    .map((key) => `${key}=${globalParams[key]}`)\n    .join(':');\n\n  // Support the `href` shortcut prop.\n  return screens.map((screen) => {\n    const navigationKey = `${screen.name}-${navigationKeySuffix}`;\n\n    if (typeof screen.options !== 'function' && screen.options?.href !== undefined) {\n      const { href, ...options } = screen.options;\n      if (options.tabBarButton) {\n        throw new Error('Cannot use `href` and `tabBarButton` together.');\n      }\n      return {\n        ...screen,\n        navigationKey: screen.navigationKey ?? navigationKey,\n        options: {\n          ...options,\n          tabBarButton: (props) => {\n            if (href == null) {\n              return null;\n            }\n            const children =\n              Platform.OS === 'web' ? props.children : <Pressable>{props.children}</Pressable>;\n            return (\n              <Link\n                {...props}\n                style={[{ display: 'flex' }, props.style]}\n                href={href}\n                asChild={Platform.OS !== 'web'}\n                children={children}\n              />\n            );\n          },\n        },\n      };\n    }\n    return {\n      ...screen,\n      navigationKey: screen.navigationKey ?? navigationKey,\n    };\n  });\n});\n\nexport default Tabs;\n"]}