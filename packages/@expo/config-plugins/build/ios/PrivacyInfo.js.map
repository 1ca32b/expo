{"version":3,"file":"PrivacyInfo.js","names":["_plist","data","_interopRequireDefault","require","_fs","_path","_Xcodeproj","_","obj","__esModule","default","withPrivacyInfo","config","privacyManifests","ios","withXcodeProject","projectConfig","setPrivacyInfo","projectRoot","platformProjectRoot","modRequest","projectName","getProjectName","privacyFilePath","path","join","existingFileContent","getFileContents","parsedContent","plist","parse","mergedContent","mergePrivacyInfo","contents","build","ensureFileExists","applicationTarget","modResults","getTarget","uuid","targetUUIDs","additionalTargets","map","t","pbxTargetByName","productReference","hasFile","forEach","addResourceFileToGroup","filepath","groupName","project","isBuildFile","targetUuid","verbose","filePath","fs","existsSync","readFileSync","encoding","dirname","mkdirSync","recursive","writeFileSync","existing","NSPrivacyAccessedAPITypes","NSPrivacyCollectedDataTypes","NSPrivacyTracking","NSPrivacyTrackingDomains","structuredClone","newType","existingType","find","NSPrivacyAccessedAPIType","push","NSPrivacyAccessedAPITypeReasons","Set","concat","NSPrivacyCollectedDataType","NSPrivacyCollectedDataTypePurposes"],"sources":["../../src/ios/PrivacyInfo.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport plist from '@expo/plist';\nimport fs from 'fs';\nimport path from 'path';\nimport type { XcodeProject } from 'xcode';\n\nimport { addResourceFileToGroup, getProjectName } from './utils/Xcodeproj';\nimport { ExportedConfigWithProps, withXcodeProject } from '..';\n\nexport type PrivacyInfo = {\n  NSPrivacyAccessedAPITypes: {\n    NSPrivacyAccessedAPIType: string;\n    NSPrivacyAccessedAPITypeReasons: string[];\n  }[];\n  NSPrivacyCollectedDataTypes: {\n    NSPrivacyCollectedDataType: string;\n    NSPrivacyCollectedDataTypeLinked: boolean;\n    NSPrivacyCollectedDataTypeTracking: boolean;\n    NSPrivacyCollectedDataTypePurposes: string[];\n  }[];\n  NSPrivacyTracking: boolean;\n  NSPrivacyTrackingDomains: string[];\n  additionalTargets?: string[];\n};\n\nexport function withPrivacyInfo(config: ExpoConfig): ExpoConfig {\n  const privacyManifests = config.ios?.privacyManifests;\n  if (!privacyManifests) {\n    return config;\n  }\n\n  return withXcodeProject(config, (projectConfig: ExportedConfigWithProps<XcodeProject>) => {\n    return setPrivacyInfo(projectConfig, privacyManifests);\n  });\n}\n\nexport function setPrivacyInfo(\n  projectConfig: ExportedConfigWithProps<XcodeProject>,\n  privacyManifests: Partial<PrivacyInfo>\n) {\n  const { projectRoot, platformProjectRoot } = projectConfig.modRequest;\n\n  const projectName = getProjectName(projectRoot);\n\n  const privacyFilePath = path.join(platformProjectRoot, projectName, 'PrivacyInfo.xcprivacy');\n\n  const existingFileContent = getFileContents(privacyFilePath);\n\n  const parsedContent = existingFileContent ? plist.parse(existingFileContent) : {};\n  const mergedContent = mergePrivacyInfo(parsedContent, privacyManifests);\n  const contents = plist.build(mergedContent);\n\n  ensureFileExists(privacyFilePath, contents);\n\n  // Will not work when doing a dirty prebuild and changing the targetNames\n  const applicationTarget = projectConfig.modResults.getTarget('com.apple.product-type.application')?.uuid\n  let targetUUIDs = [applicationTarget]\n  if(privacyManifests.additionalTargets) {\n    targetUUIDs = [applicationTarget, ...privacyManifests.additionalTargets.map(t=>projectConfig.modResults.pbxTargetByName(t)?.productReference)]\n  }\n\n  if (!projectConfig.modResults.hasFile(privacyFilePath)) {\n    targetUUIDs.forEach(uuid => {\n      projectConfig.modResults = addResourceFileToGroup({\n        filepath: path.join(projectName, 'PrivacyInfo.xcprivacy'),\n        groupName: projectName,\n        project: projectConfig.modResults,\n        isBuildFile: true,\n        targetUuid: uuid,\n        verbose: true,\n      });\n    });\n  }\n\n  return projectConfig;\n}\n\nfunction getFileContents(filePath: string): string | null {\n  if (!fs.existsSync(filePath)) {\n    return null;\n  }\n  return fs.readFileSync(filePath, { encoding: 'utf8' });\n}\n\nfunction ensureFileExists(filePath: string, contents: string) {\n  if (!fs.existsSync(path.dirname(filePath))) {\n    fs.mkdirSync(path.dirname(filePath), { recursive: true });\n  }\n  fs.writeFileSync(filePath, contents);\n}\n\nexport function mergePrivacyInfo(\n  existing: Partial<PrivacyInfo>,\n  privacyManifests: Partial<PrivacyInfo>\n): PrivacyInfo {\n  let {\n    NSPrivacyAccessedAPITypes = [],\n    NSPrivacyCollectedDataTypes = [],\n    NSPrivacyTracking = false,\n    NSPrivacyTrackingDomains = [],\n  } = structuredClone(existing);\n  // tracking is a boolean, so we can just overwrite it\n  NSPrivacyTracking = privacyManifests.NSPrivacyTracking ?? existing.NSPrivacyTracking ?? false;\n  // merge the api types – for each type ensure the key is in the array, and if it is add the reason if it's not there\n  privacyManifests.NSPrivacyAccessedAPITypes?.forEach((newType) => {\n    const existingType = NSPrivacyAccessedAPITypes.find(\n      (t) => t.NSPrivacyAccessedAPIType === newType.NSPrivacyAccessedAPIType\n    );\n    if (!existingType) {\n      NSPrivacyAccessedAPITypes.push(newType);\n    } else {\n      existingType.NSPrivacyAccessedAPITypeReasons = [\n        ...new Set(\n          existingType?.NSPrivacyAccessedAPITypeReasons?.concat(\n            ...newType.NSPrivacyAccessedAPITypeReasons\n          )\n        ),\n      ];\n    }\n  });\n  // merge the collected data types – for each type ensure the key is in the array, and if it is add the purposes if it's not there\n  privacyManifests.NSPrivacyCollectedDataTypes?.forEach((newType) => {\n    const existingType = NSPrivacyCollectedDataTypes.find(\n      (t) => t.NSPrivacyCollectedDataType === newType.NSPrivacyCollectedDataType\n    );\n    if (!existingType) {\n      NSPrivacyCollectedDataTypes.push(newType);\n    } else {\n      existingType.NSPrivacyCollectedDataTypePurposes = [\n        ...new Set(\n          existingType?.NSPrivacyCollectedDataTypePurposes?.concat(\n            ...newType.NSPrivacyCollectedDataTypePurposes\n          )\n        ),\n      ];\n    }\n  });\n  // merge the tracking domains\n  NSPrivacyTrackingDomains = [\n    ...new Set(NSPrivacyTrackingDomains.concat(privacyManifests.NSPrivacyTrackingDomains ?? [])),\n  ];\n\n  return {\n    NSPrivacyAccessedAPITypes,\n    NSPrivacyCollectedDataTypes,\n    NSPrivacyTracking,\n    NSPrivacyTrackingDomains,\n  };\n}\n"],"mappings":"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"}