{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":196,"column":0,"index":5415}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"./AnimatedEvent","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":20,"column":0,"index":634},"end":{"line":20,"column":65,"index":699}}],"key":"HOnHqnbjAcj/KCNluvPGmX3fOfk="}},{"name":"./AnimatedImplementation","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":21,"column":0,"index":700},"end":{"line":21,"column":62,"index":762}}],"key":"ud5xTiqpQ+3hAH2//Uw+oJdz93Q="}},{"name":"./createAnimatedComponent","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":22,"column":0,"index":763},"end":{"line":22,"column":64,"index":827}}],"key":"uFwiUaeIXpvo7HKlpPXeaq/5/B8="}},{"name":"./nodes/AnimatedColor","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":23,"column":0,"index":828},"end":{"line":23,"column":50,"index":878}}],"key":"oyMYbT4lDg7Hs/Y3RQBVWd28kKA="}},{"name":"./nodes/AnimatedInterpolation","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":24,"column":0,"index":879},"end":{"line":24,"column":66,"index":945}}],"key":"z9Knz4MLC+VYfRwv3jv/YALbr/Y="}},{"name":"./nodes/AnimatedNode","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":25,"column":0,"index":946},"end":{"line":25,"column":48,"index":994}}],"key":"tigRkmlEdy3kzPhrQBTSjHELjqc="}},{"name":"./nodes/AnimatedValue","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":26,"column":0,"index":995},"end":{"line":26,"column":50,"index":1045}}],"key":"Fp6b3aN9F6seTFYEMtKA/pWebyQ="}},{"name":"./nodes/AnimatedValueXY","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":27,"column":0,"index":1046},"end":{"line":27,"column":54,"index":1100}}],"key":"pC63qj7XIR+IH5d3yU5MMOJkoo4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _AnimatedEvent = _$$_REQUIRE(_dependencyMap[1], \"./AnimatedEvent\");\n  var _AnimatedImplementation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./AnimatedImplementation\"));\n  var _createAnimatedComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./createAnimatedComponent\"));\n  var _AnimatedColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./nodes/AnimatedColor\"));\n  var _AnimatedInterpolation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./nodes/AnimatedInterpolation\"));\n  var _AnimatedNode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./nodes/AnimatedNode\"));\n  var _AnimatedValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./nodes/AnimatedValue\"));\n  var _AnimatedValueXY = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./nodes/AnimatedValueXY\"));\n  /**\n   * Animations are a source of flakiness in snapshot testing. This mock replaces\n   * animation functions from AnimatedImplementation with empty animations for\n   * predictability in tests. When possible the animation will run immediately\n   * to the final state.\n   */\n\n  // Prevent any callback invocation from recursively triggering another\n  // callback, which may trigger another animation\n  var inAnimationCallback = false;\n  function mockAnimationStart(start) {\n    return callback => {\n      var guardedCallback = callback == null ? callback : function () {\n        if (inAnimationCallback) {\n          console.warn('Ignoring recursive animation callback when running mock animations');\n          return;\n        }\n        inAnimationCallback = true;\n        try {\n          callback(...arguments);\n        } finally {\n          inAnimationCallback = false;\n        }\n      };\n      start(guardedCallback);\n    };\n  }\n  var emptyAnimation = {\n    start: () => {},\n    stop: () => {},\n    reset: () => {},\n    _startNativeLoop: () => {},\n    _isUsingNativeDriver: () => {\n      return false;\n    }\n  };\n  var mockCompositeAnimation = animations => ({\n    ...emptyAnimation,\n    start: mockAnimationStart(callback => {\n      animations.forEach(animation => animation.start());\n      callback?.({\n        finished: true\n      });\n    })\n  });\n  var spring = function (value, config) {\n    var anyValue = value;\n    return {\n      ...emptyAnimation,\n      start: mockAnimationStart(callback => {\n        anyValue.setValue(config.toValue);\n        callback?.({\n          finished: true\n        });\n      })\n    };\n  };\n  var timing = function (value, config) {\n    var anyValue = value;\n    return {\n      ...emptyAnimation,\n      start: mockAnimationStart(callback => {\n        anyValue.setValue(config.toValue);\n        callback?.({\n          finished: true\n        });\n      })\n    };\n  };\n  var decay = function (value, config) {\n    return emptyAnimation;\n  };\n  var sequence = function (animations) {\n    return mockCompositeAnimation(animations);\n  };\n  var parallel = function (animations, config) {\n    return mockCompositeAnimation(animations);\n  };\n  var delay = function (time) {\n    return emptyAnimation;\n  };\n  var stagger = function (time, animations) {\n    return mockCompositeAnimation(animations);\n  };\n  var loop = function (animation) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$iterations = _ref.iterations,\n      iterations = _ref$iterations === void 0 ? -1 : _ref$iterations;\n    return emptyAnimation;\n  };\n  var _default = exports.default = {\n    Value: _AnimatedValue.default,\n    ValueXY: _AnimatedValueXY.default,\n    Color: _AnimatedColor.default,\n    Interpolation: _AnimatedInterpolation.default,\n    Node: _AnimatedNode.default,\n    decay,\n    timing,\n    spring,\n    add: _AnimatedImplementation.default.add,\n    subtract: _AnimatedImplementation.default.subtract,\n    divide: _AnimatedImplementation.default.divide,\n    multiply: _AnimatedImplementation.default.multiply,\n    modulo: _AnimatedImplementation.default.modulo,\n    diffClamp: _AnimatedImplementation.default.diffClamp,\n    delay,\n    sequence,\n    parallel,\n    stagger,\n    loop,\n    event: _AnimatedImplementation.default.event,\n    createAnimatedComponent: _createAnimatedComponent.default,\n    attachNativeEvent: _AnimatedEvent.attachNativeEvent,\n    forkEvent: _AnimatedImplementation.default.forkEvent,\n    unforkEvent: _AnimatedImplementation.default.unforkEvent,\n    Event: _AnimatedEvent.AnimatedEvent\n  };\n});","lineCount":144,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_interopRequireDefault"],[14,28,11,13],[14,31,11,13,"_$$_REQUIRE"],[14,42,11,13],[14,43,11,13,"_dependencyMap"],[14,57,11,13],[15,2,11,13,"Object"],[15,8,11,13],[15,9,11,13,"defineProperty"],[15,23,11,13],[15,24,11,13,"exports"],[15,31,11,13],[16,4,11,13,"value"],[16,9,11,13],[17,2,11,13],[18,2,11,13,"exports"],[18,9,11,13],[18,10,11,13,"default"],[18,17,11,13],[19,2,20,0],[19,6,20,0,"_AnimatedEvent"],[19,20,20,0],[19,23,20,0,"_$$_REQUIRE"],[19,34,20,0],[19,35,20,0,"_dependencyMap"],[19,49,20,0],[20,2,21,0],[20,6,21,0,"_AnimatedImplementation"],[20,29,21,0],[20,32,21,0,"_interopRequireDefault"],[20,54,21,0],[20,55,21,0,"_$$_REQUIRE"],[20,66,21,0],[20,67,21,0,"_dependencyMap"],[20,81,21,0],[21,2,22,0],[21,6,22,0,"_createAnimatedComponent"],[21,30,22,0],[21,33,22,0,"_interopRequireDefault"],[21,55,22,0],[21,56,22,0,"_$$_REQUIRE"],[21,67,22,0],[21,68,22,0,"_dependencyMap"],[21,82,22,0],[22,2,23,0],[22,6,23,0,"_AnimatedColor"],[22,20,23,0],[22,23,23,0,"_interopRequireDefault"],[22,45,23,0],[22,46,23,0,"_$$_REQUIRE"],[22,57,23,0],[22,58,23,0,"_dependencyMap"],[22,72,23,0],[23,2,24,0],[23,6,24,0,"_AnimatedInterpolation"],[23,28,24,0],[23,31,24,0,"_interopRequireDefault"],[23,53,24,0],[23,54,24,0,"_$$_REQUIRE"],[23,65,24,0],[23,66,24,0,"_dependencyMap"],[23,80,24,0],[24,2,25,0],[24,6,25,0,"_AnimatedNode"],[24,19,25,0],[24,22,25,0,"_interopRequireDefault"],[24,44,25,0],[24,45,25,0,"_$$_REQUIRE"],[24,56,25,0],[24,57,25,0,"_dependencyMap"],[24,71,25,0],[25,2,26,0],[25,6,26,0,"_AnimatedValue"],[25,20,26,0],[25,23,26,0,"_interopRequireDefault"],[25,45,26,0],[25,46,26,0,"_$$_REQUIRE"],[25,57,26,0],[25,58,26,0,"_dependencyMap"],[25,72,26,0],[26,2,27,0],[26,6,27,0,"_AnimatedValueXY"],[26,22,27,0],[26,25,27,0,"_interopRequireDefault"],[26,47,27,0],[26,48,27,0,"_$$_REQUIRE"],[26,59,27,0],[26,60,27,0,"_dependencyMap"],[26,74,27,0],[27,2,29,0],[28,0,30,0],[29,0,31,0],[30,0,32,0],[31,0,33,0],[32,0,34,0],[34,2,36,0],[35,2,37,0],[36,2,38,0],[36,6,38,4,"inAnimationCallback"],[36,25,38,23],[36,28,38,26],[36,33,38,31],[37,2,39,0],[37,11,39,9,"mockAnimationStart"],[37,29,39,27,"mockAnimationStart"],[37,30,40,2,"start"],[37,35,40,42],[37,37,41,37],[38,4,42,2],[38,11,42,9,"callback"],[38,19,42,17],[38,23,42,21],[39,6,43,4],[39,10,43,10,"guardedCallback"],[39,25,43,25],[39,28,44,6,"callback"],[39,36,44,14],[39,40,44,18],[39,44,44,22],[39,47,45,10,"callback"],[39,55,45,18],[39,58,46,10],[39,70,46,41],[40,8,47,12],[40,12,47,16,"inAnimationCallback"],[40,31,47,35],[40,33,47,37],[41,10,48,14,"console"],[41,17,48,21],[41,18,48,22,"warn"],[41,22,48,26],[41,23,49,16],[41,91,50,14],[41,92,50,15],[42,10,51,14],[43,8,52,12],[44,8,53,12,"inAnimationCallback"],[44,27,53,31],[44,30,53,34],[44,34,53,38],[45,8,54,12],[45,12,54,16],[46,10,55,14,"callback"],[46,18,55,22],[46,19,55,23],[46,22,55,23,"arguments"],[46,31,55,30],[46,32,55,31],[47,8,56,12],[47,9,56,13],[47,18,56,22],[48,10,57,14,"inAnimationCallback"],[48,29,57,33],[48,32,57,36],[48,37,57,41],[49,8,58,12],[50,6,59,10],[50,7,59,11],[51,6,60,4,"start"],[51,11,60,9],[51,12,60,10,"guardedCallback"],[51,27,60,25],[51,28,60,26],[52,4,61,2],[52,5,61,3],[53,2,62,0],[54,2,73,0],[54,6,73,6,"emptyAnimation"],[54,20,73,20],[54,23,73,23],[55,4,74,2,"start"],[55,9,74,7],[55,11,74,9,"start"],[55,12,74,9],[55,17,74,15],[55,18,74,16],[55,19,74,17],[56,4,75,2,"stop"],[56,8,75,6],[56,10,75,8,"stop"],[56,11,75,8],[56,16,75,14],[56,17,75,15],[56,18,75,16],[57,4,76,2,"reset"],[57,9,76,7],[57,11,76,9,"reset"],[57,12,76,9],[57,17,76,15],[57,18,76,16],[57,19,76,17],[58,4,77,2,"_startNativeLoop"],[58,20,77,18],[58,22,77,20,"_startNativeLoop"],[58,23,77,20],[58,28,77,26],[58,29,77,27],[58,30,77,28],[59,4,78,2,"_isUsingNativeDriver"],[59,24,78,22],[59,26,78,24,"_isUsingNativeDriver"],[59,27,78,24],[59,32,78,30],[60,6,79,4],[60,13,79,11],[60,18,79,16],[61,4,80,2],[62,2,81,0],[62,3,81,1],[63,2,83,0],[63,6,83,6,"mockCompositeAnimation"],[63,28,83,28],[63,31,84,2,"animations"],[63,41,84,39],[63,46,85,26],[64,4,86,2],[64,7,86,5,"emptyAnimation"],[64,21,86,19],[65,4,87,2,"start"],[65,9,87,7],[65,11,87,9,"mockAnimationStart"],[65,29,87,27],[65,30,87,29,"callback"],[65,38,87,52],[65,42,87,63],[66,6,88,4,"animations"],[66,16,88,14],[66,17,88,15,"forEach"],[66,24,88,22],[66,25,88,23,"animation"],[66,34,88,32],[66,38,88,36,"animation"],[66,47,88,45],[66,48,88,46,"start"],[66,53,88,51],[66,54,88,52],[66,55,88,53],[66,56,88,54],[67,6,89,4,"callback"],[67,14,89,12],[67,17,89,15],[68,8,89,16,"finished"],[68,16,89,24],[68,18,89,26],[69,6,89,30],[69,7,89,31],[69,8,89,32],[70,4,90,2],[70,5,90,3],[71,2,91,0],[71,3,91,1],[71,4,91,2],[72,2,93,0],[72,6,93,6,"spring"],[72,12,93,12],[72,15,93,15],[72,24,93,15,"spring"],[72,25,94,2,"value"],[72,30,94,56],[72,32,95,2,"config"],[72,38,95,31],[72,40,96,22],[73,4,97,2],[73,8,97,8,"anyValue"],[73,16,97,21],[73,19,97,24,"value"],[73,24,97,29],[74,4,98,2],[74,11,98,9],[75,6,99,4],[75,9,99,7,"emptyAnimation"],[75,23,99,21],[76,6,100,4,"start"],[76,11,100,9],[76,13,100,11,"mockAnimationStart"],[76,31,100,29],[76,32,100,31,"callback"],[76,40,100,54],[76,44,100,65],[77,8,101,6,"anyValue"],[77,16,101,14],[77,17,101,15,"setValue"],[77,25,101,23],[77,26,101,24,"config"],[77,32,101,30],[77,33,101,31,"toValue"],[77,40,101,38],[77,41,101,39],[78,8,102,6,"callback"],[78,16,102,14],[78,19,102,17],[79,10,102,18,"finished"],[79,18,102,26],[79,20,102,28],[80,8,102,32],[80,9,102,33],[80,10,102,34],[81,6,103,4],[81,7,103,5],[82,4,104,2],[82,5,104,3],[83,2,105,0],[83,3,105,1],[84,2,107,0],[84,6,107,6,"timing"],[84,12,107,12],[84,15,107,15],[84,24,107,15,"timing"],[84,25,108,2,"value"],[84,30,108,56],[84,32,109,2,"config"],[84,38,109,31],[84,40,110,22],[85,4,111,2],[85,8,111,8,"anyValue"],[85,16,111,21],[85,19,111,24,"value"],[85,24,111,29],[86,4,112,2],[86,11,112,9],[87,6,113,4],[87,9,113,7,"emptyAnimation"],[87,23,113,21],[88,6,114,4,"start"],[88,11,114,9],[88,13,114,11,"mockAnimationStart"],[88,31,114,29],[88,32,114,31,"callback"],[88,40,114,54],[88,44,114,65],[89,8,115,6,"anyValue"],[89,16,115,14],[89,17,115,15,"setValue"],[89,25,115,23],[89,26,115,24,"config"],[89,32,115,30],[89,33,115,31,"toValue"],[89,40,115,38],[89,41,115,39],[90,8,116,6,"callback"],[90,16,116,14],[90,19,116,17],[91,10,116,18,"finished"],[91,18,116,26],[91,20,116,28],[92,8,116,32],[92,9,116,33],[92,10,116,34],[93,6,117,4],[93,7,117,5],[94,4,118,2],[94,5,118,3],[95,2,119,0],[95,3,119,1],[96,2,121,0],[96,6,121,6,"decay"],[96,11,121,11],[96,14,121,14],[96,23,121,14,"decay"],[96,24,122,2,"value"],[96,29,122,56],[96,31,123,2,"config"],[96,37,123,30],[96,39,124,22],[97,4,125,2],[97,11,125,9,"emptyAnimation"],[97,25,125,23],[98,2,126,0],[98,3,126,1],[99,2,128,0],[99,6,128,6,"sequence"],[99,14,128,14],[99,17,128,17],[99,26,128,17,"sequence"],[99,27,129,2,"animations"],[99,37,129,39],[99,39,130,22],[100,4,131,2],[100,11,131,9,"mockCompositeAnimation"],[100,33,131,31],[100,34,131,32,"animations"],[100,44,131,42],[100,45,131,43],[101,2,132,0],[101,3,132,1],[102,2,135,0],[102,6,135,6,"parallel"],[102,14,135,14],[102,17,135,17],[102,26,135,17,"parallel"],[102,27,136,2,"animations"],[102,37,136,39],[102,39,137,2,"config"],[102,45,137,26],[102,47,138,22],[103,4,139,2],[103,11,139,9,"mockCompositeAnimation"],[103,33,139,31],[103,34,139,32,"animations"],[103,44,139,42],[103,45,139,43],[104,2,140,0],[104,3,140,1],[105,2,142,0],[105,6,142,6,"delay"],[105,11,142,11],[105,14,142,14],[105,23,142,14,"delay"],[105,24,142,24,"time"],[105,28,142,36],[105,30,142,58],[106,4,143,2],[106,11,143,9,"emptyAnimation"],[106,25,143,23],[107,2,144,0],[107,3,144,1],[108,2,146,0],[108,6,146,6,"stagger"],[108,13,146,13],[108,16,146,16],[108,25,146,16,"stagger"],[108,26,147,2,"time"],[108,30,147,14],[108,32,148,2,"animations"],[108,42,148,39],[108,44,149,22],[109,4,150,2],[109,11,150,9,"mockCompositeAnimation"],[109,33,150,31],[109,34,150,32,"animations"],[109,44,150,42],[109,45,150,43],[110,2,151,0],[110,3,151,1],[111,2,159,0],[111,6,159,6,"loop"],[111,10,159,10],[111,13,159,13],[111,22,159,13,"loop"],[111,23,160,2,"animation"],[111,32,160,31],[111,34,163,22],[112,4,163,22],[112,8,163,22,"_ref"],[112,12,163,22],[112,15,163,22,"arguments"],[112,24,163,22],[112,25,163,22,"length"],[112,31,163,22],[112,39,163,22,"arguments"],[112,48,163,22],[112,56,163,22,"undefined"],[112,65,163,22],[112,68,163,22,"arguments"],[112,77,163,22],[112,83,162,43],[112,84,162,44],[112,85,162,45],[113,6,162,45,"_ref$iterations"],[113,21,162,45],[113,24,162,45,"_ref"],[113,28,162,45],[113,29,162,3,"iterations"],[113,39,162,13],[114,6,162,3,"iterations"],[114,16,162,13],[114,19,162,13,"_ref$iterations"],[114,34,162,13],[114,48,162,16],[114,49,162,17],[114,50,162,18],[114,53,162,18,"_ref$iterations"],[114,68,162,18],[115,4,164,2],[115,11,164,9,"emptyAnimation"],[115,25,164,23],[116,2,165,0],[116,3,165,1],[117,2,165,2],[117,6,165,2,"_default"],[117,14,165,2],[117,17,165,2,"exports"],[117,24,165,2],[117,25,165,2,"default"],[117,32,165,2],[117,35,169,15],[118,4,170,2,"Value"],[118,9,170,7],[118,11,170,9,"AnimatedValue"],[118,33,170,22],[119,4,171,2,"ValueXY"],[119,11,171,9],[119,13,171,11,"AnimatedValueXY"],[119,37,171,26],[120,4,172,2,"Color"],[120,9,172,7],[120,11,172,9,"AnimatedColor"],[120,33,172,22],[121,4,173,2,"Interpolation"],[121,17,173,15],[121,19,173,17,"AnimatedInterpolation"],[121,49,173,38],[122,4,174,2,"Node"],[122,8,174,6],[122,10,174,8,"AnimatedNode"],[122,31,174,20],[123,4,175,2,"decay"],[123,9,175,7],[124,4,176,2,"timing"],[124,10,176,8],[125,4,177,2,"spring"],[125,10,177,8],[126,4,178,2,"add"],[126,7,178,5],[126,9,178,7,"AnimatedImplementation"],[126,40,178,29],[126,41,178,30,"add"],[126,44,178,33],[127,4,179,2,"subtract"],[127,12,179,10],[127,14,179,12,"AnimatedImplementation"],[127,45,179,34],[127,46,179,35,"subtract"],[127,54,179,43],[128,4,180,2,"divide"],[128,10,180,8],[128,12,180,10,"AnimatedImplementation"],[128,43,180,32],[128,44,180,33,"divide"],[128,50,180,39],[129,4,181,2,"multiply"],[129,12,181,10],[129,14,181,12,"AnimatedImplementation"],[129,45,181,34],[129,46,181,35,"multiply"],[129,54,181,43],[130,4,182,2,"modulo"],[130,10,182,8],[130,12,182,10,"AnimatedImplementation"],[130,43,182,32],[130,44,182,33,"modulo"],[130,50,182,39],[131,4,183,2,"diffClamp"],[131,13,183,11],[131,15,183,13,"AnimatedImplementation"],[131,46,183,35],[131,47,183,36,"diffClamp"],[131,56,183,45],[132,4,184,2,"delay"],[132,9,184,7],[133,4,185,2,"sequence"],[133,12,185,10],[134,4,186,2,"parallel"],[134,12,186,10],[135,4,187,2,"stagger"],[135,11,187,9],[136,4,188,2,"loop"],[136,8,188,6],[137,4,189,2,"event"],[137,9,189,7],[137,11,189,9,"AnimatedImplementation"],[137,42,189,31],[137,43,189,32,"event"],[137,48,189,37],[138,4,190,2,"createAnimatedComponent"],[138,27,190,25],[138,29,190,2,"createAnimatedComponent"],[138,61,190,25],[139,4,191,2,"attachNativeEvent"],[139,21,191,19],[139,23,191,2,"attachNativeEvent"],[139,55,191,19],[140,4,192,2,"forkEvent"],[140,13,192,11],[140,15,192,13,"AnimatedImplementation"],[140,46,192,35],[140,47,192,36,"forkEvent"],[140,56,192,45],[141,4,193,2,"unforkEvent"],[141,15,193,13],[141,17,193,15,"AnimatedImplementation"],[141,48,193,37],[141,49,193,38,"unforkEvent"],[141,60,193,49],[142,4,194,2,"Event"],[142,9,194,7],[142,11,194,9,"AnimatedEvent"],[143,2,195,0],[143,3,195,1],[144,0,195,1],[144,3]],"functionMap":{"names":["<global>","mockAnimationStart","<anonymous>","emptyAnimation.start","emptyAnimation.stop","emptyAnimation.reset","emptyAnimation._startNativeLoop","emptyAnimation._isUsingNativeDriver","mockCompositeAnimation","mockAnimationStart$argument_0","animations.forEach$argument_0","spring","timing","decay","sequence","parallel","delay","stagger","loop"],"mappings":"AAA;ACsC;SCG;GDmB;CDC;SGY,QH;QIC,QJ;SKC,QL;oBMC,QN;wBOC;GPE;+BQG;4BCI;uBCC,8BD;GDE;ERC;eWE;8BFO;KEG;CXE;eYE;8BHO;KGG;CZE;caE;CbK;iBcE;CdI;iBeG;CfK;cgBE;ChBE;gBiBE;CjBK;akBQ;ClBM"}},"type":"js/module"}]}