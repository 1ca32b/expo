{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":616,"column":0,"index":19796}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../../src/private/featureflags/ReactNativeFeatureFlags","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":21,"column":0,"index":608},"end":{"line":21,"column":98,"index":706}}],"key":"On9He5TjYQGJzGlPyyzDdz1kZUA="}},{"name":"../EventEmitter/NativeEventEmitter","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":22,"column":0,"index":707},"end":{"line":22,"column":68,"index":775}}],"key":"FxUYVDH3eq4FUmUOIfY0RLK75tc="}},{"name":"../EventEmitter/RCTDeviceEventEmitter","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":23,"column":0,"index":776},"end":{"line":23,"column":74,"index":850}}],"key":"8/8s2qHajvAK0ZSPYhrCXcF24uY="}},{"name":"../Utilities/Platform","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":24,"column":0,"index":851},"end":{"line":24,"column":45,"index":896}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"./NativeAnimatedModule","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":25,"column":0,"index":897},"end":{"line":25,"column":66,"index":963}}],"key":"2IHkob69BqWPcRW7TYgRTU/H7xU="}},{"name":"./NativeAnimatedTurboModule","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":26,"column":0,"index":964},"end":{"line":26,"column":68,"index":1032}}],"key":"5lLuBbz92WMWkrATIjmhcGDqF0g="}},{"name":"invariant","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":27,"column":0,"index":1033},"end":{"line":27,"column":34,"index":1067}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var ReactNativeFeatureFlags = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1], \"../../src/private/featureflags/ReactNativeFeatureFlags\"));\n  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../EventEmitter/NativeEventEmitter\"));\n  var _RCTDeviceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../EventEmitter/RCTDeviceEventEmitter\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../Utilities/Platform\"));\n  var _NativeAnimatedModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./NativeAnimatedModule\"));\n  var _NativeAnimatedTurboModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./NativeAnimatedTurboModule\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"invariant\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  // TODO T69437152 @petetheheat - Delete this fork when Fabric ships to 100%.\n  var NativeAnimatedModule = _NativeAnimatedModule.default ?? _NativeAnimatedTurboModule.default;\n  var __nativeAnimatedNodeTagCount = 1; /* used for animated nodes */\n  var __nativeAnimationIdCount = 1; /* used for started animations */\n\n  var nativeEventEmitter;\n  var waitingForQueuedOperations = new Set();\n  var queueOperations = false;\n  var queue = [];\n  // $FlowFixMe\n  var singleOpQueue = [];\n  var useSingleOpBatching = _Platform.default.OS === 'android' && !!NativeAnimatedModule?.queueAndExecuteBatchedOperations && ReactNativeFeatureFlags.animatedShouldUseSingleOp();\n  var flushQueueTimeout = null;\n  var eventListenerGetValueCallbacks = {};\n  var eventListenerAnimationFinishedCallbacks = {};\n  var globalEventEmitterGetValueListener = null;\n  var globalEventEmitterAnimationFinishedListener = null;\n  var nativeOps = useSingleOpBatching ? function () {\n    var apis = ['createAnimatedNode',\n    // 1\n    'updateAnimatedNodeConfig',\n    // 2\n    'getValue',\n    // 3\n    'startListeningToAnimatedNodeValue',\n    // 4\n    'stopListeningToAnimatedNodeValue',\n    // 5\n    'connectAnimatedNodes',\n    // 6\n    'disconnectAnimatedNodes',\n    // 7\n    'startAnimatingNode',\n    // 8\n    'stopAnimation',\n    // 9\n    'setAnimatedNodeValue',\n    // 10\n    'setAnimatedNodeOffset',\n    // 11\n    'flattenAnimatedNodeOffset',\n    // 12\n    'extractAnimatedNodeOffset',\n    // 13\n    'connectAnimatedNodeToView',\n    // 14\n    'disconnectAnimatedNodeFromView',\n    // 15\n    'restoreDefaultValues',\n    // 16\n    'dropAnimatedNode',\n    // 17\n    'addAnimatedEventToView',\n    // 18\n    'removeAnimatedEventFromView',\n    // 19\n    'addListener',\n    // 20\n    'removeListener' // 21\n    ];\n    return apis.reduce((acc, functionName, i) => {\n      // These indices need to be kept in sync with the indices in native (see NativeAnimatedModule in Java, or the equivalent for any other native platform).\n      // $FlowFixMe[prop-missing]\n      acc[functionName] = i + 1;\n      return acc;\n    }, {});\n  }() : NativeAnimatedModule;\n\n  /**\n   * Wrappers around NativeAnimatedModule to provide flow and autocomplete support for\n   * the native module methods, and automatic queue management on Android\n   */\n  var API = {\n    getValue: function (tag, saveValueCallback) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (useSingleOpBatching) {\n        if (saveValueCallback) {\n          eventListenerGetValueCallbacks[tag] = saveValueCallback;\n        }\n        // $FlowFixMe\n        API.queueOperation(nativeOps.getValue, tag);\n      } else {\n        API.queueOperation(nativeOps.getValue, tag, saveValueCallback);\n      }\n    },\n    setWaitingForIdentifier: function (id) {\n      waitingForQueuedOperations.add(id);\n      queueOperations = true;\n      if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush() && flushQueueTimeout) {\n        clearTimeout(flushQueueTimeout);\n      }\n    },\n    unsetWaitingForIdentifier: function (id) {\n      waitingForQueuedOperations.delete(id);\n      if (waitingForQueuedOperations.size === 0) {\n        queueOperations = false;\n        API.disableQueue();\n      }\n    },\n    disableQueue: function () {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush()) {\n        var prevTimeout = flushQueueTimeout;\n        clearImmediate(prevTimeout);\n        flushQueueTimeout = setImmediate(API.flushQueue);\n      } else {\n        API.flushQueue();\n      }\n    },\n    flushQueue: function () {\n      // TODO: (T136971132)\n      (0, _invariant.default)(NativeAnimatedModule || process.env.NODE_ENV === 'test', 'Native animated module is not available');\n      flushQueueTimeout = null;\n\n      // Early returns before calling any APIs\n      if (useSingleOpBatching && singleOpQueue.length === 0) {\n        return;\n      }\n      if (!useSingleOpBatching && queue.length === 0) {\n        return;\n      }\n      if (useSingleOpBatching) {\n        // Set up event listener for callbacks if it's not set up\n        if (!globalEventEmitterGetValueListener || !globalEventEmitterAnimationFinishedListener) {\n          setupGlobalEventEmitterListeners();\n        }\n        // Single op batching doesn't use callback functions, instead we\n        // use RCTDeviceEventEmitter. This reduces overhead of sending lots of\n        // JSI functions across to native code; but also, TM infrastructure currently\n        // does not support packing a function into native arrays.\n        NativeAnimatedModule?.queueAndExecuteBatchedOperations?.(singleOpQueue);\n        singleOpQueue.length = 0;\n      } else {\n        _Platform.default.OS === 'android' && NativeAnimatedModule?.startOperationBatch?.();\n        for (var q = 0, l = queue.length; q < l; q++) {\n          queue[q]();\n        }\n        queue.length = 0;\n        _Platform.default.OS === 'android' && NativeAnimatedModule?.finishOperationBatch?.();\n      }\n    },\n    queueOperation: function (fn) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (useSingleOpBatching) {\n        // Get the command ID from the queued function, and push that ID and any arguments needed to execute the operation\n        // $FlowFixMe: surprise, fn is actually a number\n        singleOpQueue.push(fn, ...args);\n        return;\n      }\n\n      // If queueing is explicitly on, *or* the queue has not yet\n      // been flushed, use the queue. This is to prevent operations\n      // from being executed out of order.\n      if (queueOperations || queue.length !== 0) {\n        queue.push(() => fn(...args));\n      } else {\n        fn(...args);\n      }\n    },\n    createAnimatedNode: function (tag, config) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.createAnimatedNode, tag, config);\n    },\n    updateAnimatedNodeConfig: function (tag, config) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (nativeOps.updateAnimatedNodeConfig) {\n        API.queueOperation(nativeOps.updateAnimatedNodeConfig, tag, config);\n      }\n    },\n    startListeningToAnimatedNodeValue: function (tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.startListeningToAnimatedNodeValue, tag);\n    },\n    stopListeningToAnimatedNodeValue: function (tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.stopListeningToAnimatedNodeValue, tag);\n    },\n    connectAnimatedNodes: function (parentTag, childTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.connectAnimatedNodes, parentTag, childTag);\n    },\n    disconnectAnimatedNodes: function (parentTag, childTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.disconnectAnimatedNodes, parentTag, childTag);\n    },\n    startAnimatingNode: function (animationId, nodeTag, config, endCallback) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (useSingleOpBatching) {\n        if (endCallback) {\n          eventListenerAnimationFinishedCallbacks[animationId] = endCallback;\n        }\n        // $FlowFixMe\n        API.queueOperation(\n        // $FlowFixMe[incompatible-call]\n        nativeOps.startAnimatingNode, animationId, nodeTag, config);\n      } else {\n        API.queueOperation(nativeOps.startAnimatingNode, animationId, nodeTag, config, endCallback);\n      }\n    },\n    stopAnimation: function (animationId) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.stopAnimation, animationId);\n    },\n    setAnimatedNodeValue: function (nodeTag, value) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.setAnimatedNodeValue, nodeTag, value);\n    },\n    setAnimatedNodeOffset: function (nodeTag, offset) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.setAnimatedNodeOffset, nodeTag, offset);\n    },\n    flattenAnimatedNodeOffset: function (nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.flattenAnimatedNodeOffset, nodeTag);\n    },\n    extractAnimatedNodeOffset: function (nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.extractAnimatedNodeOffset, nodeTag);\n    },\n    connectAnimatedNodeToView: function (nodeTag, viewTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.connectAnimatedNodeToView, nodeTag, viewTag);\n    },\n    disconnectAnimatedNodeFromView: function (nodeTag, viewTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.disconnectAnimatedNodeFromView, nodeTag, viewTag);\n    },\n    restoreDefaultValues: function (nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      // Backwards compat with older native runtimes, can be removed later.\n      if (nativeOps.restoreDefaultValues != null) {\n        API.queueOperation(nativeOps.restoreDefaultValues, nodeTag);\n      }\n    },\n    dropAnimatedNode: function (tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.dropAnimatedNode, tag);\n    },\n    addAnimatedEventToView: function (viewTag, eventName, eventMapping) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.addAnimatedEventToView, viewTag, eventName, eventMapping);\n    },\n    removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.removeAnimatedEventFromView, viewTag, eventName, animatedNodeTag);\n    }\n  };\n  function setupGlobalEventEmitterListeners() {\n    globalEventEmitterGetValueListener = _RCTDeviceEventEmitter.default.addListener('onNativeAnimatedModuleGetValue', params => {\n      var tag = params.tag;\n      var callback = eventListenerGetValueCallbacks[tag];\n      if (!callback) {\n        return;\n      }\n      callback(params.value);\n      delete eventListenerGetValueCallbacks[tag];\n    });\n    globalEventEmitterAnimationFinishedListener = _RCTDeviceEventEmitter.default.addListener('onNativeAnimatedModuleAnimationFinished', params => {\n      // TODO: remove Array.isArray once native changes have propagated\n      var animations = Array.isArray(params) ? params : [params];\n      for (var animation of animations) {\n        var animationId = animation.animationId;\n        var callback = eventListenerAnimationFinishedCallbacks[animationId];\n        if (callback) {\n          callback(animation);\n          delete eventListenerAnimationFinishedCallbacks[animationId];\n        }\n      }\n    });\n  }\n\n  /**\n   * Styles allowed by the native animated implementation.\n   *\n   * In general native animated implementation should support any numeric or color property that\n   * doesn't need to be updated through the shadow view hierarchy (all non-layout properties).\n   */\n  var SUPPORTED_COLOR_STYLES = {\n    backgroundColor: true,\n    borderBottomColor: true,\n    borderColor: true,\n    borderEndColor: true,\n    borderLeftColor: true,\n    borderRightColor: true,\n    borderStartColor: true,\n    borderTopColor: true,\n    color: true,\n    tintColor: true\n  };\n  var SUPPORTED_STYLES = {\n    ...SUPPORTED_COLOR_STYLES,\n    borderBottomEndRadius: true,\n    borderBottomLeftRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomStartRadius: true,\n    borderEndEndRadius: true,\n    borderEndStartRadius: true,\n    borderRadius: true,\n    borderTopEndRadius: true,\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderTopStartRadius: true,\n    borderStartEndRadius: true,\n    borderStartStartRadius: true,\n    elevation: true,\n    opacity: true,\n    transform: true,\n    zIndex: true,\n    /* ios styles */\n    shadowOpacity: true,\n    shadowRadius: true,\n    /* legacy android transform properties */\n    scaleX: true,\n    scaleY: true,\n    translateX: true,\n    translateY: true\n  };\n  var SUPPORTED_TRANSFORMS = {\n    translateX: true,\n    translateY: true,\n    scale: true,\n    scaleX: true,\n    scaleY: true,\n    rotate: true,\n    rotateX: true,\n    rotateY: true,\n    rotateZ: true,\n    perspective: true,\n    skewX: true,\n    skewY: true,\n    matrix: ReactNativeFeatureFlags.shouldUseAnimatedObjectForTransform()\n  };\n  var SUPPORTED_INTERPOLATION_PARAMS = {\n    inputRange: true,\n    outputRange: true,\n    extrapolate: true,\n    extrapolateRight: true,\n    extrapolateLeft: true\n  };\n  function addWhitelistedStyleProp(prop) {\n    // $FlowFixMe[prop-missing]\n    SUPPORTED_STYLES[prop] = true;\n  }\n  function addWhitelistedTransformProp(prop) {\n    // $FlowFixMe[prop-missing]\n    SUPPORTED_TRANSFORMS[prop] = true;\n  }\n  function addWhitelistedInterpolationParam(param) {\n    // $FlowFixMe[prop-missing]\n    SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n  }\n  function isSupportedColorStyleProp(prop) {\n    // $FlowFixMe[invalid-computed-prop]\n    return SUPPORTED_COLOR_STYLES[prop] === true;\n  }\n  function isSupportedStyleProp(prop) {\n    // $FlowFixMe[invalid-computed-prop]\n    return SUPPORTED_STYLES[prop] === true;\n  }\n  function isSupportedTransformProp(prop) {\n    // $FlowFixMe[invalid-computed-prop]\n    return SUPPORTED_TRANSFORMS[prop] === true;\n  }\n  function isSupportedInterpolationParam(param) {\n    // $FlowFixMe[invalid-computed-prop]\n    return SUPPORTED_INTERPOLATION_PARAMS[param] === true;\n  }\n  function validateTransform(configs) {\n    configs.forEach(config => {\n      if (!isSupportedTransformProp(config.property)) {\n        throw new Error(`Property '${config.property}' is not supported by native animated module`);\n      }\n    });\n  }\n  function validateStyles(styles) {\n    for (var _key2 in styles) {\n      if (!isSupportedStyleProp(_key2)) {\n        throw new Error(`Style property '${_key2}' is not supported by native animated module`);\n      }\n    }\n  }\n  function validateInterpolation(config) {\n    for (var _key3 in config) {\n      if (!isSupportedInterpolationParam(_key3)) {\n        throw new Error(`Interpolation property '${_key3}' is not supported by native animated module`);\n      }\n    }\n  }\n  function generateNewNodeTag() {\n    return __nativeAnimatedNodeTagCount++;\n  }\n  function generateNewAnimationId() {\n    return __nativeAnimationIdCount++;\n  }\n  function assertNativeAnimatedModule() {\n    (0, _invariant.default)(NativeAnimatedModule, 'Native animated module is not available');\n  }\n  var _warnedMissingNativeAnimated = false;\n  function shouldUseNativeDriver(config) {\n    if (config.useNativeDriver == null) {\n      console.warn('Animated: `useNativeDriver` was not specified. This is a required ' + 'option and must be explicitly set to `true` or `false`');\n    }\n    if (config.useNativeDriver === true && !NativeAnimatedModule) {\n      if (process.env.NODE_ENV !== 'test') {\n        if (!_warnedMissingNativeAnimated) {\n          console.warn('Animated: `useNativeDriver` is not supported because the native ' + 'animated module is missing. Falling back to JS-based animation. To ' + 'resolve this, add `RCTAnimation` module to this app, or remove ' + '`useNativeDriver`. ' + 'Make sure to run `bundle exec pod install` first. Read more about autolinking: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md');\n          _warnedMissingNativeAnimated = true;\n        }\n      }\n      return false;\n    }\n    return config.useNativeDriver || false;\n  }\n  function transformDataType(value) {\n    // Change the string type to number type so we can reuse the same logic in\n    // iOS and Android platform\n    if (typeof value !== 'string') {\n      return value;\n    }\n\n    // Normalize degrees and radians to a number expressed in radians\n    if (value.endsWith('deg')) {\n      var degrees = parseFloat(value) || 0;\n      return degrees * Math.PI / 180.0;\n    } else if (value.endsWith('rad')) {\n      return parseFloat(value) || 0;\n    } else {\n      return value;\n    }\n  }\n  var _default = exports.default = {\n    API,\n    isSupportedColorStyleProp,\n    isSupportedStyleProp,\n    isSupportedTransformProp,\n    isSupportedInterpolationParam,\n    addWhitelistedStyleProp,\n    addWhitelistedTransformProp,\n    addWhitelistedInterpolationParam,\n    validateStyles,\n    validateTransform,\n    validateInterpolation,\n    generateNewNodeTag,\n    generateNewAnimationId,\n    assertNativeAnimatedModule,\n    shouldUseNativeDriver,\n    transformDataType,\n    // $FlowExpectedError[unsafe-getters-setters] - unsafe getter lint suppression\n    // $FlowExpectedError[missing-type-arg] - unsafe getter lint suppression\n    get nativeEventEmitter() {\n      if (!nativeEventEmitter) {\n        // $FlowFixMe[underconstrained-implicit-instantiation]\n        nativeEventEmitter = new _NativeEventEmitter.default(\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\n        _Platform.default.OS !== 'ios' ? null : NativeAnimatedModule);\n      }\n      return nativeEventEmitter;\n    }\n  };\n});","lineCount":488,"map":[[7,2,21,0],[7,6,21,0,"ReactNativeFeatureFlags"],[7,29,21,0],[7,32,21,0,"_interopRequireWildcard"],[7,55,21,0],[7,56,21,0,"_$$_REQUIRE"],[7,67,21,0],[7,68,21,0,"_dependencyMap"],[7,82,21,0],[8,2,22,0],[8,6,22,0,"_NativeEventEmitter"],[8,25,22,0],[8,28,22,0,"_interopRequireDefault"],[8,50,22,0],[8,51,22,0,"_$$_REQUIRE"],[8,62,22,0],[8,63,22,0,"_dependencyMap"],[8,77,22,0],[9,2,23,0],[9,6,23,0,"_RCTDeviceEventEmitter"],[9,28,23,0],[9,31,23,0,"_interopRequireDefault"],[9,53,23,0],[9,54,23,0,"_$$_REQUIRE"],[9,65,23,0],[9,66,23,0,"_dependencyMap"],[9,80,23,0],[10,2,24,0],[10,6,24,0,"_Platform"],[10,15,24,0],[10,18,24,0,"_interopRequireDefault"],[10,40,24,0],[10,41,24,0,"_$$_REQUIRE"],[10,52,24,0],[10,53,24,0,"_dependencyMap"],[10,67,24,0],[11,2,25,0],[11,6,25,0,"_NativeAnimatedModule"],[11,27,25,0],[11,30,25,0,"_interopRequireDefault"],[11,52,25,0],[11,53,25,0,"_$$_REQUIRE"],[11,64,25,0],[11,65,25,0,"_dependencyMap"],[11,79,25,0],[12,2,26,0],[12,6,26,0,"_NativeAnimatedTurboModule"],[12,32,26,0],[12,35,26,0,"_interopRequireDefault"],[12,57,26,0],[12,58,26,0,"_$$_REQUIRE"],[12,69,26,0],[12,70,26,0,"_dependencyMap"],[12,84,26,0],[13,2,27,0],[13,6,27,0,"_invariant"],[13,16,27,0],[13,19,27,0,"_interopRequireDefault"],[13,41,27,0],[13,42,27,0,"_$$_REQUIRE"],[13,53,27,0],[13,54,27,0,"_dependencyMap"],[13,68,27,0],[14,2,27,34],[14,11,27,34,"_getRequireWildcardCache"],[14,36,27,34,"e"],[14,37,27,34],[14,66,27,34,"WeakMap"],[14,73,27,34],[14,92,27,34,"r"],[14,93,27,34],[14,100,27,34,"WeakMap"],[14,107,27,34],[14,111,27,34,"t"],[14,112,27,34],[14,119,27,34,"WeakMap"],[14,126,27,34],[14,138,27,34,"_getRequireWildcardCache"],[14,162,27,34],[14,174,27,34,"_getRequireWildcardCache"],[14,175,27,34,"e"],[14,176,27,34],[14,187,27,34,"e"],[14,188,27,34],[14,191,27,34,"t"],[14,192,27,34],[14,195,27,34,"r"],[14,196,27,34],[14,201,27,34,"e"],[14,202,27,34],[15,2,27,34],[15,11,27,34,"_interopRequireWildcard"],[15,35,27,34,"e"],[15,36,27,34],[15,38,27,34,"r"],[15,39,27,34],[15,48,27,34,"r"],[15,49,27,34],[15,53,27,34,"e"],[15,54,27,34],[15,58,27,34,"e"],[15,59,27,34],[15,60,27,34,"__esModule"],[15,70,27,34],[15,79,27,34,"e"],[15,80,27,34],[15,95,27,34,"e"],[15,96,27,34],[15,119,27,34,"e"],[15,120,27,34],[15,145,27,34,"e"],[15,146,27,34],[15,157,27,34,"default"],[15,164,27,34],[15,166,27,34,"e"],[15,167,27,34],[15,175,27,34,"t"],[15,176,27,34],[15,179,27,34,"_getRequireWildcardCache"],[15,203,27,34],[15,204,27,34,"r"],[15,205,27,34],[15,212,27,34,"t"],[15,213,27,34],[15,217,27,34,"t"],[15,218,27,34],[15,219,27,34,"has"],[15,222,27,34],[15,223,27,34,"e"],[15,224,27,34],[15,234,27,34,"t"],[15,235,27,34],[15,236,27,34,"get"],[15,239,27,34],[15,240,27,34,"e"],[15,241,27,34],[15,248,27,34,"n"],[15,249,27,34],[15,254,27,34,"__proto__"],[15,263,27,34],[15,273,27,34,"a"],[15,274,27,34],[15,277,27,34,"Object"],[15,283,27,34],[15,284,27,34,"defineProperty"],[15,298,27,34],[15,302,27,34,"Object"],[15,308,27,34],[15,309,27,34,"getOwnPropertyDescriptor"],[15,333,27,34],[15,344,27,34,"u"],[15,345,27,34],[15,349,27,34,"e"],[15,350,27,34],[15,370,27,34,"u"],[15,371,27,34],[15,375,27,34,"Object"],[15,381,27,34],[15,382,27,34,"prototype"],[15,391,27,34],[15,392,27,34,"hasOwnProperty"],[15,406,27,34],[15,407,27,34,"call"],[15,411,27,34],[15,412,27,34,"e"],[15,413,27,34],[15,415,27,34,"u"],[15,416,27,34],[15,425,27,34,"i"],[15,426,27,34],[15,429,27,34,"a"],[15,430,27,34],[15,433,27,34,"Object"],[15,439,27,34],[15,440,27,34,"getOwnPropertyDescriptor"],[15,464,27,34],[15,465,27,34,"e"],[15,466,27,34],[15,468,27,34,"u"],[15,469,27,34],[15,479,27,34,"i"],[15,480,27,34],[15,485,27,34,"i"],[15,486,27,34],[15,487,27,34,"get"],[15,490,27,34],[15,494,27,34,"i"],[15,495,27,34],[15,496,27,34,"set"],[15,499,27,34],[15,503,27,34,"Object"],[15,509,27,34],[15,510,27,34,"defineProperty"],[15,524,27,34],[15,525,27,34,"n"],[15,526,27,34],[15,528,27,34,"u"],[15,529,27,34],[15,531,27,34,"i"],[15,532,27,34],[15,536,27,34,"n"],[15,537,27,34],[15,538,27,34,"u"],[15,539,27,34],[15,543,27,34,"e"],[15,544,27,34],[15,545,27,34,"u"],[15,546,27,34],[15,558,27,34,"n"],[15,559,27,34],[15,560,27,34,"default"],[15,567,27,34],[15,570,27,34,"e"],[15,571,27,34],[15,573,27,34,"t"],[15,574,27,34],[15,578,27,34,"t"],[15,579,27,34],[15,580,27,34,"set"],[15,583,27,34],[15,584,27,34,"e"],[15,585,27,34],[15,587,27,34,"n"],[15,588,27,34],[15,591,27,34,"n"],[15,592,27,34],[16,2,1,0],[17,0,2,0],[18,0,3,0],[19,0,4,0],[20,0,5,0],[21,0,6,0],[22,0,7,0],[23,0,8,0],[24,0,9,0],[26,2,29,0],[27,2,30,0],[27,6,30,6,"NativeAnimatedModule"],[27,26,30,26],[27,29,31,2,"NativeAnimatedNonTurboModule"],[27,58,31,30],[27,62,31,34,"NativeAnimatedTurboModule"],[27,96,31,59],[28,2,33,0],[28,6,33,4,"__nativeAnimatedNodeTagCount"],[28,34,33,32],[28,37,33,35],[28,38,33,36],[28,39,33,37],[28,40,33,38],[29,2,34,0],[29,6,34,4,"__nativeAnimationIdCount"],[29,30,34,28],[29,33,34,31],[29,34,34,32],[29,35,34,33],[29,36,34,34],[31,2,36,0],[31,6,36,4,"nativeEventEmitter"],[31,24,36,22],[32,2,38,0],[32,6,38,4,"waitingForQueuedOperations"],[32,32,38,30],[32,35,38,33],[32,39,38,37,"Set"],[32,42,38,40],[32,43,38,49],[32,44,38,50],[33,2,39,0],[33,6,39,4,"queueOperations"],[33,21,39,19],[33,24,39,22],[33,29,39,27],[34,2,40,0],[34,6,40,4,"queue"],[34,11,40,28],[34,14,40,31],[34,16,40,33],[35,2,41,0],[36,2,42,0],[36,6,42,4,"singleOpQueue"],[36,19,42,29],[36,22,42,32],[36,24,42,34],[37,2,44,0],[37,6,44,6,"useSingleOpBatching"],[37,25,44,25],[37,28,45,2,"Platform"],[37,45,45,10],[37,46,45,11,"OS"],[37,48,45,13],[37,53,45,18],[37,62,45,27],[37,66,46,2],[37,67,46,3],[37,68,46,4,"NativeAnimatedModule"],[37,88,46,24],[37,90,46,26,"queueAndExecuteBatchedOperations"],[37,122,46,58],[37,126,47,2,"ReactNativeFeatureFlags"],[37,149,47,25],[37,150,47,26,"animatedShouldUseSingleOp"],[37,175,47,51],[37,176,47,52],[37,177,47,53],[38,2,48,0],[38,6,48,4,"flushQueueTimeout"],[38,23,48,21],[38,26,48,24],[38,30,48,28],[39,2,50,0],[39,6,50,6,"eventListenerGetValueCallbacks"],[39,36,52,1],[39,39,52,4],[39,40,52,5],[39,41,52,6],[40,2,53,0],[40,6,53,6,"eventListenerAnimationFinishedCallbacks"],[40,45,55,1],[40,48,55,4],[40,49,55,5],[40,50,55,6],[41,2,56,0],[41,6,56,4,"globalEventEmitterGetValueListener"],[41,40,56,58],[41,43,56,61],[41,47,56,65],[42,2,57,0],[42,6,57,4,"globalEventEmitterAnimationFinishedListener"],[42,49,57,67],[42,52,57,70],[42,56,57,74],[43,2,59,0],[43,6,59,6,"nativeOps"],[43,15,59,45],[43,18,59,48,"useSingleOpBatching"],[43,37,59,67],[43,40,60,6],[43,52,60,18],[44,4,61,6],[44,8,61,12,"apis"],[44,12,61,16],[44,15,61,19],[44,16,62,8],[44,36,62,28],[45,4,62,30],[46,4,63,8],[46,30,63,34],[47,4,63,36],[48,4,64,8],[48,14,64,18],[49,4,64,20],[50,4,65,8],[50,39,65,43],[51,4,65,45],[52,4,66,8],[52,38,66,42],[53,4,66,44],[54,4,67,8],[54,26,67,30],[55,4,67,32],[56,4,68,8],[56,29,68,33],[57,4,68,35],[58,4,69,8],[58,24,69,28],[59,4,69,30],[60,4,70,8],[60,19,70,23],[61,4,70,25],[62,4,71,8],[62,26,71,30],[63,4,71,32],[64,4,72,8],[64,27,72,31],[65,4,72,33],[66,4,73,8],[66,31,73,35],[67,4,73,37],[68,4,74,8],[68,31,74,35],[69,4,74,37],[70,4,75,8],[70,31,75,35],[71,4,75,37],[72,4,76,8],[72,36,76,40],[73,4,76,42],[74,4,77,8],[74,26,77,30],[75,4,77,32],[76,4,78,8],[76,22,78,26],[77,4,78,28],[78,4,79,8],[78,28,79,32],[79,4,79,34],[80,4,80,8],[80,33,80,37],[81,4,80,39],[82,4,81,8],[82,17,81,21],[83,4,81,23],[84,4,82,8],[84,20,82,24],[84,21,82,26],[85,4,82,26],[85,5,83,7],[86,4,84,6],[86,11,84,13,"apis"],[86,15,84,17],[86,16,84,18,"reduce"],[86,22,84,24],[86,23,84,45],[86,24,84,46,"acc"],[86,27,84,49],[86,29,84,51,"functionName"],[86,41,84,63],[86,43,84,65,"i"],[86,44,84,66],[86,49,84,71],[87,6,85,8],[88,6,86,8],[89,6,87,8,"acc"],[89,9,87,11],[89,10,87,12,"functionName"],[89,22,87,24],[89,23,87,25],[89,26,87,28,"i"],[89,27,87,29],[89,30,87,32],[89,31,87,33],[90,6,88,8],[90,13,88,15,"acc"],[90,16,88,18],[91,4,89,6],[91,5,89,7],[91,7,89,9],[91,8,89,10],[91,9,89,11],[91,10,89,12],[92,2,90,4],[92,3,90,5],[92,4,90,7],[92,5,90,8],[92,8,91,4,"NativeAnimatedModule"],[92,28,91,24],[94,2,93,0],[95,0,94,0],[96,0,95,0],[97,0,96,0],[98,2,97,0],[98,6,97,6,"API"],[98,9,97,9],[98,12,97,12],[99,4,98,2,"getValue"],[99,12,98,10],[99,14,98,12],[99,23,98,12,"getValue"],[99,24,99,4,"tag"],[99,27,99,15],[99,29,100,4,"saveValueCallback"],[99,46,100,46],[99,48,101,10],[100,6,102,4],[100,10,102,4,"invariant"],[100,28,102,13],[100,30,102,14,"nativeOps"],[100,39,102,23],[100,41,102,25],[100,82,102,66],[100,83,102,67],[101,6,103,4],[101,10,103,8,"useSingleOpBatching"],[101,29,103,27],[101,31,103,29],[102,8,104,6],[102,12,104,10,"saveValueCallback"],[102,29,104,27],[102,31,104,29],[103,10,105,8,"eventListenerGetValueCallbacks"],[103,40,105,38],[103,41,105,39,"tag"],[103,44,105,42],[103,45,105,43],[103,48,105,46,"saveValueCallback"],[103,65,105,63],[104,8,106,6],[105,8,107,6],[106,8,108,6,"API"],[106,11,108,9],[106,12,108,10,"queueOperation"],[106,26,108,24],[106,27,108,25,"nativeOps"],[106,36,108,34],[106,37,108,35,"getValue"],[106,45,108,43],[106,47,108,45,"tag"],[106,50,108,48],[106,51,108,49],[107,6,109,4],[107,7,109,5],[107,13,109,11],[108,8,110,6,"API"],[108,11,110,9],[108,12,110,10,"queueOperation"],[108,26,110,24],[108,27,110,25,"nativeOps"],[108,36,110,34],[108,37,110,35,"getValue"],[108,45,110,43],[108,47,110,45,"tag"],[108,50,110,48],[108,52,110,50,"saveValueCallback"],[108,69,110,67],[108,70,110,68],[109,6,111,4],[110,4,112,2],[110,5,112,3],[111,4,113,2,"setWaitingForIdentifier"],[111,27,113,25],[111,29,113,27],[111,38,113,27,"setWaitingForIdentifier"],[111,39,113,37,"id"],[111,41,113,47],[111,43,113,55],[112,6,114,4,"waitingForQueuedOperations"],[112,32,114,30],[112,33,114,31,"add"],[112,36,114,34],[112,37,114,35,"id"],[112,39,114,37],[112,40,114,38],[113,6,115,4,"queueOperations"],[113,21,115,19],[113,24,115,22],[113,28,115,26],[114,6,116,4],[114,10,117,6,"ReactNativeFeatureFlags"],[114,33,117,29],[114,34,117,30,"animatedShouldDebounceQueueFlush"],[114,66,117,62],[114,67,117,63],[114,68,117,64],[114,72,118,6,"flushQueueTimeout"],[114,89,118,23],[114,91,119,6],[115,8,120,6,"clearTimeout"],[115,20,120,18],[115,21,120,19,"flushQueueTimeout"],[115,38,120,36],[115,39,120,37],[116,6,121,4],[117,4,122,2],[117,5,122,3],[118,4,123,2,"unsetWaitingForIdentifier"],[118,29,123,27],[118,31,123,29],[118,40,123,29,"unsetWaitingForIdentifier"],[118,41,123,39,"id"],[118,43,123,49],[118,45,123,57],[119,6,124,4,"waitingForQueuedOperations"],[119,32,124,30],[119,33,124,31,"delete"],[119,39,124,37],[119,40,124,38,"id"],[119,42,124,40],[119,43,124,41],[120,6,126,4],[120,10,126,8,"waitingForQueuedOperations"],[120,36,126,34],[120,37,126,35,"size"],[120,41,126,39],[120,46,126,44],[120,47,126,45],[120,49,126,47],[121,8,127,6,"queueOperations"],[121,23,127,21],[121,26,127,24],[121,31,127,29],[122,8,128,6,"API"],[122,11,128,9],[122,12,128,10,"disableQueue"],[122,24,128,22],[122,25,128,23],[122,26,128,24],[123,6,129,4],[124,4,130,2],[124,5,130,3],[125,4,131,2,"disableQueue"],[125,16,131,14],[125,18,131,16],[125,27,131,16,"disableQueue"],[125,28,131,16],[125,30,131,34],[126,6,132,4],[126,10,132,4,"invariant"],[126,28,132,13],[126,30,132,14,"nativeOps"],[126,39,132,23],[126,41,132,25],[126,82,132,66],[126,83,132,67],[127,6,134,4],[127,10,134,8,"ReactNativeFeatureFlags"],[127,33,134,31],[127,34,134,32,"animatedShouldDebounceQueueFlush"],[127,66,134,64],[127,67,134,65],[127,68,134,66],[127,70,134,68],[128,8,135,6],[128,12,135,12,"prevTimeout"],[128,23,135,23],[128,26,135,26,"flushQueueTimeout"],[128,43,135,43],[129,8,136,6,"clearImmediate"],[129,22,136,20],[129,23,136,21,"prevTimeout"],[129,34,136,32],[129,35,136,33],[130,8,137,6,"flushQueueTimeout"],[130,25,137,23],[130,28,137,26,"setImmediate"],[130,40,137,38],[130,41,137,39,"API"],[130,44,137,42],[130,45,137,43,"flushQueue"],[130,55,137,53],[130,56,137,54],[131,6,138,4],[131,7,138,5],[131,13,138,11],[132,8,139,6,"API"],[132,11,139,9],[132,12,139,10,"flushQueue"],[132,22,139,20],[132,23,139,21],[132,24,139,22],[133,6,140,4],[134,4,141,2],[134,5,141,3],[135,4,142,2,"flushQueue"],[135,14,142,12],[135,16,142,14],[135,25,142,14,"flushQueue"],[135,26,142,14],[135,28,142,32],[136,6,143,4],[137,6,144,4],[137,10,144,4,"invariant"],[137,28,144,13],[137,30,145,6,"NativeAnimatedModule"],[137,50,145,26],[137,54,145,30,"process"],[137,61,145,37],[137,62,145,38,"env"],[137,65,145,41],[137,66,145,42,"NODE_ENV"],[137,74,145,50],[137,79,145,55],[137,85,145,61],[137,87,146,6],[137,128,147,4],[137,129,147,5],[138,6,148,4,"flushQueueTimeout"],[138,23,148,21],[138,26,148,24],[138,30,148,28],[140,6,150,4],[141,6,151,4],[141,10,151,8,"useSingleOpBatching"],[141,29,151,27],[141,33,151,31,"singleOpQueue"],[141,46,151,44],[141,47,151,45,"length"],[141,53,151,51],[141,58,151,56],[141,59,151,57],[141,61,151,59],[142,8,152,6],[143,6,153,4],[144,6,154,4],[144,10,154,8],[144,11,154,9,"useSingleOpBatching"],[144,30,154,28],[144,34,154,32,"queue"],[144,39,154,37],[144,40,154,38,"length"],[144,46,154,44],[144,51,154,49],[144,52,154,50],[144,54,154,52],[145,8,155,6],[146,6,156,4],[147,6,158,4],[147,10,158,8,"useSingleOpBatching"],[147,29,158,27],[147,31,158,29],[148,8,159,6],[149,8,160,6],[149,12,161,8],[149,13,161,9,"globalEventEmitterGetValueListener"],[149,47,161,43],[149,51,162,8],[149,52,162,9,"globalEventEmitterAnimationFinishedListener"],[149,95,162,52],[149,97,163,8],[150,10,164,8,"setupGlobalEventEmitterListeners"],[150,42,164,40],[150,43,164,41],[150,44,164,42],[151,8,165,6],[152,8,166,6],[153,8,167,6],[154,8,168,6],[155,8,169,6],[156,8,170,6,"NativeAnimatedModule"],[156,28,170,26],[156,30,170,28,"queueAndExecuteBatchedOperations"],[156,62,170,60],[156,65,170,63,"singleOpQueue"],[156,78,170,76],[156,79,170,77],[157,8,171,6,"singleOpQueue"],[157,21,171,19],[157,22,171,20,"length"],[157,28,171,26],[157,31,171,29],[157,32,171,30],[158,6,172,4],[158,7,172,5],[158,13,172,11],[159,8,173,6,"Platform"],[159,25,173,14],[159,26,173,15,"OS"],[159,28,173,17],[159,33,173,22],[159,42,173,31],[159,46,174,8,"NativeAnimatedModule"],[159,66,174,28],[159,68,174,30,"startOperationBatch"],[159,87,174,49],[159,90,174,52],[159,91,174,53],[160,8,176,6],[160,13,176,11],[160,17,176,15,"q"],[160,18,176,16],[160,21,176,19],[160,22,176,20],[160,24,176,22,"l"],[160,25,176,23],[160,28,176,26,"queue"],[160,33,176,31],[160,34,176,32,"length"],[160,40,176,38],[160,42,176,40,"q"],[160,43,176,41],[160,46,176,44,"l"],[160,47,176,45],[160,49,176,47,"q"],[160,50,176,48],[160,52,176,50],[160,54,176,52],[161,10,177,8,"queue"],[161,15,177,13],[161,16,177,14,"q"],[161,17,177,15],[161,18,177,16],[161,19,177,17],[161,20,177,18],[162,8,178,6],[163,8,179,6,"queue"],[163,13,179,11],[163,14,179,12,"length"],[163,20,179,18],[163,23,179,21],[163,24,179,22],[164,8,180,6,"Platform"],[164,25,180,14],[164,26,180,15,"OS"],[164,28,180,17],[164,33,180,22],[164,42,180,31],[164,46,181,8,"NativeAnimatedModule"],[164,66,181,28],[164,68,181,30,"finishOperationBatch"],[164,88,181,50],[164,91,181,53],[164,92,181,54],[165,6,182,4],[166,4,183,2],[166,5,183,3],[167,4,184,2,"queueOperation"],[167,18,184,16],[167,20,184,18],[167,29,184,18,"queueOperation"],[167,30,185,4,"fn"],[167,32,185,10],[167,34,187,13],[168,6,187,13],[168,15,187,13,"_len"],[168,19,187,13],[168,22,187,13,"arguments"],[168,31,187,13],[168,32,187,13,"length"],[168,38,187,13],[168,40,186,7,"args"],[168,44,186,11],[168,51,186,11,"Array"],[168,56,186,11],[168,57,186,11,"_len"],[168,61,186,11],[168,68,186,11,"_len"],[168,72,186,11],[168,83,186,11,"_key"],[168,87,186,11],[168,93,186,11,"_key"],[168,97,186,11],[168,100,186,11,"_len"],[168,104,186,11],[168,106,186,11,"_key"],[168,110,186,11],[169,8,186,7,"args"],[169,12,186,11],[169,13,186,11,"_key"],[169,17,186,11],[169,25,186,11,"arguments"],[169,34,186,11],[169,35,186,11,"_key"],[169,39,186,11],[170,6,186,11],[171,6,188,4],[171,10,188,8,"useSingleOpBatching"],[171,29,188,27],[171,31,188,29],[172,8,189,6],[173,8,190,6],[174,8,191,6,"singleOpQueue"],[174,21,191,19],[174,22,191,20,"push"],[174,26,191,24],[174,27,191,25,"fn"],[174,29,191,27],[174,31,191,29],[174,34,191,32,"args"],[174,38,191,36],[174,39,191,37],[175,8,192,6],[176,6,193,4],[178,6,195,4],[179,6,196,4],[180,6,197,4],[181,6,198,4],[181,10,198,8,"queueOperations"],[181,25,198,23],[181,29,198,27,"queue"],[181,34,198,32],[181,35,198,33,"length"],[181,41,198,39],[181,46,198,44],[181,47,198,45],[181,49,198,47],[182,8,199,6,"queue"],[182,13,199,11],[182,14,199,12,"push"],[182,18,199,16],[182,19,199,17],[182,25,199,23,"fn"],[182,27,199,25],[182,28,199,26],[182,31,199,29,"args"],[182,35,199,33],[182,36,199,34],[182,37,199,35],[183,6,200,4],[183,7,200,5],[183,13,200,11],[184,8,201,6,"fn"],[184,10,201,8],[184,11,201,9],[184,14,201,12,"args"],[184,18,201,16],[184,19,201,17],[185,6,202,4],[186,4,203,2],[186,5,203,3],[187,4,204,2,"createAnimatedNode"],[187,22,204,20],[187,24,204,22],[187,33,204,22,"createAnimatedNode"],[187,34,204,32,"tag"],[187,37,204,43],[187,39,204,45,"config"],[187,45,204,71],[187,47,204,79],[188,6,205,4],[188,10,205,4,"invariant"],[188,28,205,13],[188,30,205,14,"nativeOps"],[188,39,205,23],[188,41,205,25],[188,82,205,66],[188,83,205,67],[189,6,206,4,"API"],[189,9,206,7],[189,10,206,8,"queueOperation"],[189,24,206,22],[189,25,206,23,"nativeOps"],[189,34,206,32],[189,35,206,33,"createAnimatedNode"],[189,53,206,51],[189,55,206,53,"tag"],[189,58,206,56],[189,60,206,58,"config"],[189,66,206,64],[189,67,206,65],[190,4,207,2],[190,5,207,3],[191,4,208,2,"updateAnimatedNodeConfig"],[191,28,208,26],[191,30,208,28],[191,39,208,28,"updateAnimatedNodeConfig"],[191,40,209,4,"tag"],[191,43,209,15],[191,45,210,4,"config"],[191,51,210,30],[191,53,211,10],[192,6,212,4],[192,10,212,4,"invariant"],[192,28,212,13],[192,30,212,14,"nativeOps"],[192,39,212,23],[192,41,212,25],[192,82,212,66],[192,83,212,67],[193,6,213,4],[193,10,213,8,"nativeOps"],[193,19,213,17],[193,20,213,18,"updateAnimatedNodeConfig"],[193,44,213,42],[193,46,213,44],[194,8,214,6,"API"],[194,11,214,9],[194,12,214,10,"queueOperation"],[194,26,214,24],[194,27,214,25,"nativeOps"],[194,36,214,34],[194,37,214,35,"updateAnimatedNodeConfig"],[194,61,214,59],[194,63,214,61,"tag"],[194,66,214,64],[194,68,214,66,"config"],[194,74,214,72],[194,75,214,73],[195,6,215,4],[196,4,216,2],[196,5,216,3],[197,4,217,2,"startListeningToAnimatedNodeValue"],[197,37,217,35],[197,39,217,37],[197,48,217,37,"startListeningToAnimatedNodeValue"],[197,49,217,47,"tag"],[197,52,217,58],[197,54,217,60],[198,6,218,4],[198,10,218,4,"invariant"],[198,28,218,13],[198,30,218,14,"nativeOps"],[198,39,218,23],[198,41,218,25],[198,82,218,66],[198,83,218,67],[199,6,219,4,"API"],[199,9,219,7],[199,10,219,8,"queueOperation"],[199,24,219,22],[199,25,219,23,"nativeOps"],[199,34,219,32],[199,35,219,33,"startListeningToAnimatedNodeValue"],[199,68,219,66],[199,70,219,68,"tag"],[199,73,219,71],[199,74,219,72],[200,4,220,2],[200,5,220,3],[201,4,221,2,"stopListeningToAnimatedNodeValue"],[201,36,221,34],[201,38,221,36],[201,47,221,36,"stopListeningToAnimatedNodeValue"],[201,48,221,46,"tag"],[201,51,221,57],[201,53,221,59],[202,6,222,4],[202,10,222,4,"invariant"],[202,28,222,13],[202,30,222,14,"nativeOps"],[202,39,222,23],[202,41,222,25],[202,82,222,66],[202,83,222,67],[203,6,223,4,"API"],[203,9,223,7],[203,10,223,8,"queueOperation"],[203,24,223,22],[203,25,223,23,"nativeOps"],[203,34,223,32],[203,35,223,33,"stopListeningToAnimatedNodeValue"],[203,67,223,65],[203,69,223,67,"tag"],[203,72,223,70],[203,73,223,71],[204,4,224,2],[204,5,224,3],[205,4,225,2,"connectAnimatedNodes"],[205,24,225,22],[205,26,225,24],[205,35,225,24,"connectAnimatedNodes"],[205,36,225,34,"parentTag"],[205,45,225,51],[205,47,225,53,"childTag"],[205,55,225,69],[205,57,225,77],[206,6,226,4],[206,10,226,4,"invariant"],[206,28,226,13],[206,30,226,14,"nativeOps"],[206,39,226,23],[206,41,226,25],[206,82,226,66],[206,83,226,67],[207,6,227,4,"API"],[207,9,227,7],[207,10,227,8,"queueOperation"],[207,24,227,22],[207,25,227,23,"nativeOps"],[207,34,227,32],[207,35,227,33,"connectAnimatedNodes"],[207,55,227,53],[207,57,227,55,"parentTag"],[207,66,227,64],[207,68,227,66,"childTag"],[207,76,227,74],[207,77,227,75],[208,4,228,2],[208,5,228,3],[209,4,229,2,"disconnectAnimatedNodes"],[209,27,229,25],[209,29,229,27],[209,38,229,27,"disconnectAnimatedNodes"],[209,39,230,4,"parentTag"],[209,48,230,21],[209,50,231,4,"childTag"],[209,58,231,20],[209,60,232,10],[210,6,233,4],[210,10,233,4,"invariant"],[210,28,233,13],[210,30,233,14,"nativeOps"],[210,39,233,23],[210,41,233,25],[210,82,233,66],[210,83,233,67],[211,6,234,4,"API"],[211,9,234,7],[211,10,234,8,"queueOperation"],[211,24,234,22],[211,25,234,23,"nativeOps"],[211,34,234,32],[211,35,234,33,"disconnectAnimatedNodes"],[211,58,234,56],[211,60,234,58,"parentTag"],[211,69,234,67],[211,71,234,69,"childTag"],[211,79,234,77],[211,80,234,78],[212,4,235,2],[212,5,235,3],[213,4,236,2,"startAnimatingNode"],[213,22,236,20],[213,24,236,22],[213,33,236,22,"startAnimatingNode"],[213,34,237,4,"animationId"],[213,45,237,23],[213,47,238,4,"nodeTag"],[213,54,238,19],[213,56,239,4,"config"],[213,62,239,31],[213,64,240,4,"endCallback"],[213,75,240,28],[213,77,241,10],[214,6,242,4],[214,10,242,4,"invariant"],[214,28,242,13],[214,30,242,14,"nativeOps"],[214,39,242,23],[214,41,242,25],[214,82,242,66],[214,83,242,67],[215,6,243,4],[215,10,243,8,"useSingleOpBatching"],[215,29,243,27],[215,31,243,29],[216,8,244,6],[216,12,244,10,"endCallback"],[216,23,244,21],[216,25,244,23],[217,10,245,8,"eventListenerAnimationFinishedCallbacks"],[217,49,245,47],[217,50,245,48,"animationId"],[217,61,245,59],[217,62,245,60],[217,65,245,63,"endCallback"],[217,76,245,74],[218,8,246,6],[219,8,247,6],[220,8,248,6,"API"],[220,11,248,9],[220,12,248,10,"queueOperation"],[220,26,248,24],[221,8,249,8],[222,8,250,8,"nativeOps"],[222,17,250,17],[222,18,250,18,"startAnimatingNode"],[222,36,250,36],[222,38,251,8,"animationId"],[222,49,251,19],[222,51,252,8,"nodeTag"],[222,58,252,15],[222,60,253,8,"config"],[222,66,254,6],[222,67,254,7],[223,6,255,4],[223,7,255,5],[223,13,255,11],[224,8,256,6,"API"],[224,11,256,9],[224,12,256,10,"queueOperation"],[224,26,256,24],[224,27,257,8,"nativeOps"],[224,36,257,17],[224,37,257,18,"startAnimatingNode"],[224,55,257,36],[224,57,258,8,"animationId"],[224,68,258,19],[224,70,259,8,"nodeTag"],[224,77,259,15],[224,79,260,8,"config"],[224,85,260,14],[224,87,261,8,"endCallback"],[224,98,262,6],[224,99,262,7],[225,6,263,4],[226,4,264,2],[226,5,264,3],[227,4,265,2,"stopAnimation"],[227,17,265,15],[227,19,265,17],[227,28,265,17,"stopAnimation"],[227,29,265,27,"animationId"],[227,40,265,46],[227,42,265,48],[228,6,266,4],[228,10,266,4,"invariant"],[228,28,266,13],[228,30,266,14,"nativeOps"],[228,39,266,23],[228,41,266,25],[228,82,266,66],[228,83,266,67],[229,6,267,4,"API"],[229,9,267,7],[229,10,267,8,"queueOperation"],[229,24,267,22],[229,25,267,23,"nativeOps"],[229,34,267,32],[229,35,267,33,"stopAnimation"],[229,48,267,46],[229,50,267,48,"animationId"],[229,61,267,59],[229,62,267,60],[230,4,268,2],[230,5,268,3],[231,4,269,2,"setAnimatedNodeValue"],[231,24,269,22],[231,26,269,24],[231,35,269,24,"setAnimatedNodeValue"],[231,36,269,34,"nodeTag"],[231,43,269,49],[231,45,269,51,"value"],[231,50,269,64],[231,52,269,72],[232,6,270,4],[232,10,270,4,"invariant"],[232,28,270,13],[232,30,270,14,"nativeOps"],[232,39,270,23],[232,41,270,25],[232,82,270,66],[232,83,270,67],[233,6,271,4,"API"],[233,9,271,7],[233,10,271,8,"queueOperation"],[233,24,271,22],[233,25,271,23,"nativeOps"],[233,34,271,32],[233,35,271,33,"setAnimatedNodeValue"],[233,55,271,53],[233,57,271,55,"nodeTag"],[233,64,271,62],[233,66,271,64,"value"],[233,71,271,69],[233,72,271,70],[234,4,272,2],[234,5,272,3],[235,4,273,2,"setAnimatedNodeOffset"],[235,25,273,23],[235,27,273,25],[235,36,273,25,"setAnimatedNodeOffset"],[235,37,273,35,"nodeTag"],[235,44,273,50],[235,46,273,52,"offset"],[235,52,273,66],[235,54,273,74],[236,6,274,4],[236,10,274,4,"invariant"],[236,28,274,13],[236,30,274,14,"nativeOps"],[236,39,274,23],[236,41,274,25],[236,82,274,66],[236,83,274,67],[237,6,275,4,"API"],[237,9,275,7],[237,10,275,8,"queueOperation"],[237,24,275,22],[237,25,275,23,"nativeOps"],[237,34,275,32],[237,35,275,33,"setAnimatedNodeOffset"],[237,56,275,54],[237,58,275,56,"nodeTag"],[237,65,275,63],[237,67,275,65,"offset"],[237,73,275,71],[237,74,275,72],[238,4,276,2],[238,5,276,3],[239,4,277,2,"flattenAnimatedNodeOffset"],[239,29,277,27],[239,31,277,29],[239,40,277,29,"flattenAnimatedNodeOffset"],[239,41,277,39,"nodeTag"],[239,48,277,54],[239,50,277,62],[240,6,278,4],[240,10,278,4,"invariant"],[240,28,278,13],[240,30,278,14,"nativeOps"],[240,39,278,23],[240,41,278,25],[240,82,278,66],[240,83,278,67],[241,6,279,4,"API"],[241,9,279,7],[241,10,279,8,"queueOperation"],[241,24,279,22],[241,25,279,23,"nativeOps"],[241,34,279,32],[241,35,279,33,"flattenAnimatedNodeOffset"],[241,60,279,58],[241,62,279,60,"nodeTag"],[241,69,279,67],[241,70,279,68],[242,4,280,2],[242,5,280,3],[243,4,281,2,"extractAnimatedNodeOffset"],[243,29,281,27],[243,31,281,29],[243,40,281,29,"extractAnimatedNodeOffset"],[243,41,281,39,"nodeTag"],[243,48,281,54],[243,50,281,62],[244,6,282,4],[244,10,282,4,"invariant"],[244,28,282,13],[244,30,282,14,"nativeOps"],[244,39,282,23],[244,41,282,25],[244,82,282,66],[244,83,282,67],[245,6,283,4,"API"],[245,9,283,7],[245,10,283,8,"queueOperation"],[245,24,283,22],[245,25,283,23,"nativeOps"],[245,34,283,32],[245,35,283,33,"extractAnimatedNodeOffset"],[245,60,283,58],[245,62,283,60,"nodeTag"],[245,69,283,67],[245,70,283,68],[246,4,284,2],[246,5,284,3],[247,4,285,2,"connectAnimatedNodeToView"],[247,29,285,27],[247,31,285,29],[247,40,285,29,"connectAnimatedNodeToView"],[247,41,285,39,"nodeTag"],[247,48,285,54],[247,50,285,56,"viewTag"],[247,57,285,71],[247,59,285,79],[248,6,286,4],[248,10,286,4,"invariant"],[248,28,286,13],[248,30,286,14,"nativeOps"],[248,39,286,23],[248,41,286,25],[248,82,286,66],[248,83,286,67],[249,6,287,4,"API"],[249,9,287,7],[249,10,287,8,"queueOperation"],[249,24,287,22],[249,25,287,23,"nativeOps"],[249,34,287,32],[249,35,287,33,"connectAnimatedNodeToView"],[249,60,287,58],[249,62,287,60,"nodeTag"],[249,69,287,67],[249,71,287,69,"viewTag"],[249,78,287,76],[249,79,287,77],[250,4,288,2],[250,5,288,3],[251,4,289,2,"disconnectAnimatedNodeFromView"],[251,34,289,32],[251,36,289,34],[251,45,289,34,"disconnectAnimatedNodeFromView"],[251,46,290,4,"nodeTag"],[251,53,290,19],[251,55,291,4,"viewTag"],[251,62,291,19],[251,64,292,10],[252,6,293,4],[252,10,293,4,"invariant"],[252,28,293,13],[252,30,293,14,"nativeOps"],[252,39,293,23],[252,41,293,25],[252,82,293,66],[252,83,293,67],[253,6,294,4,"API"],[253,9,294,7],[253,10,294,8,"queueOperation"],[253,24,294,22],[253,25,295,6,"nativeOps"],[253,34,295,15],[253,35,295,16,"disconnectAnimatedNodeFromView"],[253,65,295,46],[253,67,296,6,"nodeTag"],[253,74,296,13],[253,76,297,6,"viewTag"],[253,83,298,4],[253,84,298,5],[254,4,299,2],[254,5,299,3],[255,4,300,2,"restoreDefaultValues"],[255,24,300,22],[255,26,300,24],[255,35,300,24,"restoreDefaultValues"],[255,36,300,34,"nodeTag"],[255,43,300,49],[255,45,300,57],[256,6,301,4],[256,10,301,4,"invariant"],[256,28,301,13],[256,30,301,14,"nativeOps"],[256,39,301,23],[256,41,301,25],[256,82,301,66],[256,83,301,67],[257,6,302,4],[258,6,303,4],[258,10,303,8,"nativeOps"],[258,19,303,17],[258,20,303,18,"restoreDefaultValues"],[258,40,303,38],[258,44,303,42],[258,48,303,46],[258,50,303,48],[259,8,304,6,"API"],[259,11,304,9],[259,12,304,10,"queueOperation"],[259,26,304,24],[259,27,304,25,"nativeOps"],[259,36,304,34],[259,37,304,35,"restoreDefaultValues"],[259,57,304,55],[259,59,304,57,"nodeTag"],[259,66,304,64],[259,67,304,65],[260,6,305,4],[261,4,306,2],[261,5,306,3],[262,4,307,2,"dropAnimatedNode"],[262,20,307,18],[262,22,307,20],[262,31,307,20,"dropAnimatedNode"],[262,32,307,30,"tag"],[262,35,307,41],[262,37,307,49],[263,6,308,4],[263,10,308,4,"invariant"],[263,28,308,13],[263,30,308,14,"nativeOps"],[263,39,308,23],[263,41,308,25],[263,82,308,66],[263,83,308,67],[264,6,309,4,"API"],[264,9,309,7],[264,10,309,8,"queueOperation"],[264,24,309,22],[264,25,309,23,"nativeOps"],[264,34,309,32],[264,35,309,33,"dropAnimatedNode"],[264,51,309,49],[264,53,309,51,"tag"],[264,56,309,54],[264,57,309,55],[265,4,310,2],[265,5,310,3],[266,4,311,2,"addAnimatedEventToView"],[266,26,311,24],[266,28,311,26],[266,37,311,26,"addAnimatedEventToView"],[266,38,312,4,"viewTag"],[266,45,312,19],[266,47,313,4,"eventName"],[266,56,313,21],[266,58,314,4,"eventMapping"],[266,70,314,30],[266,72,315,4],[267,6,316,4],[267,10,316,4,"invariant"],[267,28,316,13],[267,30,316,14,"nativeOps"],[267,39,316,23],[267,41,316,25],[267,82,316,66],[267,83,316,67],[268,6,317,4,"API"],[268,9,317,7],[268,10,317,8,"queueOperation"],[268,24,317,22],[268,25,318,6,"nativeOps"],[268,34,318,15],[268,35,318,16,"addAnimatedEventToView"],[268,57,318,38],[268,59,319,6,"viewTag"],[268,66,319,13],[268,68,320,6,"eventName"],[268,77,320,15],[268,79,321,6,"eventMapping"],[268,91,322,4],[268,92,322,5],[269,4,323,2],[269,5,323,3],[270,4,324,2,"removeAnimatedEventFromView"],[270,31,324,29,"removeAnimatedEventFromView"],[270,32,325,4,"viewTag"],[270,39,325,19],[270,41,326,4,"eventName"],[270,50,326,21],[270,52,327,4,"animatedNodeTag"],[270,67,327,27],[270,69,328,4],[271,6,329,4],[271,10,329,4,"invariant"],[271,28,329,13],[271,30,329,14,"nativeOps"],[271,39,329,23],[271,41,329,25],[271,82,329,66],[271,83,329,67],[272,6,330,4,"API"],[272,9,330,7],[272,10,330,8,"queueOperation"],[272,24,330,22],[272,25,331,6,"nativeOps"],[272,34,331,15],[272,35,331,16,"removeAnimatedEventFromView"],[272,62,331,43],[272,64,332,6,"viewTag"],[272,71,332,13],[272,73,333,6,"eventName"],[272,82,333,15],[272,84,334,6,"animatedNodeTag"],[272,99,335,4],[272,100,335,5],[273,4,336,2],[274,2,337,0],[274,3,337,1],[275,2,339,0],[275,11,339,9,"setupGlobalEventEmitterListeners"],[275,43,339,41,"setupGlobalEventEmitterListeners"],[275,44,339,41],[275,46,339,44],[276,4,340,2,"globalEventEmitterGetValueListener"],[276,38,340,36],[276,41,340,39,"RCTDeviceEventEmitter"],[276,71,340,60],[276,72,340,61,"addListener"],[276,83,340,72],[276,84,341,4],[276,116,341,36],[276,118,342,4,"params"],[276,124,342,10],[276,128,342,14],[277,6,343,6],[277,10,343,13,"tag"],[277,13,343,16],[277,16,343,20,"params"],[277,22,343,26],[277,23,343,13,"tag"],[277,26,343,16],[278,6,344,6],[278,10,344,12,"callback"],[278,18,344,20],[278,21,344,23,"eventListenerGetValueCallbacks"],[278,51,344,53],[278,52,344,54,"tag"],[278,55,344,57],[278,56,344,58],[279,6,345,6],[279,10,345,10],[279,11,345,11,"callback"],[279,19,345,19],[279,21,345,21],[280,8,346,8],[281,6,347,6],[282,6,348,6,"callback"],[282,14,348,14],[282,15,348,15,"params"],[282,21,348,21],[282,22,348,22,"value"],[282,27,348,27],[282,28,348,28],[283,6,349,6],[283,13,349,13,"eventListenerGetValueCallbacks"],[283,43,349,43],[283,44,349,44,"tag"],[283,47,349,47],[283,48,349,48],[284,4,350,4],[284,5,351,2],[284,6,351,3],[285,4,352,2,"globalEventEmitterAnimationFinishedListener"],[285,47,352,45],[285,50,353,4,"RCTDeviceEventEmitter"],[285,80,353,25],[285,81,353,26,"addListener"],[285,92,353,37],[285,93,354,6],[285,134,354,47],[285,136,355,6,"params"],[285,142,355,12],[285,146,355,16],[286,6,356,8],[287,6,357,8],[287,10,357,14,"animations"],[287,20,357,24],[287,23,357,27,"Array"],[287,28,357,32],[287,29,357,33,"isArray"],[287,36,357,40],[287,37,357,41,"params"],[287,43,357,47],[287,44,357,48],[287,47,357,51,"params"],[287,53,357,57],[287,56,357,60],[287,57,357,61,"params"],[287,63,357,67],[287,64,357,68],[288,6,358,8],[288,11,358,13],[288,15,358,19,"animation"],[288,24,358,28],[288,28,358,32,"animations"],[288,38,358,42],[288,40,358,44],[289,8,359,10],[289,12,359,17,"animationId"],[289,23,359,28],[289,26,359,32,"animation"],[289,35,359,41],[289,36,359,17,"animationId"],[289,47,359,28],[290,8,360,10],[290,12,360,16,"callback"],[290,20,360,24],[290,23,360,27,"eventListenerAnimationFinishedCallbacks"],[290,62,360,66],[290,63,360,67,"animationId"],[290,74,360,78],[290,75,360,79],[291,8,361,10],[291,12,361,14,"callback"],[291,20,361,22],[291,22,361,24],[292,10,362,12,"callback"],[292,18,362,20],[292,19,362,21,"animation"],[292,28,362,30],[292,29,362,31],[293,10,363,12],[293,17,363,19,"eventListenerAnimationFinishedCallbacks"],[293,56,363,58],[293,57,363,59,"animationId"],[293,68,363,70],[293,69,363,71],[294,8,364,10],[295,6,365,8],[296,4,366,6],[296,5,367,4],[296,6,367,5],[297,2,368,0],[299,2,370,0],[300,0,371,0],[301,0,372,0],[302,0,373,0],[303,0,374,0],[304,0,375,0],[305,2,376,0],[305,6,376,6,"SUPPORTED_COLOR_STYLES"],[305,28,376,28],[305,31,376,31],[306,4,377,2,"backgroundColor"],[306,19,377,17],[306,21,377,19],[306,25,377,23],[307,4,378,2,"borderBottomColor"],[307,21,378,19],[307,23,378,21],[307,27,378,25],[308,4,379,2,"borderColor"],[308,15,379,13],[308,17,379,15],[308,21,379,19],[309,4,380,2,"borderEndColor"],[309,18,380,16],[309,20,380,18],[309,24,380,22],[310,4,381,2,"borderLeftColor"],[310,19,381,17],[310,21,381,19],[310,25,381,23],[311,4,382,2,"borderRightColor"],[311,20,382,18],[311,22,382,20],[311,26,382,24],[312,4,383,2,"borderStartColor"],[312,20,383,18],[312,22,383,20],[312,26,383,24],[313,4,384,2,"borderTopColor"],[313,18,384,16],[313,20,384,18],[313,24,384,22],[314,4,385,2,"color"],[314,9,385,7],[314,11,385,9],[314,15,385,13],[315,4,386,2,"tintColor"],[315,13,386,11],[315,15,386,13],[316,2,387,0],[316,3,387,1],[317,2,389,0],[317,6,389,6,"SUPPORTED_STYLES"],[317,22,389,22],[317,25,389,25],[318,4,390,2],[318,7,390,5,"SUPPORTED_COLOR_STYLES"],[318,29,390,27],[319,4,391,2,"borderBottomEndRadius"],[319,25,391,23],[319,27,391,25],[319,31,391,29],[320,4,392,2,"borderBottomLeftRadius"],[320,26,392,24],[320,28,392,26],[320,32,392,30],[321,4,393,2,"borderBottomRightRadius"],[321,27,393,25],[321,29,393,27],[321,33,393,31],[322,4,394,2,"borderBottomStartRadius"],[322,27,394,25],[322,29,394,27],[322,33,394,31],[323,4,395,2,"borderEndEndRadius"],[323,22,395,20],[323,24,395,22],[323,28,395,26],[324,4,396,2,"borderEndStartRadius"],[324,24,396,22],[324,26,396,24],[324,30,396,28],[325,4,397,2,"borderRadius"],[325,16,397,14],[325,18,397,16],[325,22,397,20],[326,4,398,2,"borderTopEndRadius"],[326,22,398,20],[326,24,398,22],[326,28,398,26],[327,4,399,2,"borderTopLeftRadius"],[327,23,399,21],[327,25,399,23],[327,29,399,27],[328,4,400,2,"borderTopRightRadius"],[328,24,400,22],[328,26,400,24],[328,30,400,28],[329,4,401,2,"borderTopStartRadius"],[329,24,401,22],[329,26,401,24],[329,30,401,28],[330,4,402,2,"borderStartEndRadius"],[330,24,402,22],[330,26,402,24],[330,30,402,28],[331,4,403,2,"borderStartStartRadius"],[331,26,403,24],[331,28,403,26],[331,32,403,30],[332,4,404,2,"elevation"],[332,13,404,11],[332,15,404,13],[332,19,404,17],[333,4,405,2,"opacity"],[333,11,405,9],[333,13,405,11],[333,17,405,15],[334,4,406,2,"transform"],[334,13,406,11],[334,15,406,13],[334,19,406,17],[335,4,407,2,"zIndex"],[335,10,407,8],[335,12,407,10],[335,16,407,14],[336,4,408,2],[337,4,409,2,"shadowOpacity"],[337,17,409,15],[337,19,409,17],[337,23,409,21],[338,4,410,2,"shadowRadius"],[338,16,410,14],[338,18,410,16],[338,22,410,20],[339,4,411,2],[340,4,412,2,"scaleX"],[340,10,412,8],[340,12,412,10],[340,16,412,14],[341,4,413,2,"scaleY"],[341,10,413,8],[341,12,413,10],[341,16,413,14],[342,4,414,2,"translateX"],[342,14,414,12],[342,16,414,14],[342,20,414,18],[343,4,415,2,"translateY"],[343,14,415,12],[343,16,415,14],[344,2,416,0],[344,3,416,1],[345,2,418,0],[345,6,418,6,"SUPPORTED_TRANSFORMS"],[345,26,418,26],[345,29,418,29],[346,4,419,2,"translateX"],[346,14,419,12],[346,16,419,14],[346,20,419,18],[347,4,420,2,"translateY"],[347,14,420,12],[347,16,420,14],[347,20,420,18],[348,4,421,2,"scale"],[348,9,421,7],[348,11,421,9],[348,15,421,13],[349,4,422,2,"scaleX"],[349,10,422,8],[349,12,422,10],[349,16,422,14],[350,4,423,2,"scaleY"],[350,10,423,8],[350,12,423,10],[350,16,423,14],[351,4,424,2,"rotate"],[351,10,424,8],[351,12,424,10],[351,16,424,14],[352,4,425,2,"rotateX"],[352,11,425,9],[352,13,425,11],[352,17,425,15],[353,4,426,2,"rotateY"],[353,11,426,9],[353,13,426,11],[353,17,426,15],[354,4,427,2,"rotateZ"],[354,11,427,9],[354,13,427,11],[354,17,427,15],[355,4,428,2,"perspective"],[355,15,428,13],[355,17,428,15],[355,21,428,19],[356,4,429,2,"skewX"],[356,9,429,7],[356,11,429,9],[356,15,429,13],[357,4,430,2,"skewY"],[357,9,430,7],[357,11,430,9],[357,15,430,13],[358,4,431,2,"matrix"],[358,10,431,8],[358,12,431,10,"ReactNativeFeatureFlags"],[358,35,431,33],[358,36,431,34,"shouldUseAnimatedObjectForTransform"],[358,71,431,69],[358,72,431,70],[359,2,432,0],[359,3,432,1],[360,2,434,0],[360,6,434,6,"SUPPORTED_INTERPOLATION_PARAMS"],[360,36,434,36],[360,39,434,39],[361,4,435,2,"inputRange"],[361,14,435,12],[361,16,435,14],[361,20,435,18],[362,4,436,2,"outputRange"],[362,15,436,13],[362,17,436,15],[362,21,436,19],[363,4,437,2,"extrapolate"],[363,15,437,13],[363,17,437,15],[363,21,437,19],[364,4,438,2,"extrapolateRight"],[364,20,438,18],[364,22,438,20],[364,26,438,24],[365,4,439,2,"extrapolateLeft"],[365,19,439,17],[365,21,439,19],[366,2,440,0],[366,3,440,1],[367,2,442,0],[367,11,442,9,"addWhitelistedStyleProp"],[367,34,442,32,"addWhitelistedStyleProp"],[367,35,442,33,"prop"],[367,39,442,45],[367,41,442,53],[368,4,443,2],[369,4,444,2,"SUPPORTED_STYLES"],[369,20,444,18],[369,21,444,19,"prop"],[369,25,444,23],[369,26,444,24],[369,29,444,27],[369,33,444,31],[370,2,445,0],[371,2,447,0],[371,11,447,9,"addWhitelistedTransformProp"],[371,38,447,36,"addWhitelistedTransformProp"],[371,39,447,37,"prop"],[371,43,447,49],[371,45,447,57],[372,4,448,2],[373,4,449,2,"SUPPORTED_TRANSFORMS"],[373,24,449,22],[373,25,449,23,"prop"],[373,29,449,27],[373,30,449,28],[373,33,449,31],[373,37,449,35],[374,2,450,0],[375,2,452,0],[375,11,452,9,"addWhitelistedInterpolationParam"],[375,43,452,41,"addWhitelistedInterpolationParam"],[375,44,452,42,"param"],[375,49,452,55],[375,51,452,63],[376,4,453,2],[377,4,454,2,"SUPPORTED_INTERPOLATION_PARAMS"],[377,34,454,32],[377,35,454,33,"param"],[377,40,454,38],[377,41,454,39],[377,44,454,42],[377,48,454,46],[378,2,455,0],[379,2,457,0],[379,11,457,9,"isSupportedColorStyleProp"],[379,36,457,34,"isSupportedColorStyleProp"],[379,37,457,35,"prop"],[379,41,457,47],[379,43,457,58],[380,4,458,2],[381,4,459,2],[381,11,459,9,"SUPPORTED_COLOR_STYLES"],[381,33,459,31],[381,34,459,32,"prop"],[381,38,459,36],[381,39,459,37],[381,44,459,42],[381,48,459,46],[382,2,460,0],[383,2,462,0],[383,11,462,9,"isSupportedStyleProp"],[383,31,462,29,"isSupportedStyleProp"],[383,32,462,30,"prop"],[383,36,462,42],[383,38,462,53],[384,4,463,2],[385,4,464,2],[385,11,464,9,"SUPPORTED_STYLES"],[385,27,464,25],[385,28,464,26,"prop"],[385,32,464,30],[385,33,464,31],[385,38,464,36],[385,42,464,40],[386,2,465,0],[387,2,467,0],[387,11,467,9,"isSupportedTransformProp"],[387,35,467,33,"isSupportedTransformProp"],[387,36,467,34,"prop"],[387,40,467,46],[387,42,467,57],[388,4,468,2],[389,4,469,2],[389,11,469,9,"SUPPORTED_TRANSFORMS"],[389,31,469,29],[389,32,469,30,"prop"],[389,36,469,34],[389,37,469,35],[389,42,469,40],[389,46,469,44],[390,2,470,0],[391,2,472,0],[391,11,472,9,"isSupportedInterpolationParam"],[391,40,472,38,"isSupportedInterpolationParam"],[391,41,472,39,"param"],[391,46,472,52],[391,48,472,63],[392,4,473,2],[393,4,474,2],[393,11,474,9,"SUPPORTED_INTERPOLATION_PARAMS"],[393,41,474,39],[393,42,474,40,"param"],[393,47,474,45],[393,48,474,46],[393,53,474,51],[393,57,474,55],[394,2,475,0],[395,2,477,0],[395,11,477,9,"validateTransform"],[395,28,477,26,"validateTransform"],[395,29,478,2,"configs"],[395,36,491,3],[395,38,492,8],[396,4,493,2,"configs"],[396,11,493,9],[396,12,493,10,"forEach"],[396,19,493,17],[396,20,493,18,"config"],[396,26,493,24],[396,30,493,28],[397,6,494,4],[397,10,494,8],[397,11,494,9,"isSupportedTransformProp"],[397,35,494,33],[397,36,494,34,"config"],[397,42,494,40],[397,43,494,41,"property"],[397,51,494,49],[397,52,494,50],[397,54,494,52],[398,8,495,6],[398,14,495,12],[398,18,495,16,"Error"],[398,23,495,21],[398,24,496,8],[398,37,496,21,"config"],[398,43,496,27],[398,44,496,28,"property"],[398,52,496,36],[398,98,497,6],[398,99,497,7],[399,6,498,4],[400,4,499,2],[400,5,499,3],[400,6,499,4],[401,2,500,0],[402,2,502,0],[402,11,502,9,"validateStyles"],[402,25,502,23,"validateStyles"],[402,26,502,24,"styles"],[402,32,502,61],[402,34,502,69],[403,4,503,2],[403,9,503,7],[403,13,503,13,"key"],[403,18,503,16],[403,22,503,20,"styles"],[403,28,503,26],[403,30,503,28],[404,6,504,4],[404,10,504,8],[404,11,504,9,"isSupportedStyleProp"],[404,31,504,29],[404,32,504,30,"key"],[404,37,504,33],[404,38,504,34],[404,40,504,36],[405,8,505,6],[405,14,505,12],[405,18,505,16,"Error"],[405,23,505,21],[405,24,506,8],[405,43,506,27,"key"],[405,48,506,30],[405,94,507,6],[405,95,507,7],[406,6,508,4],[407,4,509,2],[408,2,510,0],[409,2,512,0],[409,11,512,9,"validateInterpolation"],[409,32,512,30,"validateInterpolation"],[409,33,513,2,"config"],[409,39,513,42],[409,41,514,8],[410,4,515,2],[410,9,515,7],[410,13,515,13,"key"],[410,18,515,16],[410,22,515,20,"config"],[410,28,515,26],[410,30,515,28],[411,6,516,4],[411,10,516,8],[411,11,516,9,"isSupportedInterpolationParam"],[411,40,516,38],[411,41,516,39,"key"],[411,46,516,42],[411,47,516,43],[411,49,516,45],[412,8,517,6],[412,14,517,12],[412,18,517,16,"Error"],[412,23,517,21],[412,24,518,8],[412,51,518,35,"key"],[412,56,518,38],[412,102,519,6],[412,103,519,7],[413,6,520,4],[414,4,521,2],[415,2,522,0],[416,2,524,0],[416,11,524,9,"generateNewNodeTag"],[416,29,524,27,"generateNewNodeTag"],[416,30,524,27],[416,32,524,38],[417,4,525,2],[417,11,525,9,"__nativeAnimatedNodeTagCount"],[417,39,525,37],[417,41,525,39],[418,2,526,0],[419,2,528,0],[419,11,528,9,"generateNewAnimationId"],[419,33,528,31,"generateNewAnimationId"],[419,34,528,31],[419,36,528,42],[420,4,529,2],[420,11,529,9,"__nativeAnimationIdCount"],[420,35,529,33],[420,37,529,35],[421,2,530,0],[422,2,532,0],[422,11,532,9,"assertNativeAnimatedModule"],[422,37,532,35,"assertNativeAnimatedModule"],[422,38,532,35],[422,40,532,44],[423,4,533,2],[423,8,533,2,"invariant"],[423,26,533,11],[423,28,533,12,"NativeAnimatedModule"],[423,48,533,32],[423,50,533,34],[423,91,533,75],[423,92,533,76],[424,2,534,0],[425,2,536,0],[425,6,536,4,"_warnedMissingNativeAnimated"],[425,34,536,32],[425,37,536,35],[425,42,536,40],[426,2,538,0],[426,11,538,9,"shouldUseNativeDriver"],[426,32,538,30,"shouldUseNativeDriver"],[426,33,539,2,"config"],[426,39,539,60],[426,41,540,11],[427,4,541,2],[427,8,541,6,"config"],[427,14,541,12],[427,15,541,13,"useNativeDriver"],[427,30,541,28],[427,34,541,32],[427,38,541,36],[427,40,541,38],[428,6,542,4,"console"],[428,13,542,11],[428,14,542,12,"warn"],[428,18,542,16],[428,19,543,6],[428,87,543,74],[428,90,544,8],[428,146,545,4],[428,147,545,5],[429,4,546,2],[430,4,548,2],[430,8,548,6,"config"],[430,14,548,12],[430,15,548,13,"useNativeDriver"],[430,30,548,28],[430,35,548,33],[430,39,548,37],[430,43,548,41],[430,44,548,42,"NativeAnimatedModule"],[430,64,548,62],[430,66,548,64],[431,6,549,4],[431,10,549,8,"process"],[431,17,549,15],[431,18,549,16,"env"],[431,21,549,19],[431,22,549,20,"NODE_ENV"],[431,30,549,28],[431,35,549,33],[431,41,549,39],[431,43,549,41],[432,8,550,6],[432,12,550,10],[432,13,550,11,"_warnedMissingNativeAnimated"],[432,41,550,39],[432,43,550,41],[433,10,551,8,"console"],[433,17,551,15],[433,18,551,16,"warn"],[433,22,551,20],[433,23,552,10],[433,89,552,76],[433,92,553,12],[433,161,553,81],[433,164,554,12],[433,229,554,77],[433,232,555,12],[433,253,555,33],[433,256,556,12],[433,414,557,8],[433,415,557,9],[434,10,558,8,"_warnedMissingNativeAnimated"],[434,38,558,36],[434,41,558,39],[434,45,558,43],[435,8,559,6],[436,6,560,4],[437,6,561,4],[437,13,561,11],[437,18,561,16],[438,4,562,2],[439,4,564,2],[439,11,564,9,"config"],[439,17,564,15],[439,18,564,16,"useNativeDriver"],[439,33,564,31],[439,37,564,35],[439,42,564,40],[440,2,565,0],[441,2,567,0],[441,11,567,9,"transformDataType"],[441,28,567,26,"transformDataType"],[441,29,567,27,"value"],[441,34,567,49],[441,36,567,68],[442,4,568,2],[443,4,569,2],[444,4,570,2],[444,8,570,6],[444,15,570,13,"value"],[444,20,570,18],[444,25,570,23],[444,33,570,31],[444,35,570,33],[445,6,571,4],[445,13,571,11,"value"],[445,18,571,16],[446,4,572,2],[448,4,574,2],[449,4,575,2],[449,8,575,6,"value"],[449,13,575,11],[449,14,575,12,"endsWith"],[449,22,575,20],[449,23,575,21],[449,28,575,26],[449,29,575,27],[449,31,575,29],[450,6,576,4],[450,10,576,10,"degrees"],[450,17,576,17],[450,20,576,20,"parseFloat"],[450,30,576,30],[450,31,576,31,"value"],[450,36,576,36],[450,37,576,37],[450,41,576,41],[450,42,576,42],[451,6,577,4],[451,13,577,12,"degrees"],[451,20,577,19],[451,23,577,22,"Math"],[451,27,577,26],[451,28,577,27,"PI"],[451,30,577,29],[451,33,577,33],[451,38,577,38],[452,4,578,2],[452,5,578,3],[452,11,578,9],[452,15,578,13,"value"],[452,20,578,18],[452,21,578,19,"endsWith"],[452,29,578,27],[452,30,578,28],[452,35,578,33],[452,36,578,34],[452,38,578,36],[453,6,579,4],[453,13,579,11,"parseFloat"],[453,23,579,21],[453,24,579,22,"value"],[453,29,579,27],[453,30,579,28],[453,34,579,32],[453,35,579,33],[454,4,580,2],[454,5,580,3],[454,11,580,9],[455,6,581,4],[455,13,581,11,"value"],[455,18,581,16],[456,4,582,2],[457,2,583,0],[458,2,583,1],[458,6,583,1,"_default"],[458,14,583,1],[458,17,583,1,"exports"],[458,24,583,1],[458,25,583,1,"default"],[458,32,583,1],[458,35,585,15],[459,4,586,2,"API"],[459,7,586,5],[460,4,587,2,"isSupportedColorStyleProp"],[460,29,587,27],[461,4,588,2,"isSupportedStyleProp"],[461,24,588,22],[462,4,589,2,"isSupportedTransformProp"],[462,28,589,26],[463,4,590,2,"isSupportedInterpolationParam"],[463,33,590,31],[464,4,591,2,"addWhitelistedStyleProp"],[464,27,591,25],[465,4,592,2,"addWhitelistedTransformProp"],[465,31,592,29],[466,4,593,2,"addWhitelistedInterpolationParam"],[466,36,593,34],[467,4,594,2,"validateStyles"],[467,18,594,16],[468,4,595,2,"validateTransform"],[468,21,595,19],[469,4,596,2,"validateInterpolation"],[469,25,596,23],[470,4,597,2,"generateNewNodeTag"],[470,22,597,20],[471,4,598,2,"generateNewAnimationId"],[471,26,598,24],[472,4,599,2,"assertNativeAnimatedModule"],[472,30,599,28],[473,4,600,2,"shouldUseNativeDriver"],[473,25,600,23],[474,4,601,2,"transformDataType"],[474,21,601,19],[475,4,602,2],[476,4,603,2],[477,4,604,2],[477,8,604,6,"nativeEventEmitter"],[477,26,604,24,"nativeEventEmitter"],[477,27,604,24],[477,29,604,47],[478,6,605,4],[478,10,605,8],[478,11,605,9,"nativeEventEmitter"],[478,29,605,27],[478,31,605,29],[479,8,606,6],[480,8,607,6,"nativeEventEmitter"],[480,26,607,24],[480,29,607,27],[480,33,607,31,"NativeEventEmitter"],[480,60,607,49],[481,8,608,8],[482,8,609,8],[483,8,610,8,"Platform"],[483,25,610,16],[483,26,610,17,"OS"],[483,28,610,19],[483,33,610,24],[483,38,610,29],[483,41,610,32],[483,45,610,36],[483,48,610,39,"NativeAnimatedModule"],[483,68,611,6],[483,69,611,7],[484,6,612,4],[485,6,613,4],[485,13,613,11,"nativeEventEmitter"],[485,31,613,29],[486,4,614,2],[487,2,615,0],[487,3,615,1],[488,0,615,1],[488,3]],"functionMap":{"names":["<global>","<anonymous>","apis.reduce$argument_0","API.getValue","API.setWaitingForIdentifier","API.unsetWaitingForIdentifier","API.disableQueue","API.flushQueue","API.queueOperation","queue.push$argument_0","API.createAnimatedNode","API.updateAnimatedNodeConfig","API.startListeningToAnimatedNodeValue","API.stopListeningToAnimatedNodeValue","API.connectAnimatedNodes","API.disconnectAnimatedNodes","API.startAnimatingNode","API.stopAnimation","API.setAnimatedNodeValue","API.setAnimatedNodeOffset","API.flattenAnimatedNodeOffset","API.extractAnimatedNodeOffset","API.connectAnimatedNodeToView","API.disconnectAnimatedNodeFromView","API.restoreDefaultValues","API.dropAnimatedNode","API.addAnimatedEventToView","API.removeAnimatedEventFromView","setupGlobalEventEmitterListeners","RCTDeviceEventEmitter.addListener$argument_1","addWhitelistedStyleProp","addWhitelistedTransformProp","addWhitelistedInterpolationParam","isSupportedColorStyleProp","isSupportedStyleProp","isSupportedTransformProp","isSupportedInterpolationParam","validateTransform","configs.forEach$argument_0","validateStyles","validateInterpolation","generateNewNodeTag","generateNewAnimationId","assertNativeAnimatedModule","shouldUseNativeDriver","transformDataType","default.get__nativeEventEmitter"],"mappings":"AAA;MC2D;6CCwB;ODK;KDC;YGQ;GHc;2BIC;GJS;6BKC;GLO;gBMC;GNU;cOC;GPyC;kBQC;iBCe,iBD;GRI;sBUC;GVG;4BWC;GXQ;qCYC;GZG;oCaC;GbG;wBcC;GdG;2BeC;GfM;sBgBC;GhB4B;iBiBC;GjBG;wBkBC;GlBG;yBmBC;GnBG;6BoBC;GpBG;6BqBC;GrBG;6BsBC;GtBG;kCuBC;GvBU;wBwBC;GxBM;oByBC;GzBG;0B0BC;G1BY;E2BC;G3BY;A4BG;ICG;KDQ;MCK;ODW;C5BE;A8B0E;C9BG;A+BE;C/BG;AgCE;ChCG;AiCE;CjCG;AkCE;ClCG;AmCE;CnCG;AoCE;CpCG;AqCE;kBCgB;GDM;CrCC;AuCE;CvCQ;AwCE;CxCU;AyCE;CzCE;A0CE;C1CE;A2CE;C3CE;A4CI;C5C2B;A6CE;C7CgB;E8CqB;G9CU"}},"type":"js/module"}]}