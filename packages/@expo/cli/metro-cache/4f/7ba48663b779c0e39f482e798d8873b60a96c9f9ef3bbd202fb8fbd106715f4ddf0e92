{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":77,"column":0,"index":2230}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":77,"column":0,"index":2230}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"react-native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":29,"index":272},"end":{"line":13,"column":52,"index":295}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _require = _$$_REQUIRE(_dependencyMap[2], \"react-native\"),\n    InteractionManager = _require.InteractionManager;\n\n  /**\n   * A simple class for batching up invocations of a low-pri callback. A timeout is set to run the\n   * callback once after a delay, no matter how many times it's scheduled. Once the delay is reached,\n   * InteractionManager.runAfterInteractions is used to invoke the callback after any hi-pri\n   * interactions are done running.\n   *\n   * Make sure to cleanup with dispose().  Example:\n   *\n   *   class Widget extends React.Component {\n   *     _batchedSave: new Batchinator(() => this._saveState, 1000);\n   *     _saveSate() {\n   *       // save this.state to disk\n   *     }\n   *     componentDidUpdate() {\n   *       this._batchedSave.schedule();\n   *     }\n   *     componentWillUnmount() {\n   *       this._batchedSave.dispose();\n   *     }\n   *     ...\n   *   }\n   */\n  var Batchinator = /*#__PURE__*/function () {\n    function Batchinator(callback, delayMS) {\n      _classCallCheck(this, Batchinator);\n      this._delay = delayMS;\n      this._callback = callback;\n    }\n    /*\n     * Cleanup any pending tasks.\n     *\n     * By default, if there is a pending task the callback is run immediately. Set the option abort to\n     * true to not call the callback if it was pending.\n     */\n    return _createClass(Batchinator, [{\n      key: \"dispose\",\n      value: function dispose() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          abort: false\n        };\n        if (this._taskHandle) {\n          this._taskHandle.cancel();\n          if (!options.abort) {\n            this._callback();\n          }\n          this._taskHandle = null;\n        }\n      }\n    }, {\n      key: \"schedule\",\n      value: function schedule() {\n        if (this._taskHandle) {\n          return;\n        }\n        var timeoutHandle = setTimeout(() => {\n          this._taskHandle = InteractionManager.runAfterInteractions(() => {\n            // Note that we clear the handle before invoking the callback so that if the callback calls\n            // schedule again, it will actually schedule another task.\n            this._taskHandle = null;\n            this._callback();\n          });\n        }, this._delay);\n        this._taskHandle = {\n          cancel: () => clearTimeout(timeoutHandle)\n        };\n      }\n    }]);\n  }();\n  module.exports = Batchinator;\n});","lineCount":88,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_classCallCheck"],[14,21,11,13],[14,24,11,13,"_$$_REQUIRE"],[14,35,11,13],[14,36,11,13,"_dependencyMap"],[14,50,11,13],[15,2,11,13],[15,6,11,13,"_createClass"],[15,18,11,13],[15,21,11,13,"_$$_REQUIRE"],[15,32,11,13],[15,33,11,13,"_dependencyMap"],[15,47,11,13],[16,2,13,0],[16,6,13,0,"_require"],[16,14,13,0],[16,17,13,29,"require"],[16,28,13,36],[16,29,13,36,"_dependencyMap"],[16,43,13,36],[16,62,13,51],[16,63,13,52],[17,4,13,7,"InteractionManager"],[17,22,13,25],[17,25,13,25,"_require"],[17,33,13,25],[17,34,13,7,"InteractionManager"],[17,52,13,25],[19,2,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,0,35,0],[40,0,36,0],[41,2,15,0],[41,6,37,6,"Batchinator"],[41,17,37,17],[42,4,41,2],[42,13,41,2,"Batchinator"],[42,25,41,14,"callback"],[42,33,41,34],[42,35,41,36,"delayMS"],[42,42,41,51],[42,44,41,53],[43,6,41,53,"_classCallCheck"],[43,21,41,53],[43,28,41,53,"Batchinator"],[43,39,41,53],[44,6,42,4],[44,10,42,8],[44,11,42,9,"_delay"],[44,17,42,15],[44,20,42,18,"delayMS"],[44,27,42,25],[45,6,43,4],[45,10,43,8],[45,11,43,9,"_callback"],[45,20,43,18],[45,23,43,21,"callback"],[45,31,43,29],[46,4,44,2],[47,4,45,2],[48,0,46,0],[49,0,47,0],[50,0,48,0],[51,0,49,0],[52,0,50,0],[53,4,45,2],[53,11,45,2,"_createClass"],[53,23,45,2],[53,24,45,2,"Batchinator"],[53,35,45,2],[54,6,45,2,"key"],[54,9,45,2],[55,6,45,2,"value"],[55,11,45,2],[55,13,51,2],[55,22,51,2,"dispose"],[55,29,51,9,"dispose"],[55,30,51,9],[55,32,51,59],[56,8,51,59],[56,12,51,10,"options"],[56,19,51,40],[56,22,51,40,"arguments"],[56,31,51,40],[56,32,51,40,"length"],[56,38,51,40],[56,46,51,40,"arguments"],[56,55,51,40],[56,63,51,40,"undefined"],[56,72,51,40],[56,75,51,40,"arguments"],[56,84,51,40],[56,90,51,43],[57,10,51,44,"abort"],[57,15,51,49],[57,17,51,51],[58,8,51,56],[58,9,51,57],[59,8,52,4],[59,12,52,8],[59,16,52,12],[59,17,52,13,"_taskHandle"],[59,28,52,24],[59,30,52,26],[60,10,53,6],[60,14,53,10],[60,15,53,11,"_taskHandle"],[60,26,53,22],[60,27,53,23,"cancel"],[60,33,53,29],[60,34,53,30],[60,35,53,31],[61,10,54,6],[61,14,54,10],[61,15,54,11,"options"],[61,22,54,18],[61,23,54,19,"abort"],[61,28,54,24],[61,30,54,26],[62,12,55,8],[62,16,55,12],[62,17,55,13,"_callback"],[62,26,55,22],[62,27,55,23],[62,28,55,24],[63,10,56,6],[64,10,57,6],[64,14,57,10],[64,15,57,11,"_taskHandle"],[64,26,57,22],[64,29,57,25],[64,33,57,29],[65,8,58,4],[66,6,59,2],[67,4,59,3],[68,6,59,3,"key"],[68,9,59,3],[69,6,59,3,"value"],[69,11,59,3],[69,13,60,2],[69,22,60,2,"schedule"],[69,30,60,10,"schedule"],[69,31,60,10],[69,33,60,13],[70,8,61,4],[70,12,61,8],[70,16,61,12],[70,17,61,13,"_taskHandle"],[70,28,61,24],[70,30,61,26],[71,10,62,6],[72,8,63,4],[73,8,64,4],[73,12,64,10,"timeoutHandle"],[73,25,64,23],[73,28,64,26,"setTimeout"],[73,38,64,36],[73,39,64,37],[73,45,64,43],[74,10,65,6],[74,14,65,10],[74,15,65,11,"_taskHandle"],[74,26,65,22],[74,29,65,25,"InteractionManager"],[74,47,65,43],[74,48,65,44,"runAfterInteractions"],[74,68,65,64],[74,69,65,65],[74,75,65,71],[75,12,66,8],[76,12,67,8],[77,12,68,8],[77,16,68,12],[77,17,68,13,"_taskHandle"],[77,28,68,24],[77,31,68,27],[77,35,68,31],[78,12,69,8],[78,16,69,12],[78,17,69,13,"_callback"],[78,26,69,22],[78,27,69,23],[78,28,69,24],[79,10,70,6],[79,11,70,7],[79,12,70,8],[80,8,71,4],[80,9,71,5],[80,11,71,7],[80,15,71,11],[80,16,71,12,"_delay"],[80,22,71,18],[80,23,71,19],[81,8,72,4],[81,12,72,8],[81,13,72,9,"_taskHandle"],[81,24,72,20],[81,27,72,23],[82,10,72,24,"cancel"],[82,16,72,30],[82,18,72,32,"cancel"],[82,19,72,32],[82,24,72,38,"clearTimeout"],[82,36,72,50],[82,37,72,51,"timeoutHandle"],[82,50,72,64],[83,8,72,65],[83,9,72,66],[84,6,73,2],[85,4,73,3],[86,2,73,3],[87,2,76,0,"module"],[87,8,76,6],[87,9,76,7,"exports"],[87,16,76,14],[87,19,76,17,"Batchinator"],[87,30,76,28],[88,0,76,29],[88,3]],"functionMap":{"names":["<global>","Batchinator","constructor","dispose","schedule","setTimeout$argument_0","InteractionManager.runAfterInteractions$argument_0","_taskHandle.cancel"],"mappings":"AAA;ACoC;ECI;GDG;EEO;GFQ;EGC;qCCI;iECC;ODK;KDC;gCGC,iCH;GHC;CDC"}},"type":"js/module"}]}