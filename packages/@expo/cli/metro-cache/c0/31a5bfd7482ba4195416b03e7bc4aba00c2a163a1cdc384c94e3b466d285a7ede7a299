{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":0,"index":1771}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":0,"index":1771}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":0,"index":1771}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":0,"index":1771}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":0,"index":1771}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":0,"index":1771}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"./ReadOnlyNode","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":0,"index":323},"end":{"line":15,"column":59,"index":382}}],"key":"lL+NFlIq1O8ujEqjZi4lF9PERHs="}},{"name":"./specs/NativeDOM","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":0,"index":383},"end":{"line":16,"column":42,"index":425}}],"key":"TcbRiTYNok3yxUtTlzHcZCnDZbg="}},{"name":"./utilities/Traversal","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":17,"column":0,"index":426},"end":{"line":17,"column":56,"index":482}}],"key":"krkfCL9VZXF/b+1yFp3/wZW2uZQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _ReadOnlyNode2 = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"./ReadOnlyNode\"));\n  var _NativeDOM = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./specs/NativeDOM\"));\n  var _Traversal = _$$_REQUIRE(_dependencyMap[8], \"./utilities/Traversal\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); } /**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */ // flowlint unsafe-getters-setters:off\n  var ReadOnlyCharacterData = exports.default = /*#__PURE__*/function (_ReadOnlyNode) {\n    function ReadOnlyCharacterData() {\n      (0, _classCallCheck2.default)(this, ReadOnlyCharacterData);\n      return _callSuper(this, ReadOnlyCharacterData, arguments);\n    }\n    (0, _inherits2.default)(ReadOnlyCharacterData, _ReadOnlyNode);\n    return (0, _createClass2.default)(ReadOnlyCharacterData, [{\n      key: \"nextElementSibling\",\n      get: function () {\n        return (0, _Traversal.getElementSibling)(this, 'next');\n      }\n    }, {\n      key: \"previousElementSibling\",\n      get: function () {\n        return (0, _Traversal.getElementSibling)(this, 'previous');\n      }\n    }, {\n      key: \"data\",\n      get: function () {\n        var shadowNode = (0, _ReadOnlyNode2.getShadowNode)(this);\n        if (shadowNode != null) {\n          return _NativeDOM.default.getTextContent(shadowNode);\n        }\n        return '';\n      }\n    }, {\n      key: \"length\",\n      get: function () {\n        return this.data.length;\n      }\n\n      /**\n       * @override\n       */\n    }, {\n      key: \"textContent\",\n      get: function () {\n        return this.data;\n      }\n\n      /**\n       * @override\n       */\n    }, {\n      key: \"nodeValue\",\n      get: function () {\n        return this.data;\n      }\n    }, {\n      key: \"substringData\",\n      value: function substringData(offset, count) {\n        var data = this.data;\n        if (offset < 0) {\n          throw new TypeError(`Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is negative.`);\n        }\n        if (offset > data.length) {\n          throw new TypeError(`Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is greater than the node's length (${data.length}).`);\n        }\n        var adjustedCount = count < 0 || count > data.length ? data.length : count;\n        return data.slice(offset, offset + adjustedCount);\n      }\n    }]);\n  }(_ReadOnlyNode2.default);\n});","lineCount":90,"map":[[12,2,15,0],[12,6,15,0,"_ReadOnlyNode2"],[12,20,15,0],[12,23,15,0,"_interopRequireWildcard"],[12,46,15,0],[12,47,15,0,"_$$_REQUIRE"],[12,58,15,0],[12,59,15,0,"_dependencyMap"],[12,73,15,0],[13,2,16,0],[13,6,16,0,"_NativeDOM"],[13,16,16,0],[13,19,16,0,"_interopRequireDefault"],[13,41,16,0],[13,42,16,0,"_$$_REQUIRE"],[13,53,16,0],[13,54,16,0,"_dependencyMap"],[13,68,16,0],[14,2,17,0],[14,6,17,0,"_Traversal"],[14,16,17,0],[14,19,17,0,"_$$_REQUIRE"],[14,30,17,0],[14,31,17,0,"_dependencyMap"],[14,45,17,0],[15,2,17,56],[15,11,17,56,"_getRequireWildcardCache"],[15,36,17,56,"e"],[15,37,17,56],[15,66,17,56,"WeakMap"],[15,73,17,56],[15,92,17,56,"r"],[15,93,17,56],[15,100,17,56,"WeakMap"],[15,107,17,56],[15,111,17,56,"t"],[15,112,17,56],[15,119,17,56,"WeakMap"],[15,126,17,56],[15,138,17,56,"_getRequireWildcardCache"],[15,162,17,56],[15,174,17,56,"_getRequireWildcardCache"],[15,175,17,56,"e"],[15,176,17,56],[15,187,17,56,"e"],[15,188,17,56],[15,191,17,56,"t"],[15,192,17,56],[15,195,17,56,"r"],[15,196,17,56],[15,201,17,56,"e"],[15,202,17,56],[16,2,17,56],[16,11,17,56,"_interopRequireWildcard"],[16,35,17,56,"e"],[16,36,17,56],[16,38,17,56,"r"],[16,39,17,56],[16,48,17,56,"r"],[16,49,17,56],[16,53,17,56,"e"],[16,54,17,56],[16,58,17,56,"e"],[16,59,17,56],[16,60,17,56,"__esModule"],[16,70,17,56],[16,79,17,56,"e"],[16,80,17,56],[16,95,17,56,"e"],[16,96,17,56],[16,119,17,56,"e"],[16,120,17,56],[16,145,17,56,"e"],[16,146,17,56],[16,157,17,56,"default"],[16,164,17,56],[16,166,17,56,"e"],[16,167,17,56],[16,175,17,56,"t"],[16,176,17,56],[16,179,17,56,"_getRequireWildcardCache"],[16,203,17,56],[16,204,17,56,"r"],[16,205,17,56],[16,212,17,56,"t"],[16,213,17,56],[16,217,17,56,"t"],[16,218,17,56],[16,219,17,56,"has"],[16,222,17,56],[16,223,17,56,"e"],[16,224,17,56],[16,234,17,56,"t"],[16,235,17,56],[16,236,17,56,"get"],[16,239,17,56],[16,240,17,56,"e"],[16,241,17,56],[16,248,17,56,"n"],[16,249,17,56],[16,254,17,56,"__proto__"],[16,263,17,56],[16,273,17,56,"a"],[16,274,17,56],[16,277,17,56,"Object"],[16,283,17,56],[16,284,17,56,"defineProperty"],[16,298,17,56],[16,302,17,56,"Object"],[16,308,17,56],[16,309,17,56,"getOwnPropertyDescriptor"],[16,333,17,56],[16,344,17,56,"u"],[16,345,17,56],[16,349,17,56,"e"],[16,350,17,56],[16,370,17,56,"u"],[16,371,17,56],[16,375,17,56,"Object"],[16,381,17,56],[16,382,17,56,"prototype"],[16,391,17,56],[16,392,17,56,"hasOwnProperty"],[16,406,17,56],[16,407,17,56,"call"],[16,411,17,56],[16,412,17,56,"e"],[16,413,17,56],[16,415,17,56,"u"],[16,416,17,56],[16,425,17,56,"i"],[16,426,17,56],[16,429,17,56,"a"],[16,430,17,56],[16,433,17,56,"Object"],[16,439,17,56],[16,440,17,56,"getOwnPropertyDescriptor"],[16,464,17,56],[16,465,17,56,"e"],[16,466,17,56],[16,468,17,56,"u"],[16,469,17,56],[16,479,17,56,"i"],[16,480,17,56],[16,485,17,56,"i"],[16,486,17,56],[16,487,17,56,"get"],[16,490,17,56],[16,494,17,56,"i"],[16,495,17,56],[16,496,17,56,"set"],[16,499,17,56],[16,503,17,56,"Object"],[16,509,17,56],[16,510,17,56,"defineProperty"],[16,524,17,56],[16,525,17,56,"n"],[16,526,17,56],[16,528,17,56,"u"],[16,529,17,56],[16,531,17,56,"i"],[16,532,17,56],[16,536,17,56,"n"],[16,537,17,56],[16,538,17,56,"u"],[16,539,17,56],[16,543,17,56,"e"],[16,544,17,56],[16,545,17,56,"u"],[16,546,17,56],[16,558,17,56,"n"],[16,559,17,56],[16,560,17,56,"default"],[16,567,17,56],[16,570,17,56,"e"],[16,571,17,56],[16,573,17,56,"t"],[16,574,17,56],[16,578,17,56,"t"],[16,579,17,56],[16,580,17,56,"set"],[16,583,17,56],[16,584,17,56,"e"],[16,585,17,56],[16,587,17,56,"n"],[16,588,17,56],[16,591,17,56,"n"],[16,592,17,56],[17,2,17,56],[17,11,17,56,"_callSuper"],[17,22,17,56,"t"],[17,23,17,56],[17,25,17,56,"o"],[17,26,17,56],[17,28,17,56,"e"],[17,29,17,56],[17,40,17,56,"o"],[17,41,17,56],[17,48,17,56,"_getPrototypeOf2"],[17,64,17,56],[17,65,17,56,"default"],[17,72,17,56],[17,74,17,56,"o"],[17,75,17,56],[17,82,17,56,"_possibleConstructorReturn2"],[17,109,17,56],[17,110,17,56,"default"],[17,117,17,56],[17,119,17,56,"t"],[17,120,17,56],[17,122,17,56,"_isNativeReflectConstruct"],[17,147,17,56],[17,152,17,56,"Reflect"],[17,159,17,56],[17,160,17,56,"construct"],[17,169,17,56],[17,170,17,56,"o"],[17,171,17,56],[17,173,17,56,"e"],[17,174,17,56],[17,186,17,56,"_getPrototypeOf2"],[17,202,17,56],[17,203,17,56,"default"],[17,210,17,56],[17,212,17,56,"t"],[17,213,17,56],[17,215,17,56,"constructor"],[17,226,17,56],[17,230,17,56,"o"],[17,231,17,56],[17,232,17,56,"apply"],[17,237,17,56],[17,238,17,56,"t"],[17,239,17,56],[17,241,17,56,"e"],[17,242,17,56],[18,2,17,56],[18,11,17,56,"_isNativeReflectConstruct"],[18,37,17,56],[18,51,17,56,"t"],[18,52,17,56],[18,56,17,56,"Boolean"],[18,63,17,56],[18,64,17,56,"prototype"],[18,73,17,56],[18,74,17,56,"valueOf"],[18,81,17,56],[18,82,17,56,"call"],[18,86,17,56],[18,87,17,56,"Reflect"],[18,94,17,56],[18,95,17,56,"construct"],[18,104,17,56],[18,105,17,56,"Boolean"],[18,112,17,56],[18,145,17,56,"t"],[18,146,17,56],[18,159,17,56,"_isNativeReflectConstruct"],[18,184,17,56],[18,196,17,56,"_isNativeReflectConstruct"],[18,197,17,56],[18,210,17,56,"t"],[18,211,17,56],[18,221,1,0],[19,0,2,0],[20,0,3,0],[21,0,4,0],[22,0,5,0],[23,0,6,0],[24,0,7,0],[25,0,8,0],[26,0,9,0],[26,3,1,0],[26,4,11,0],[27,2,11,0],[27,6,19,21,"ReadOnlyCharacterData"],[27,27,19,42],[27,30,19,42,"exports"],[27,37,19,42],[27,38,19,42,"default"],[27,45,19,42],[27,71,19,42,"_ReadOnlyNode"],[27,84,19,42],[28,4,19,42],[28,13,19,42,"ReadOnlyCharacterData"],[28,35,19,42],[29,6,19,42],[29,10,19,42,"_classCallCheck2"],[29,26,19,42],[29,27,19,42,"default"],[29,34,19,42],[29,42,19,42,"ReadOnlyCharacterData"],[29,63,19,42],[30,6,19,42],[30,13,19,42,"_callSuper"],[30,23,19,42],[30,30,19,42,"ReadOnlyCharacterData"],[30,51,19,42],[30,53,19,42,"arguments"],[30,62,19,42],[31,4,19,42],[32,4,19,42],[32,8,19,42,"_inherits2"],[32,18,19,42],[32,19,19,42,"default"],[32,26,19,42],[32,28,19,42,"ReadOnlyCharacterData"],[32,49,19,42],[32,51,19,42,"_ReadOnlyNode"],[32,64,19,42],[33,4,19,42],[33,15,19,42,"_createClass2"],[33,28,19,42],[33,29,19,42,"default"],[33,36,19,42],[33,38,19,42,"ReadOnlyCharacterData"],[33,59,19,42],[34,6,19,42,"key"],[34,9,19,42],[35,6,19,42,"get"],[35,9,19,42],[35,11,20,2],[35,20,20,2,"get"],[35,21,20,2],[35,23,20,51],[36,8,21,4],[36,15,21,11],[36,19,21,11,"getElementSibling"],[36,47,21,28],[36,49,21,29],[36,53,21,33],[36,55,21,35],[36,61,21,41],[36,62,21,42],[37,6,22,2],[38,4,22,3],[39,6,22,3,"key"],[39,9,22,3],[40,6,22,3,"get"],[40,9,22,3],[40,11,24,2],[40,20,24,2,"get"],[40,21,24,2],[40,23,24,55],[41,8,25,4],[41,15,25,11],[41,19,25,11,"getElementSibling"],[41,47,25,28],[41,49,25,29],[41,53,25,33],[41,55,25,35],[41,65,25,45],[41,66,25,46],[42,6,26,2],[43,4,26,3],[44,6,26,3,"key"],[44,9,26,3],[45,6,26,3,"get"],[45,9,26,3],[45,11,28,2],[45,20,28,2,"get"],[45,21,28,2],[45,23,28,21],[46,8,29,4],[46,12,29,10,"shadowNode"],[46,22,29,20],[46,25,29,23],[46,29,29,23,"getShadowNode"],[46,57,29,36],[46,59,29,37],[46,63,29,41],[46,64,29,42],[47,8,31,4],[47,12,31,8,"shadowNode"],[47,22,31,18],[47,26,31,22],[47,30,31,26],[47,32,31,28],[48,10,32,6],[48,17,32,13,"NativeDOM"],[48,35,32,22],[48,36,32,23,"getTextContent"],[48,50,32,37],[48,51,32,38,"shadowNode"],[48,61,32,48],[48,62,32,49],[49,8,33,4],[50,8,35,4],[50,15,35,11],[50,17,35,13],[51,6,36,2],[52,4,36,3],[53,6,36,3,"key"],[53,9,36,3],[54,6,36,3,"get"],[54,9,36,3],[54,11,38,2],[54,20,38,2,"get"],[54,21,38,2],[54,23,38,23],[55,8,39,4],[55,15,39,11],[55,19,39,15],[55,20,39,16,"data"],[55,24,39,20],[55,25,39,21,"length"],[55,31,39,27],[56,6,40,2],[58,6,42,2],[59,0,43,0],[60,0,44,0],[61,4,42,2],[62,6,42,2,"key"],[62,9,42,2],[63,6,42,2,"get"],[63,9,42,2],[63,11,45,2],[63,20,45,2,"get"],[63,21,45,2],[63,23,45,35],[64,8,46,4],[64,15,46,11],[64,19,46,15],[64,20,46,16,"data"],[64,24,46,20],[65,6,47,2],[67,6,49,2],[68,0,50,0],[69,0,51,0],[70,4,49,2],[71,6,49,2,"key"],[71,9,49,2],[72,6,49,2,"get"],[72,9,49,2],[72,11,52,2],[72,20,52,2,"get"],[72,21,52,2],[72,23,52,26],[73,8,53,4],[73,15,53,11],[73,19,53,15],[73,20,53,16,"data"],[73,24,53,20],[74,6,54,2],[75,4,54,3],[76,6,54,3,"key"],[76,9,54,3],[77,6,54,3,"value"],[77,11,54,3],[77,13,56,2],[77,22,56,2,"substringData"],[77,35,56,15,"substringData"],[77,36,56,16,"offset"],[77,42,56,30],[77,44,56,32,"count"],[77,49,56,45],[77,51,56,55],[78,8,57,4],[78,12,57,10,"data"],[78,16,57,14],[78,19,57,17],[78,23,57,21],[78,24,57,22,"data"],[78,28,57,26],[79,8,58,4],[79,12,58,8,"offset"],[79,18,58,14],[79,21,58,17],[79,22,58,18],[79,24,58,20],[80,10,59,6],[80,16,59,12],[80,20,59,16,"TypeError"],[80,29,59,25],[80,30,60,8],[80,98,60,76,"offset"],[80,104,60,82],[80,119,61,6],[80,120,61,7],[81,8,62,4],[82,8,63,4],[82,12,63,8,"offset"],[82,18,63,14],[82,21,63,17,"data"],[82,25,63,21],[82,26,63,22,"length"],[82,32,63,28],[82,34,63,30],[83,10,64,6],[83,16,64,12],[83,20,64,16,"TypeError"],[83,29,64,25],[83,30,65,8],[83,98,65,76,"offset"],[83,104,65,82],[83,143,65,121,"data"],[83,147,65,125],[83,148,65,126,"length"],[83,154,65,132],[83,158,66,6],[83,159,66,7],[84,8,67,4],[85,8,68,4],[85,12,68,8,"adjustedCount"],[85,25,68,21],[85,28,68,24,"count"],[85,33,68,29],[85,36,68,32],[85,37,68,33],[85,41,68,37,"count"],[85,46,68,42],[85,49,68,45,"data"],[85,53,68,49],[85,54,68,50,"length"],[85,60,68,56],[85,63,68,59,"data"],[85,67,68,63],[85,68,68,64,"length"],[85,74,68,70],[85,77,68,73,"count"],[85,82,68,78],[86,8,69,4],[86,15,69,11,"data"],[86,19,69,15],[86,20,69,16,"slice"],[86,25,69,21],[86,26,69,22,"offset"],[86,32,69,28],[86,34,69,30,"offset"],[86,40,69,36],[86,43,69,39,"adjustedCount"],[86,56,69,52],[86,57,69,53],[87,6,70,2],[88,4,70,3],[89,2,70,3],[89,4,19,51,"ReadOnlyNode"],[89,26,19,63],[90,0,19,63],[90,3]],"functionMap":{"names":["<global>","ReadOnlyCharacterData","get__nextElementSibling","get__previousElementSibling","get__data","get__length","get__textContent","get__nodeValue","substringData"],"mappings":"AAA;eCkB;ECC;GDE;EEE;GFE;EGE;GHQ;EIE;GJE;EKK;GLE;EMK;GNE;EOE;GPc;CDC"}},"type":"js/module"}]}