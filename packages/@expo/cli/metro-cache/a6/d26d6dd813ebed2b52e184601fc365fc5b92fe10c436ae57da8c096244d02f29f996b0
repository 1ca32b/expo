{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":279,"column":0,"index":8328}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../Utilities/Platform","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0,"index":352},"end":{"line":14,"column":45,"index":397}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"../Utilities/RCTLog","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":0,"index":398},"end":{"line":15,"column":41,"index":439}}],"key":"Uuj/Cy2CxwSpVOuCB8J/Nbqu/Os="}},{"name":"./Data/parseLogBoxLog","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":0,"index":440},"end":{"line":16,"column":56,"index":496}},{"start":{"line":38,"column":47,"index":1009},"end":{"line":38,"column":79,"index":1041}}],"key":"3iOElTH1ik3IcLhNaEJLMMKfNkk="}},{"name":"./Data/LogBoxData","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":37,"column":21,"index":932},"end":{"line":37,"column":49,"index":960}}],"key":"K5kTudEgKIwocGVzIW0z8MB2Ajk="}},{"name":"../NativeModules/specs/NativeLogBox","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":56,"column":6,"index":1401},"end":{"line":56,"column":52,"index":1447}}],"key":"3NGMD8vmV28wtRZ8vh45i5e10Mo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../Utilities/Platform\"));\n  var _RCTLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../Utilities/RCTLog\"));\n  var _parseLogBoxLog3 = _$$_REQUIRE(_dependencyMap[3], \"./Data/parseLogBoxLog\");\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  var LogBox;\n  /**\n   * LogBox displays logs in the app.\n   */\n  if (__DEV__) {\n    var LogBoxData = _$$_REQUIRE(_dependencyMap[4], \"./Data/LogBoxData\");\n    var _require = _$$_REQUIRE(_dependencyMap[3], \"./Data/parseLogBoxLog\"),\n      parseLogBoxLog = _require.parseLogBoxLog,\n      parseInterpolation = _require.parseInterpolation;\n    var originalConsoleError;\n    var originalConsoleWarn;\n    var consoleErrorImpl;\n    var consoleWarnImpl;\n    var isLogBoxInstalled = false;\n    LogBox = {\n      install() {\n        if (isLogBoxInstalled) {\n          return;\n        }\n        isLogBoxInstalled = true;\n\n        // Trigger lazy initialization of module.\n        _$$_REQUIRE(_dependencyMap[5], \"../NativeModules/specs/NativeLogBox\");\n\n        // IMPORTANT: we only overwrite `console.error` and `console.warn` once.\n        // When we uninstall we keep the same reference and only change its\n        // internal implementation\n        var isFirstInstall = originalConsoleError == null;\n        if (isFirstInstall) {\n          originalConsoleError = console.error.bind(console);\n          originalConsoleWarn = console.warn.bind(console);\n\n          // $FlowExpectedError[cannot-write]\n          console.error = function () {\n            consoleErrorImpl(...arguments);\n          };\n          // $FlowExpectedError[cannot-write]\n          console.warn = function () {\n            consoleWarnImpl(...arguments);\n          };\n        }\n        consoleErrorImpl = registerError;\n        consoleWarnImpl = registerWarning;\n        if (_Platform.default.isTesting) {\n          LogBoxData.setDisabled(true);\n        }\n        _RCTLog.default.setWarningHandler(function () {\n          registerWarning(...arguments);\n        });\n      },\n      uninstall() {\n        if (!isLogBoxInstalled) {\n          return;\n        }\n        isLogBoxInstalled = false;\n\n        // IMPORTANT: we don't re-assign to `console` in case the method has been\n        // decorated again after installing LogBox. E.g.:\n        // Before uninstalling: original > LogBox > OtherErrorHandler\n        // After uninstalling:  original > LogBox (noop) > OtherErrorHandler\n        consoleErrorImpl = originalConsoleError;\n        consoleWarnImpl = originalConsoleWarn;\n      },\n      isInstalled() {\n        return isLogBoxInstalled;\n      },\n      ignoreLogs(patterns) {\n        LogBoxData.addIgnorePatterns(patterns);\n      },\n      ignoreAllLogs(value) {\n        LogBoxData.setDisabled(value == null ? true : value);\n      },\n      clearAllLogs() {\n        LogBoxData.clear();\n      },\n      addLog(log) {\n        if (isLogBoxInstalled) {\n          LogBoxData.addLog(log);\n        }\n      },\n      addException(error) {\n        if (isLogBoxInstalled) {\n          LogBoxData.addException(error);\n        }\n      }\n    };\n    var isRCTLogAdviceWarning = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      // RCTLogAdvice is a native logging function designed to show users\n      // a message in the console, but not show it to them in Logbox.\n      return typeof args[0] === 'string' && args[0].startsWith('(ADVICE)');\n    };\n    var isWarningModuleWarning = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return typeof args[0] === 'string' && args[0].startsWith('Warning: ');\n    };\n    var registerWarning = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      // Let warnings within LogBox itself fall through.\n      if (LogBoxData.isLogBoxErrorMessage(String(args[0]))) {\n        originalConsoleError(...args);\n        return;\n      } else {\n        // Be sure to pass LogBox warnings through.\n        originalConsoleWarn(...args);\n      }\n      try {\n        if (!isRCTLogAdviceWarning(...args)) {\n          var _parseLogBoxLog = parseLogBoxLog(args),\n            category = _parseLogBoxLog.category,\n            message = _parseLogBoxLog.message,\n            componentStack = _parseLogBoxLog.componentStack,\n            componentStackType = _parseLogBoxLog.componentStackType;\n          if (!LogBoxData.isMessageIgnored(message.content)) {\n            LogBoxData.addLog({\n              level: 'warn',\n              category,\n              message,\n              componentStack,\n              componentStackType\n            });\n          }\n        }\n      } catch (err) {\n        LogBoxData.reportLogBoxError(err);\n      }\n    };\n\n    /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n     * LTI update could not be added via codemod */\n    var registerError = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      // Let errors within LogBox itself fall through.\n      if (LogBoxData.isLogBoxErrorMessage(args[0])) {\n        originalConsoleError(...args);\n        return;\n      }\n      try {\n        if (!isWarningModuleWarning(...args) && !(0, _parseLogBoxLog3.hasComponentStack)(args)) {\n          // Only show LogBox for the 'warning' module, or React errors with\n          // component stacks, otherwise pass the error through.u\n          //\n          // By passing through, this will get picked up by the React console override,\n          // potentially adding the component stack. React then passes it back to the\n          // React Native ExceptionsManager, which reports it to LogBox as an error.\n          //\n          // Ideally, we refactor all RN error handling so that LogBox patching\n          // errors is not necessary, and they are reported the same as a framework.\n          // The blocker to this is that the ExceptionManager console.error override\n          // strigifys all of the args before passing it through to LogBox, which\n          // would lose all of the interpolation information.\n          //\n          // The 'warning' module needs to be handled here because React internally calls\n          // `console.error('Warning: ')` with the component stack already included.\n          originalConsoleError(...args);\n          return;\n        }\n        var format = args[0].replace('Warning: ', '');\n        var filterResult = LogBoxData.checkWarningFilter(format);\n        var level = 'error';\n        if (filterResult.monitorEvent !== 'warning_unhandled') {\n          if (filterResult.suppressCompletely) {\n            return;\n          }\n          if (filterResult.suppressDialog_LEGACY === true) {\n            level = 'warn';\n          } else if (filterResult.forceDialogImmediately === true) {\n            level = 'fatal'; // Do not downgrade. These are real bugs with same severity as throws.\n          }\n        }\n\n        // Unfortunately, we need to add the Warning: prefix back for downstream dependencies.\n        // Downstream, we check for this prefix to know that LogBox already handled it, so\n        // it doesn't get reported back to LogBox. It's an absolute mess.\n        args[0] = `Warning: ${filterResult.finalFormat}`;\n        var _parseLogBoxLog2 = parseLogBoxLog(args),\n          category = _parseLogBoxLog2.category,\n          message = _parseLogBoxLog2.message,\n          componentStack = _parseLogBoxLog2.componentStack,\n          componentStackType = _parseLogBoxLog2.componentStackType;\n\n        // Interpolate the message so they are formatted for adb and other CLIs.\n        // This is different than the message.content above because it includes component stacks.\n        var interpolated = parseInterpolation(args);\n        originalConsoleError(interpolated.message.content);\n        if (!LogBoxData.isMessageIgnored(message.content)) {\n          LogBoxData.addLog({\n            level,\n            category,\n            message,\n            componentStack,\n            componentStackType\n          });\n        }\n      } catch (err) {\n        LogBoxData.reportLogBoxError(err);\n      }\n    };\n  } else {\n    LogBox = {\n      install() {\n        // Do nothing.\n      },\n      uninstall() {\n        // Do nothing.\n      },\n      isInstalled() {\n        return false;\n      },\n      ignoreLogs(patterns) {\n        // Do nothing.\n      },\n      ignoreAllLogs(value) {\n        // Do nothing.\n      },\n      clearAllLogs() {\n        // Do nothing.\n      },\n      addLog(log) {\n        // Do nothing.\n      },\n      addException(error) {\n        // Do nothing.\n      }\n    };\n  }\n  var _default = exports.default = LogBox;\n});","lineCount":255,"map":[[7,2,14,0],[7,6,14,0,"_Platform"],[7,15,14,0],[7,18,14,0,"_interopRequireDefault"],[7,40,14,0],[7,41,14,0,"_$$_REQUIRE"],[7,52,14,0],[7,53,14,0,"_dependencyMap"],[7,67,14,0],[8,2,15,0],[8,6,15,0,"_RCTLog"],[8,13,15,0],[8,16,15,0,"_interopRequireDefault"],[8,38,15,0],[8,39,15,0,"_$$_REQUIRE"],[8,50,15,0],[8,51,15,0,"_dependencyMap"],[8,65,15,0],[9,2,16,0],[9,6,16,0,"_parseLogBoxLog3"],[9,22,16,0],[9,25,16,0,"_$$_REQUIRE"],[9,36,16,0],[9,37,16,0,"_dependencyMap"],[9,51,16,0],[10,2,1,0],[11,0,2,0],[12,0,3,0],[13,0,4,0],[14,0,5,0],[15,0,6,0],[16,0,7,0],[17,0,8,0],[18,0,9,0],[20,2,20,0],[20,6,20,4,"LogBox"],[20,12,20,10],[21,2,33,0],[22,0,34,0],[23,0,35,0],[24,2,36,0],[24,6,36,4,"__DEV__"],[24,13,36,11],[24,15,36,13],[25,4,37,2],[25,8,37,8,"LogBoxData"],[25,18,37,18],[25,21,37,21,"require"],[25,32,37,28],[25,33,37,28,"_dependencyMap"],[25,47,37,28],[25,71,37,48],[25,72,37,49],[26,4,38,2],[26,8,38,2,"_require"],[26,16,38,2],[26,19,38,47,"require"],[26,30,38,54],[26,31,38,54,"_dependencyMap"],[26,45,38,54],[26,73,38,78],[26,74,38,79],[27,6,38,9,"parseLogBoxLog"],[27,20,38,23],[27,23,38,23,"_require"],[27,31,38,23],[27,32,38,9,"parseLogBoxLog"],[27,46,38,23],[28,6,38,25,"parseInterpolation"],[28,24,38,43],[28,27,38,43,"_require"],[28,35,38,43],[28,36,38,25,"parseInterpolation"],[28,54,38,43],[29,4,40,2],[29,8,40,6,"originalConsoleError"],[29,28,40,26],[30,4,41,2],[30,8,41,6,"originalConsoleWarn"],[30,27,41,25],[31,4,42,2],[31,8,42,6,"consoleErrorImpl"],[31,24,42,22],[32,4,43,2],[32,8,43,6,"consoleWarnImpl"],[32,23,43,54],[33,4,45,2],[33,8,45,6,"isLogBoxInstalled"],[33,25,45,32],[33,28,45,35],[33,33,45,40],[34,4,47,2,"LogBox"],[34,10,47,8],[34,13,47,11],[35,6,48,4,"install"],[35,13,48,11,"install"],[35,14,48,11],[35,16,48,20],[36,8,49,6],[36,12,49,10,"isLogBoxInstalled"],[36,29,49,27],[36,31,49,29],[37,10,50,8],[38,8,51,6],[39,8,53,6,"isLogBoxInstalled"],[39,25,53,23],[39,28,53,26],[39,32,53,30],[41,8,55,6],[42,8,56,6,"require"],[42,19,56,13],[42,20,56,13,"_dependencyMap"],[42,34,56,13],[42,76,56,51],[42,77,56,52],[44,8,58,6],[45,8,59,6],[46,8,60,6],[47,8,61,6],[47,12,61,12,"isFirstInstall"],[47,26,61,26],[47,29,61,29,"originalConsoleError"],[47,49,61,49],[47,53,61,53],[47,57,61,57],[48,8,62,6],[48,12,62,10,"isFirstInstall"],[48,26,62,24],[48,28,62,26],[49,10,63,8,"originalConsoleError"],[49,30,63,28],[49,33,63,31,"console"],[49,40,63,38],[49,41,63,39,"error"],[49,46,63,44],[49,47,63,45,"bind"],[49,51,63,49],[49,52,63,50,"console"],[49,59,63,57],[49,60,63,58],[50,10,64,8,"originalConsoleWarn"],[50,29,64,27],[50,32,64,30,"console"],[50,39,64,37],[50,40,64,38,"warn"],[50,44,64,42],[50,45,64,43,"bind"],[50,49,64,47],[50,50,64,48,"console"],[50,57,64,55],[50,58,64,56],[52,10,66,8],[53,10,67,8,"console"],[53,17,67,15],[53,18,67,16,"error"],[53,23,67,21],[53,26,67,24],[53,38,67,37],[54,12,68,10,"consoleErrorImpl"],[54,28,68,26],[54,29,68,27],[54,32,68,27,"arguments"],[54,41,68,34],[54,42,68,35],[55,10,69,8],[55,11,69,9],[56,10,70,8],[57,10,71,8,"console"],[57,17,71,15],[57,18,71,16,"warn"],[57,22,71,20],[57,25,71,23],[57,37,71,36],[58,12,72,10,"consoleWarnImpl"],[58,27,72,25],[58,28,72,26],[58,31,72,26,"arguments"],[58,40,72,33],[58,41,72,34],[59,10,73,8],[59,11,73,9],[60,8,74,6],[61,8,76,6,"consoleErrorImpl"],[61,24,76,22],[61,27,76,25,"registerError"],[61,40,76,38],[62,8,77,6,"consoleWarnImpl"],[62,23,77,21],[62,26,77,24,"registerWarning"],[62,41,77,39],[63,8,79,6],[63,12,79,10,"Platform"],[63,29,79,18],[63,30,79,19,"isTesting"],[63,39,79,28],[63,41,79,30],[64,10,80,8,"LogBoxData"],[64,20,80,18],[64,21,80,19,"setDisabled"],[64,32,80,30],[64,33,80,31],[64,37,80,35],[64,38,80,36],[65,8,81,6],[66,8,83,6,"RCTLog"],[66,23,83,12],[66,24,83,13,"setWarningHandler"],[66,41,83,30],[66,42,83,31],[66,54,83,44],[67,10,84,8,"registerWarning"],[67,25,84,23],[67,26,84,24],[67,29,84,24,"arguments"],[67,38,84,31],[67,39,84,32],[68,8,85,6],[68,9,85,7],[68,10,85,8],[69,6,86,4],[69,7,86,5],[70,6,88,4,"uninstall"],[70,15,88,13,"uninstall"],[70,16,88,13],[70,18,88,22],[71,8,89,6],[71,12,89,10],[71,13,89,11,"isLogBoxInstalled"],[71,30,89,28],[71,32,89,30],[72,10,90,8],[73,8,91,6],[74,8,93,6,"isLogBoxInstalled"],[74,25,93,23],[74,28,93,26],[74,33,93,31],[76,8,95,6],[77,8,96,6],[78,8,97,6],[79,8,98,6],[80,8,99,6,"consoleErrorImpl"],[80,24,99,22],[80,27,99,25,"originalConsoleError"],[80,47,99,45],[81,8,100,6,"consoleWarnImpl"],[81,23,100,21],[81,26,100,24,"originalConsoleWarn"],[81,45,100,43],[82,6,101,4],[82,7,101,5],[83,6,103,4,"isInstalled"],[83,17,103,15,"isInstalled"],[83,18,103,15],[83,20,103,27],[84,8,104,6],[84,15,104,13,"isLogBoxInstalled"],[84,32,104,30],[85,6,105,4],[85,7,105,5],[86,6,107,4,"ignoreLogs"],[86,16,107,14,"ignoreLogs"],[86,17,107,15,"patterns"],[86,25,107,54],[86,27,107,62],[87,8,108,6,"LogBoxData"],[87,18,108,16],[87,19,108,17,"addIgnorePatterns"],[87,36,108,34],[87,37,108,35,"patterns"],[87,45,108,43],[87,46,108,44],[88,6,109,4],[88,7,109,5],[89,6,111,4,"ignoreAllLogs"],[89,19,111,17,"ignoreAllLogs"],[89,20,111,18,"value"],[89,25,111,34],[89,27,111,42],[90,8,112,6,"LogBoxData"],[90,18,112,16],[90,19,112,17,"setDisabled"],[90,30,112,28],[90,31,112,29,"value"],[90,36,112,34],[90,40,112,38],[90,44,112,42],[90,47,112,45],[90,51,112,49],[90,54,112,52,"value"],[90,59,112,57],[90,60,112,58],[91,6,113,4],[91,7,113,5],[92,6,115,4,"clearAllLogs"],[92,18,115,16,"clearAllLogs"],[92,19,115,16],[92,21,115,25],[93,8,116,6,"LogBoxData"],[93,18,116,16],[93,19,116,17,"clear"],[93,24,116,22],[93,25,116,23],[93,26,116,24],[94,6,117,4],[94,7,117,5],[95,6,119,4,"addLog"],[95,12,119,10,"addLog"],[95,13,119,11,"log"],[95,16,119,23],[95,18,119,31],[96,8,120,6],[96,12,120,10,"isLogBoxInstalled"],[96,29,120,27],[96,31,120,29],[97,10,121,8,"LogBoxData"],[97,20,121,18],[97,21,121,19,"addLog"],[97,27,121,25],[97,28,121,26,"log"],[97,31,121,29],[97,32,121,30],[98,8,122,6],[99,6,123,4],[99,7,123,5],[100,6,125,4,"addException"],[100,18,125,16,"addException"],[100,19,125,17,"error"],[100,24,125,45],[100,26,125,53],[101,8,126,6],[101,12,126,10,"isLogBoxInstalled"],[101,29,126,27],[101,31,126,29],[102,10,127,8,"LogBoxData"],[102,20,127,18],[102,21,127,19,"addException"],[102,33,127,31],[102,34,127,32,"error"],[102,39,127,37],[102,40,127,38],[103,8,128,6],[104,6,129,4],[105,4,130,2],[105,5,130,3],[106,4,132,2],[106,8,132,8,"isRCTLogAdviceWarning"],[106,29,132,29],[106,32,132,32],[106,41,132,32,"isRCTLogAdviceWarning"],[106,42,132,32],[106,44,132,59],[107,6,132,59],[107,15,132,59,"_len"],[107,19,132,59],[107,22,132,59,"arguments"],[107,31,132,59],[107,32,132,59,"length"],[107,38,132,59],[107,40,132,36,"args"],[107,44,132,40],[107,51,132,40,"Array"],[107,56,132,40],[107,57,132,40,"_len"],[107,61,132,40],[107,64,132,40,"_key"],[107,68,132,40],[107,74,132,40,"_key"],[107,78,132,40],[107,81,132,40,"_len"],[107,85,132,40],[107,87,132,40,"_key"],[107,91,132,40],[108,8,132,36,"args"],[108,12,132,40],[108,13,132,40,"_key"],[108,17,132,40],[108,21,132,40,"arguments"],[108,30,132,40],[108,31,132,40,"_key"],[108,35,132,40],[109,6,132,40],[110,6,133,4],[111,6,134,4],[112,6,135,4],[112,13,135,11],[112,20,135,18,"args"],[112,24,135,22],[112,25,135,23],[112,26,135,24],[112,27,135,25],[112,32,135,30],[112,40,135,38],[112,44,135,42,"args"],[112,48,135,46],[112,49,135,47],[112,50,135,48],[112,51,135,49],[112,52,135,50,"startsWith"],[112,62,135,60],[112,63,135,61],[112,73,135,71],[112,74,135,72],[113,4,136,2],[113,5,136,3],[114,4,138,2],[114,8,138,8,"isWarningModuleWarning"],[114,30,138,30],[114,33,138,33],[114,42,138,33,"isWarningModuleWarning"],[114,43,138,33],[114,45,138,60],[115,6,138,60],[115,15,138,60,"_len2"],[115,20,138,60],[115,23,138,60,"arguments"],[115,32,138,60],[115,33,138,60,"length"],[115,39,138,60],[115,41,138,37,"args"],[115,45,138,41],[115,52,138,41,"Array"],[115,57,138,41],[115,58,138,41,"_len2"],[115,63,138,41],[115,66,138,41,"_key2"],[115,71,138,41],[115,77,138,41,"_key2"],[115,82,138,41],[115,85,138,41,"_len2"],[115,90,138,41],[115,92,138,41,"_key2"],[115,97,138,41],[116,8,138,37,"args"],[116,12,138,41],[116,13,138,41,"_key2"],[116,18,138,41],[116,22,138,41,"arguments"],[116,31,138,41],[116,32,138,41,"_key2"],[116,37,138,41],[117,6,138,41],[118,6,139,4],[118,13,139,11],[118,20,139,18,"args"],[118,24,139,22],[118,25,139,23],[118,26,139,24],[118,27,139,25],[118,32,139,30],[118,40,139,38],[118,44,139,42,"args"],[118,48,139,46],[118,49,139,47],[118,50,139,48],[118,51,139,49],[118,52,139,50,"startsWith"],[118,62,139,60],[118,63,139,61],[118,74,139,72],[118,75,139,73],[119,4,140,2],[119,5,140,3],[120,4,142,2],[120,8,142,8,"registerWarning"],[120,23,142,23],[120,26,142,26],[120,35,142,26,"registerWarning"],[120,36,142,26],[120,38,142,59],[121,6,142,59],[121,15,142,59,"_len3"],[121,20,142,59],[121,23,142,59,"arguments"],[121,32,142,59],[121,33,142,59,"length"],[121,39,142,59],[121,41,142,30,"args"],[121,45,142,34],[121,52,142,34,"Array"],[121,57,142,34],[121,58,142,34,"_len3"],[121,63,142,34],[121,66,142,34,"_key3"],[121,71,142,34],[121,77,142,34,"_key3"],[121,82,142,34],[121,85,142,34,"_len3"],[121,90,142,34],[121,92,142,34,"_key3"],[121,97,142,34],[122,8,142,30,"args"],[122,12,142,34],[122,13,142,34,"_key3"],[122,18,142,34],[122,22,142,34,"arguments"],[122,31,142,34],[122,32,142,34,"_key3"],[122,37,142,34],[123,6,142,34],[124,6,143,4],[125,6,144,4],[125,10,144,8,"LogBoxData"],[125,20,144,18],[125,21,144,19,"isLogBoxErrorMessage"],[125,41,144,39],[125,42,144,40,"String"],[125,48,144,46],[125,49,144,47,"args"],[125,53,144,51],[125,54,144,52],[125,55,144,53],[125,56,144,54],[125,57,144,55],[125,58,144,56],[125,60,144,58],[126,8,145,6,"originalConsoleError"],[126,28,145,26],[126,29,145,27],[126,32,145,30,"args"],[126,36,145,34],[126,37,145,35],[127,8,146,6],[128,6,147,4],[128,7,147,5],[128,13,147,11],[129,8,148,6],[130,8,149,6,"originalConsoleWarn"],[130,27,149,25],[130,28,149,26],[130,31,149,29,"args"],[130,35,149,33],[130,36,149,34],[131,6,150,4],[132,6,152,4],[132,10,152,8],[133,8,153,6],[133,12,153,10],[133,13,153,11,"isRCTLogAdviceWarning"],[133,34,153,32],[133,35,153,33],[133,38,153,36,"args"],[133,42,153,40],[133,43,153,41],[133,45,153,43],[134,10,154,8],[134,14,154,8,"_parseLogBoxLog"],[134,29,154,8],[134,32,155,10,"parseLogBoxLog"],[134,46,155,24],[134,47,155,25,"args"],[134,51,155,29],[134,52,155,30],[135,12,154,15,"category"],[135,20,154,23],[135,23,154,23,"_parseLogBoxLog"],[135,38,154,23],[135,39,154,15,"category"],[135,47,154,23],[136,12,154,25,"message"],[136,19,154,32],[136,22,154,32,"_parseLogBoxLog"],[136,37,154,32],[136,38,154,25,"message"],[136,45,154,32],[137,12,154,34,"componentStack"],[137,26,154,48],[137,29,154,48,"_parseLogBoxLog"],[137,44,154,48],[137,45,154,34,"componentStack"],[137,59,154,48],[138,12,154,50,"componentStackType"],[138,30,154,68],[138,33,154,68,"_parseLogBoxLog"],[138,48,154,68],[138,49,154,50,"componentStackType"],[138,67,154,68],[139,10,157,8],[139,14,157,12],[139,15,157,13,"LogBoxData"],[139,25,157,23],[139,26,157,24,"isMessageIgnored"],[139,42,157,40],[139,43,157,41,"message"],[139,50,157,48],[139,51,157,49,"content"],[139,58,157,56],[139,59,157,57],[139,61,157,59],[140,12,158,10,"LogBoxData"],[140,22,158,20],[140,23,158,21,"addLog"],[140,29,158,27],[140,30,158,28],[141,14,159,12,"level"],[141,19,159,17],[141,21,159,19],[141,27,159,25],[142,14,160,12,"category"],[142,22,160,20],[143,14,161,12,"message"],[143,21,161,19],[144,14,162,12,"componentStack"],[144,28,162,26],[145,14,163,12,"componentStackType"],[146,12,164,10],[146,13,164,11],[146,14,164,12],[147,10,165,8],[148,8,166,6],[149,6,167,4],[149,7,167,5],[149,8,167,6],[149,15,167,13,"err"],[149,18,167,16],[149,20,167,18],[150,8,168,6,"LogBoxData"],[150,18,168,16],[150,19,168,17,"reportLogBoxError"],[150,36,168,34],[150,37,168,35,"err"],[150,40,168,38],[150,41,168,39],[151,6,169,4],[152,4,170,2],[152,5,170,3],[154,4,172,2],[155,0,173,0],[156,4,174,2],[156,8,174,8,"registerError"],[156,21,174,21],[156,24,174,24],[156,33,174,24,"registerError"],[156,34,174,24],[156,36,174,43],[157,6,174,43],[157,15,174,43,"_len4"],[157,20,174,43],[157,23,174,43,"arguments"],[157,32,174,43],[157,33,174,43,"length"],[157,39,174,43],[157,41,174,28,"args"],[157,45,174,32],[157,52,174,32,"Array"],[157,57,174,32],[157,58,174,32,"_len4"],[157,63,174,32],[157,66,174,32,"_key4"],[157,71,174,32],[157,77,174,32,"_key4"],[157,82,174,32],[157,85,174,32,"_len4"],[157,90,174,32],[157,92,174,32,"_key4"],[157,97,174,32],[158,8,174,28,"args"],[158,12,174,32],[158,13,174,32,"_key4"],[158,18,174,32],[158,22,174,32,"arguments"],[158,31,174,32],[158,32,174,32,"_key4"],[158,37,174,32],[159,6,174,32],[160,6,175,4],[161,6,176,4],[161,10,176,8,"LogBoxData"],[161,20,176,18],[161,21,176,19,"isLogBoxErrorMessage"],[161,41,176,39],[161,42,176,40,"args"],[161,46,176,44],[161,47,176,45],[161,48,176,46],[161,49,176,47],[161,50,176,48],[161,52,176,50],[162,8,177,6,"originalConsoleError"],[162,28,177,26],[162,29,177,27],[162,32,177,30,"args"],[162,36,177,34],[162,37,177,35],[163,8,178,6],[164,6,179,4],[165,6,181,4],[165,10,181,8],[166,8,182,6],[166,12,182,10],[166,13,182,11,"isWarningModuleWarning"],[166,35,182,33],[166,36,182,34],[166,39,182,37,"args"],[166,43,182,41],[166,44,182,42],[166,48,182,46],[166,49,182,47],[166,53,182,47,"hasComponentStack"],[166,87,182,64],[166,89,182,65,"args"],[166,93,182,69],[166,94,182,70],[166,96,182,72],[167,10,183,8],[168,10,184,8],[169,10,185,8],[170,10,186,8],[171,10,187,8],[172,10,188,8],[173,10,189,8],[174,10,190,8],[175,10,191,8],[176,10,192,8],[177,10,193,8],[178,10,194,8],[179,10,195,8],[180,10,196,8],[181,10,197,8],[182,10,198,8,"originalConsoleError"],[182,30,198,28],[182,31,198,29],[182,34,198,32,"args"],[182,38,198,36],[182,39,198,37],[183,10,199,8],[184,8,200,6],[185,8,202,6],[185,12,202,12,"format"],[185,18,202,18],[185,21,202,21,"args"],[185,25,202,25],[185,26,202,26],[185,27,202,27],[185,28,202,28],[185,29,202,29,"replace"],[185,36,202,36],[185,37,202,37],[185,48,202,48],[185,50,202,50],[185,52,202,52],[185,53,202,53],[186,8,203,6],[186,12,203,12,"filterResult"],[186,24,203,24],[186,27,203,27,"LogBoxData"],[186,37,203,37],[186,38,203,38,"checkWarningFilter"],[186,56,203,56],[186,57,203,57,"format"],[186,63,203,63],[186,64,203,64],[187,8,204,6],[187,12,204,10,"level"],[187,17,204,15],[187,20,204,18],[187,27,204,25],[188,8,205,6],[188,12,205,10,"filterResult"],[188,24,205,22],[188,25,205,23,"monitorEvent"],[188,37,205,35],[188,42,205,40],[188,61,205,59],[188,63,205,61],[189,10,206,8],[189,14,206,12,"filterResult"],[189,26,206,24],[189,27,206,25,"suppressCompletely"],[189,45,206,43],[189,47,206,45],[190,12,207,10],[191,10,208,8],[192,10,210,8],[192,14,210,12,"filterResult"],[192,26,210,24],[192,27,210,25,"suppressDialog_LEGACY"],[192,48,210,46],[192,53,210,51],[192,57,210,55],[192,59,210,57],[193,12,211,10,"level"],[193,17,211,15],[193,20,211,18],[193,26,211,24],[194,10,212,8],[194,11,212,9],[194,17,212,15],[194,21,212,19,"filterResult"],[194,33,212,31],[194,34,212,32,"forceDialogImmediately"],[194,56,212,54],[194,61,212,59],[194,65,212,63],[194,67,212,65],[195,12,213,10,"level"],[195,17,213,15],[195,20,213,18],[195,27,213,25],[195,28,213,26],[195,29,213,27],[196,10,214,8],[197,8,215,6],[199,8,217,6],[200,8,218,6],[201,8,219,6],[202,8,220,6,"args"],[202,12,220,10],[202,13,220,11],[202,14,220,12],[202,15,220,13],[202,18,220,16],[202,30,220,28,"filterResult"],[202,42,220,40],[202,43,220,41,"finalFormat"],[202,54,220,52],[202,56,220,54],[203,8,221,6],[203,12,221,6,"_parseLogBoxLog2"],[203,28,221,6],[203,31,222,8,"parseLogBoxLog"],[203,45,222,22],[203,46,222,23,"args"],[203,50,222,27],[203,51,222,28],[204,10,221,13,"category"],[204,18,221,21],[204,21,221,21,"_parseLogBoxLog2"],[204,37,221,21],[204,38,221,13,"category"],[204,46,221,21],[205,10,221,23,"message"],[205,17,221,30],[205,20,221,30,"_parseLogBoxLog2"],[205,36,221,30],[205,37,221,23,"message"],[205,44,221,30],[206,10,221,32,"componentStack"],[206,24,221,46],[206,27,221,46,"_parseLogBoxLog2"],[206,43,221,46],[206,44,221,32,"componentStack"],[206,58,221,46],[207,10,221,48,"componentStackType"],[207,28,221,66],[207,31,221,66,"_parseLogBoxLog2"],[207,47,221,66],[207,48,221,48,"componentStackType"],[207,66,221,66],[209,8,224,6],[210,8,225,6],[211,8,226,6],[211,12,226,12,"interpolated"],[211,24,226,24],[211,27,226,27,"parseInterpolation"],[211,45,226,45],[211,46,226,46,"args"],[211,50,226,50],[211,51,226,51],[212,8,227,6,"originalConsoleError"],[212,28,227,26],[212,29,227,27,"interpolated"],[212,41,227,39],[212,42,227,40,"message"],[212,49,227,47],[212,50,227,48,"content"],[212,57,227,55],[212,58,227,56],[213,8,229,6],[213,12,229,10],[213,13,229,11,"LogBoxData"],[213,23,229,21],[213,24,229,22,"isMessageIgnored"],[213,40,229,38],[213,41,229,39,"message"],[213,48,229,46],[213,49,229,47,"content"],[213,56,229,54],[213,57,229,55],[213,59,229,57],[214,10,230,8,"LogBoxData"],[214,20,230,18],[214,21,230,19,"addLog"],[214,27,230,25],[214,28,230,26],[215,12,231,10,"level"],[215,17,231,15],[216,12,232,10,"category"],[216,20,232,18],[217,12,233,10,"message"],[217,19,233,17],[218,12,234,10,"componentStack"],[218,26,234,24],[219,12,235,10,"componentStackType"],[220,10,236,8],[220,11,236,9],[220,12,236,10],[221,8,237,6],[222,6,238,4],[222,7,238,5],[222,8,238,6],[222,15,238,13,"err"],[222,18,238,16],[222,20,238,18],[223,8,239,6,"LogBoxData"],[223,18,239,16],[223,19,239,17,"reportLogBoxError"],[223,36,239,34],[223,37,239,35,"err"],[223,40,239,38],[223,41,239,39],[224,6,240,4],[225,4,241,2],[225,5,241,3],[226,2,242,0],[226,3,242,1],[226,9,242,7],[227,4,243,2,"LogBox"],[227,10,243,8],[227,13,243,11],[228,6,244,4,"install"],[228,13,244,11,"install"],[228,14,244,11],[228,16,244,20],[229,8,245,6],[230,6,245,6],[230,7,246,5],[231,6,248,4,"uninstall"],[231,15,248,13,"uninstall"],[231,16,248,13],[231,18,248,22],[232,8,249,6],[233,6,249,6],[233,7,250,5],[234,6,252,4,"isInstalled"],[234,17,252,15,"isInstalled"],[234,18,252,15],[234,20,252,27],[235,8,253,6],[235,15,253,13],[235,20,253,18],[236,6,254,4],[236,7,254,5],[237,6,256,4,"ignoreLogs"],[237,16,256,14,"ignoreLogs"],[237,17,256,15,"patterns"],[237,25,256,54],[237,27,256,62],[238,8,257,6],[239,6,257,6],[239,7,258,5],[240,6,260,4,"ignoreAllLogs"],[240,19,260,17,"ignoreAllLogs"],[240,20,260,18,"value"],[240,25,260,34],[240,27,260,42],[241,8,261,6],[242,6,261,6],[242,7,262,5],[243,6,264,4,"clearAllLogs"],[243,18,264,16,"clearAllLogs"],[243,19,264,16],[243,21,264,25],[244,8,265,6],[245,6,265,6],[245,7,266,5],[246,6,268,4,"addLog"],[246,12,268,10,"addLog"],[246,13,268,11,"log"],[246,16,268,23],[246,18,268,31],[247,8,269,6],[248,6,269,6],[248,7,270,5],[249,6,272,4,"addException"],[249,18,272,16,"addException"],[249,19,272,17,"error"],[249,24,272,45],[249,26,272,53],[250,8,273,6],[251,6,273,6],[252,4,275,2],[252,5,275,3],[253,2,276,0],[254,2,276,1],[254,6,276,1,"_default"],[254,14,276,1],[254,17,276,1,"exports"],[254,24,276,1],[254,25,276,1,"default"],[254,32,276,1],[254,35,278,16,"LogBox"],[254,41,278,22],[255,0,278,22],[255,3]],"functionMap":{"names":["<global>","install","console.error","console.warn","RCTLog.setWarningHandler$argument_0","uninstall","isInstalled","ignoreLogs","ignoreAllLogs","clearAllLogs","addLog","addException","isRCTLogAdviceWarning","isWarningModuleWarning","registerWarning","registerError"],"mappings":"AAA;IC+C;wBCmB;SDE;uBEE;SFE;+BGU;OHE;KDC;IKE;KLa;IME;KNE;IOE;KPE;IQE;KRE;ISE;KTE;IUE;KVI;IWE;KXI;gCYG;GZI;iCaE;GbE;0BcE;Gd4B;wBeI;GfmE;ICG;KDE;IKE;KLE;IME;KNE;IOE;KPE;IQE;KRE;ISE;KTE;IUE;KVE;IWE;KXE"}},"type":"js/module"}]}