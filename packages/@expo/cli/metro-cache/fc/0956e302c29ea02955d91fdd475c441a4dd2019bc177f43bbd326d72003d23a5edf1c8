{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":136,"column":0,"index":4143}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../NativeComponent/PlatformBaseViewConfig","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":0,"index":215},"end":{"line":11,"column":79,"index":294}}],"key":"64Cusg31zWKqpkg7TPfGYiDFzd0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = verifyComponentAttributeEquivalence;\n  exports.getConfigWithoutViewProps = getConfigWithoutViewProps;\n  exports.stringifyViewConfig = stringifyViewConfig;\n  var _PlatformBaseViewConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../NativeComponent/PlatformBaseViewConfig\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  var IGNORED_KEYS = ['transform', 'hitSlop'];\n\n  /**\n   * The purpose of this function is to validate that the view config that\n   * native exposes for a given view manager is the same as the view config\n   * that is specified for that view manager in JS.\n   *\n   * In order to improve perf, we want to avoid calling into native to get\n   * the view config when each view manager is used. To do this, we are moving\n   * the configs to JS. In the future we will use these JS based view configs\n   * to codegen the view manager on native to ensure they stay in sync without\n   * this runtime check.\n   *\n   * If this function fails, that likely means a change was made to the native\n   * view manager without updating the JS config as well. Ideally you can make\n   * that direct change to the JS config. If you don't know what the differences\n   * are, the best approach I've found is to create a view that prints\n   * the return value of getNativeComponentAttributes, and then copying that\n   * text and pasting it back into JS:\n   * <Text selectable={true}>{JSON.stringify(getNativeComponentAttributes('RCTView'))}</Text>\n   *\n   * This is meant to be a stopgap until the time comes when we only have a\n   * single source of truth. I wonder if this message will still be here two\n   * years from now...\n   */\n  function verifyComponentAttributeEquivalence(nativeViewConfig, staticViewConfig) {\n    for (var prop of ['validAttributes', 'bubblingEventTypes', 'directEventTypes']) {\n      var diff = Object.keys(lefthandObjectDiff(nativeViewConfig[prop], staticViewConfig[prop]));\n      if (diff.length > 0) {\n        var name = staticViewConfig.uiViewClassName ?? nativeViewConfig.uiViewClassName;\n        console.error(`'${name}' has a view config that does not match native. ` + `'${prop}' is missing: ${diff.join(', ')}`);\n      }\n    }\n  }\n\n  // Return the different key-value pairs of the right object, by iterating through the keys in the left object\n  // Note it won't return a difference where a key is missing in the left but exists the right.\n  function lefthandObjectDiff(leftObj, rightObj) {\n    var differentKeys = {};\n    function compare(leftItem, rightItem, key) {\n      if (typeof leftItem !== typeof rightItem && leftItem != null) {\n        differentKeys[key] = rightItem;\n        return;\n      }\n      if (typeof leftItem === 'object') {\n        var objDiff = lefthandObjectDiff(leftItem, rightItem);\n        if (Object.keys(objDiff).length > 1) {\n          differentKeys[key] = objDiff;\n        }\n        return;\n      }\n      if (leftItem !== rightItem) {\n        differentKeys[key] = rightItem;\n        return;\n      }\n    }\n    for (var key in leftObj) {\n      if (IGNORED_KEYS.includes(key)) {\n        continue;\n      }\n      if (!rightObj) {\n        differentKeys[key] = {};\n      } else if (leftObj.hasOwnProperty(key)) {\n        compare(leftObj[key], rightObj[key], key);\n      }\n    }\n    return differentKeys;\n  }\n  function getConfigWithoutViewProps(viewConfig, propName) {\n    // $FlowFixMe[invalid-computed-prop]\n    if (!viewConfig[propName]) {\n      return {};\n    }\n    return Object.keys(viewConfig[propName])\n    // $FlowFixMe[invalid-computed-prop]\n    .filter(prop => !_PlatformBaseViewConfig.default[propName][prop]).reduce((obj, prop) => {\n      // $FlowFixMe[invalid-computed-prop]\n      obj[prop] = viewConfig[propName][prop];\n      return obj;\n    }, {});\n  }\n  function stringifyViewConfig(viewConfig) {\n    return JSON.stringify(viewConfig, (key, val) => {\n      if (typeof val === 'function') {\n        return `Æ’ ${val.name}`;\n      }\n      return val;\n    }, 2);\n  }\n});","lineCount":109,"map":[[9,2,11,0],[9,6,11,0,"_PlatformBaseViewConfig"],[9,29,11,0],[9,32,11,0,"_interopRequireDefault"],[9,54,11,0],[9,55,11,0,"_$$_REQUIRE"],[9,66,11,0],[9,67,11,0,"_dependencyMap"],[9,81,11,0],[10,2,1,0],[11,0,2,0],[12,0,3,0],[13,0,4,0],[14,0,5,0],[15,0,6,0],[16,0,7,0],[17,0,8,0],[18,0,9,0],[20,2,14,0],[20,6,14,6,"IGNORED_KEYS"],[20,18,14,18],[20,21,14,21],[20,22,14,22],[20,33,14,33],[20,35,14,35],[20,44,14,44],[20,45,14,45],[22,2,16,0],[23,0,17,0],[24,0,18,0],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,0,22,0],[29,0,23,0],[30,0,24,0],[31,0,25,0],[32,0,26,0],[33,0,27,0],[34,0,28,0],[35,0,29,0],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,0,33,0],[40,0,34,0],[41,0,35,0],[42,0,36,0],[43,0,37,0],[44,0,38,0],[45,2,39,15],[45,11,39,24,"verifyComponentAttributeEquivalence"],[45,46,39,59,"verifyComponentAttributeEquivalence"],[45,47,40,2,"nativeViewConfig"],[45,63,40,30],[45,65,41,2,"staticViewConfig"],[45,81,41,30],[45,83,42,2],[46,4,43,2],[46,9,43,7],[46,13,43,13,"prop"],[46,17,43,17],[46,21,43,21],[46,22,44,4],[46,39,44,21],[46,41,45,4],[46,61,45,24],[46,63,46,4],[46,81,46,22],[46,82,47,3],[46,84,47,5],[47,6,48,4],[47,10,48,10,"diff"],[47,14,48,14],[47,17,48,17,"Object"],[47,23,48,23],[47,24,48,24,"keys"],[47,28,48,28],[47,29,49,6,"lefthandObjectDiff"],[47,47,49,24],[47,48,49,25,"nativeViewConfig"],[47,64,49,41],[47,65,49,42,"prop"],[47,69,49,46],[47,70,49,47],[47,72,49,49,"staticViewConfig"],[47,88,49,65],[47,89,49,66,"prop"],[47,93,49,70],[47,94,49,71],[47,95,50,4],[47,96,50,5],[48,6,52,4],[48,10,52,8,"diff"],[48,14,52,12],[48,15,52,13,"length"],[48,21,52,19],[48,24,52,22],[48,25,52,23],[48,27,52,25],[49,8,53,6],[49,12,53,12,"name"],[49,16,53,16],[49,19,54,8,"staticViewConfig"],[49,35,54,24],[49,36,54,25,"uiViewClassName"],[49,51,54,40],[49,55,54,44,"nativeViewConfig"],[49,71,54,60],[49,72,54,61,"uiViewClassName"],[49,87,54,76],[50,8,55,6,"console"],[50,15,55,13],[50,16,55,14,"error"],[50,21,55,19],[50,22,56,8],[50,26,56,12,"name"],[50,30,56,16],[50,80,56,66],[50,83,57,10],[50,87,57,14,"prop"],[50,91,57,18],[50,108,57,35,"diff"],[50,112,57,39],[50,113,57,40,"join"],[50,117,57,44],[50,118,57,45],[50,122,57,49],[50,123,57,50],[50,125,58,6],[50,126,58,7],[51,6,59,4],[52,4,60,2],[53,2,61,0],[55,2,63,0],[56,2,64,0],[57,2,65,0],[57,11,65,9,"lefthandObjectDiff"],[57,29,65,27,"lefthandObjectDiff"],[57,30,65,28,"leftObj"],[57,37,65,43],[57,39,65,45,"rightObj"],[57,47,65,61],[57,49,65,71],[58,4,66,2],[58,8,66,8,"differentKeys"],[58,21,66,46],[58,24,66,49],[58,25,66,50],[58,26,66,51],[59,4,68,2],[59,13,68,11,"compare"],[59,20,68,18,"compare"],[59,21,68,19,"leftItem"],[59,29,68,32],[59,31,68,34,"rightItem"],[59,40,68,48],[59,42,68,50,"key"],[59,45,68,61],[59,47,68,63],[60,6,69,4],[60,10,69,8],[60,17,69,15,"leftItem"],[60,25,69,23],[60,30,69,28],[60,37,69,35,"rightItem"],[60,46,69,44],[60,50,69,48,"leftItem"],[60,58,69,56],[60,62,69,60],[60,66,69,64],[60,68,69,66],[61,8,70,6,"differentKeys"],[61,21,70,19],[61,22,70,20,"key"],[61,25,70,23],[61,26,70,24],[61,29,70,27,"rightItem"],[61,38,70,36],[62,8,71,6],[63,6,72,4],[64,6,74,4],[64,10,74,8],[64,17,74,15,"leftItem"],[64,25,74,23],[64,30,74,28],[64,38,74,36],[64,40,74,38],[65,8,75,6],[65,12,75,12,"objDiff"],[65,19,75,19],[65,22,75,22,"lefthandObjectDiff"],[65,40,75,40],[65,41,75,41,"leftItem"],[65,49,75,49],[65,51,75,51,"rightItem"],[65,60,75,60],[65,61,75,61],[66,8,76,6],[66,12,76,10,"Object"],[66,18,76,16],[66,19,76,17,"keys"],[66,23,76,21],[66,24,76,22,"objDiff"],[66,31,76,29],[66,32,76,30],[66,33,76,31,"length"],[66,39,76,37],[66,42,76,40],[66,43,76,41],[66,45,76,43],[67,10,77,8,"differentKeys"],[67,23,77,21],[67,24,77,22,"key"],[67,27,77,25],[67,28,77,26],[67,31,77,29,"objDiff"],[67,38,77,36],[68,8,78,6],[69,8,79,6],[70,6,80,4],[71,6,82,4],[71,10,82,8,"leftItem"],[71,18,82,16],[71,23,82,21,"rightItem"],[71,32,82,30],[71,34,82,32],[72,8,83,6,"differentKeys"],[72,21,83,19],[72,22,83,20,"key"],[72,25,83,23],[72,26,83,24],[72,29,83,27,"rightItem"],[72,38,83,36],[73,8,84,6],[74,6,85,4],[75,4,86,2],[76,4,88,2],[76,9,88,7],[76,13,88,13,"key"],[76,16,88,16],[76,20,88,20,"leftObj"],[76,27,88,27],[76,29,88,29],[77,6,89,4],[77,10,89,8,"IGNORED_KEYS"],[77,22,89,20],[77,23,89,21,"includes"],[77,31,89,29],[77,32,89,30,"key"],[77,35,89,33],[77,36,89,34],[77,38,89,36],[78,8,90,6],[79,6,91,4],[80,6,93,4],[80,10,93,8],[80,11,93,9,"rightObj"],[80,19,93,17],[80,21,93,19],[81,8,94,6,"differentKeys"],[81,21,94,19],[81,22,94,20,"key"],[81,25,94,23],[81,26,94,24],[81,29,94,27],[81,30,94,28],[81,31,94,29],[82,6,95,4],[82,7,95,5],[82,13,95,11],[82,17,95,15,"leftObj"],[82,24,95,22],[82,25,95,23,"hasOwnProperty"],[82,39,95,37],[82,40,95,38,"key"],[82,43,95,41],[82,44,95,42],[82,46,95,44],[83,8,96,6,"compare"],[83,15,96,13],[83,16,96,14,"leftObj"],[83,23,96,21],[83,24,96,22,"key"],[83,27,96,25],[83,28,96,26],[83,30,96,28,"rightObj"],[83,38,96,36],[83,39,96,37,"key"],[83,42,96,40],[83,43,96,41],[83,45,96,43,"key"],[83,48,96,46],[83,49,96,47],[84,6,97,4],[85,4,98,2],[86,4,100,2],[86,11,100,9,"differentKeys"],[86,24,100,22],[87,2,101,0],[88,2,103,7],[88,11,103,16,"getConfigWithoutViewProps"],[88,36,103,41,"getConfigWithoutViewProps"],[88,37,104,2,"viewConfig"],[88,47,104,24],[88,49,105,2,"propName"],[88,57,105,18],[88,59,106,9],[89,4,107,2],[90,4,108,2],[90,8,108,6],[90,9,108,7,"viewConfig"],[90,19,108,17],[90,20,108,18,"propName"],[90,28,108,26],[90,29,108,27],[90,31,108,29],[91,6,109,4],[91,13,109,11],[91,14,109,12],[91,15,109,13],[92,4,110,2],[93,4,112,2],[93,11,113,4,"Object"],[93,17,113,10],[93,18,113,11,"keys"],[93,22,113,15],[93,23,113,16,"viewConfig"],[93,33,113,26],[93,34,113,27,"propName"],[93,42,113,35],[93,43,113,36],[94,4,114,6],[95,4,114,6],[95,5,115,7,"filter"],[95,11,115,13],[95,12,115,14,"prop"],[95,16,115,18],[95,20,115,22],[95,21,115,23,"PlatformBaseViewConfig"],[95,52,115,45],[95,53,115,46,"propName"],[95,61,115,54],[95,62,115,55],[95,63,115,56,"prop"],[95,67,115,60],[95,68,115,61],[95,69,115,62],[95,70,116,7,"reduce"],[95,76,116,13],[95,77,116,31],[95,78,116,32,"obj"],[95,81,116,35],[95,83,116,37,"prop"],[95,87,116,41],[95,92,116,46],[96,6,117,8],[97,6,118,8,"obj"],[97,9,118,11],[97,10,118,12,"prop"],[97,14,118,16],[97,15,118,17],[97,18,118,20,"viewConfig"],[97,28,118,30],[97,29,118,31,"propName"],[97,37,118,39],[97,38,118,40],[97,39,118,41,"prop"],[97,43,118,45],[97,44,118,46],[98,6,119,8],[98,13,119,15,"obj"],[98,16,119,18],[99,4,120,6],[99,5,120,7],[99,7,120,9],[99,8,120,10],[99,9,120,11],[99,10,120,12],[100,2,122,0],[101,2,124,7],[101,11,124,16,"stringifyViewConfig"],[101,30,124,35,"stringifyViewConfig"],[101,31,124,36,"viewConfig"],[101,41,124,51],[101,43,124,61],[102,4,125,2],[102,11,125,9,"JSON"],[102,15,125,13],[102,16,125,14,"stringify"],[102,25,125,23],[102,26,126,4,"viewConfig"],[102,36,126,14],[102,38,127,4],[102,39,127,5,"key"],[102,42,127,8],[102,44,127,10,"val"],[102,47,127,13],[102,52,127,18],[103,6,128,6],[103,10,128,10],[103,17,128,17,"val"],[103,20,128,20],[103,25,128,25],[103,35,128,35],[103,37,128,37],[104,8,129,8],[104,15,129,15],[104,20,129,20,"val"],[104,23,129,23],[104,24,129,24,"name"],[104,28,129,28],[104,30,129,30],[105,6,130,6],[106,6,131,6],[106,13,131,13,"val"],[106,16,131,16],[107,4,132,4],[107,5,132,5],[107,7,133,4],[107,8,134,2],[107,9,134,3],[108,2,135,0],[109,0,135,1],[109,3]],"functionMap":{"names":["<global>","verifyComponentAttributeEquivalence","lefthandObjectDiff","compare","getConfigWithoutViewProps","Object.keys.filter$argument_0","Object.keys.filter.reduce$argument_0","stringifyViewConfig","JSON.stringify$argument_1"],"mappings":"AAA;eCsC;CDsB;AEI;ECG;GDkB;CFe;OIE;cCY,+CD;+BEC;OFI;CJE;OOE;ICG;KDK;CPG"}},"type":"js/module"}]}