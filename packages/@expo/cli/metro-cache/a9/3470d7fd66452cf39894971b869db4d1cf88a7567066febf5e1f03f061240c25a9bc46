{"dependencies":[{"name":"./useRouteCache","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":57},"end":{"line":3,"column":46,"index":103}}],"key":"0x2Ri1pmPX140KCPHftfgCdnnso="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getFocusedRouteNameFromRoute;\n  var _useRouteCache = _$$_REQUIRE(_dependencyMap[0], \"./useRouteCache\");\n  function getFocusedRouteNameFromRoute(route) {\n    // @ts-expect-error: this isn't in type definitions coz we want this private\n    var state = route[_useRouteCache.CHILD_STATE] ?? route.state;\n    var params = route.params;\n    var routeName = state ?\n    // Get the currently active route name in the nested navigator\n    state.routes[\n    // If we have a partial state without index, for tab/drawer, first screen will be focused one, and last for stack\n    // The type property will only exist for rehydrated state and not for state from deep link\n    state.index ?? (typeof state.type === 'string' && state.type !== 'stack' ? 0 : state.routes.length - 1)].name :\n    // If state doesn't exist, we need to default to `screen` param if available\n    typeof params?.screen === 'string' ? params.screen : undefined;\n    return routeName;\n  }\n});","lineCount":21,"map":[[6,2,3,0],[6,6,3,0,"_useRouteCache"],[6,20,3,0],[6,23,3,0,"_$$_REQUIRE"],[6,34,3,0],[6,35,3,0,"_dependencyMap"],[6,49,3,0],[7,2,5,15],[7,11,5,24,"getFocusedRouteNameFromRoute"],[7,39,5,52,"getFocusedRouteNameFromRoute"],[7,40,6,2,"route"],[7,45,6,31],[7,47,7,22],[8,4,8,2],[9,4,9,2],[9,8,9,8,"state"],[9,13,9,13],[9,16,9,16,"route"],[9,21,9,21],[9,22,9,22,"CHILD_STATE"],[9,48,9,33],[9,49,9,34],[9,53,9,38,"route"],[9,58,9,43],[9,59,9,44,"state"],[9,64,9,49],[10,4,10,2],[10,8,10,8,"params"],[10,14,10,14],[10,17,10,17,"route"],[10,22,10,22],[10,23,10,23,"params"],[10,29,10,65],[11,4,12,2],[11,8,12,8,"routeName"],[11,17,12,17],[11,20,12,20,"state"],[11,25,12,25],[12,4,13,6],[13,4,14,6,"state"],[13,9,14,11],[13,10,14,12,"routes"],[13,16,14,18],[14,4,15,8],[15,4,16,8],[16,4,17,8,"state"],[16,9,17,13],[16,10,17,14,"index"],[16,15,17,19],[16,20,18,11],[16,27,18,18,"state"],[16,32,18,23],[16,33,18,24,"type"],[16,37,18,28],[16,42,18,33],[16,50,18,41],[16,54,18,45,"state"],[16,59,18,50],[16,60,18,51,"type"],[16,64,18,55],[16,69,18,60],[16,76,18,67],[16,79,19,14],[16,80,19,15],[16,83,20,14,"state"],[16,88,20,19],[16,89,20,20,"routes"],[16,95,20,26],[16,96,20,27,"length"],[16,102,20,33],[16,105,20,36],[16,106,20,37],[16,107,20,38],[16,108,21,7],[16,109,21,8,"name"],[16,113,21,12],[17,4,22,6],[18,4,23,4],[18,11,23,11,"params"],[18,17,23,17],[18,19,23,19,"screen"],[18,25,23,25],[18,30,23,30],[18,38,23,38],[18,41,24,6,"params"],[18,47,24,12],[18,48,24,13,"screen"],[18,54,24,19],[18,57,25,6,"undefined"],[18,66,25,15],[19,4,27,2],[19,11,27,9,"routeName"],[19,20,27,18],[20,2,28,0],[21,0,28,1],[21,3]],"functionMap":{"names":["<global>","getFocusedRouteNameFromRoute"],"mappings":"AAA;eCI;CDuB"}},"type":"js/module"}]}