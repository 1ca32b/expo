{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":145,"column":35,"index":5482}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":145,"column":35,"index":5482}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":145,"column":35,"index":5482}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"expo-modules-core","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"ka0FS6s7ZmvhJq+hEjGkLLrGpyo="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":44,"index":101}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":102},"end":{"line":3,"column":40,"index":142}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"./ExpoLinking","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":143},"end":{"line":4,"column":40,"index":183}}],"key":"Q/TzOlBhJVtrv/XbIiHWWK+pLZI="}},{"name":"./RNLinking","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":184},"end":{"line":5,"column":36,"index":220}}],"key":"1KUkPIcFa85OjAhVhCdNZh4Nydg="}},{"name":"./createURL","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":0,"index":221},"end":{"line":6,"column":36,"index":257}}],"key":"Fi95/z9GovtJ8u8+l0uE9qQYPY0="}},{"name":"./validateURL","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":0,"index":258},"end":{"line":7,"column":44,"index":302}}],"key":"0OogaN0OjtoBA3d2s2FHYltE/DE="}},{"name":"./Linking.types","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":142,"column":0,"index":5339},"end":{"line":142,"column":32,"index":5371}}],"key":"oGoEMrTVMAThl1VrLCENZoUvKmI="}},{"name":"./Schemes","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":143,"column":0,"index":5372},"end":{"line":143,"column":26,"index":5398}}],"key":"ltqh7VdNpPXQEPaAyY5r/6hYa+Y="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    addEventListener: true,\n    parseInitialURLAsync: true,\n    sendIntent: true,\n    openSettings: true,\n    getInitialURL: true,\n    getLinkingURL: true,\n    openURL: true,\n    canOpenURL: true,\n    useURL: true,\n    useLinkingURL: true,\n    parse: true,\n    createURL: true\n  };\n  exports.addEventListener = addEventListener;\n  exports.canOpenURL = canOpenURL;\n  Object.defineProperty(exports, \"createURL\", {\n    enumerable: true,\n    get: function () {\n      return _createURL.createURL;\n    }\n  });\n  exports.getInitialURL = getInitialURL;\n  exports.getLinkingURL = getLinkingURL;\n  exports.openSettings = openSettings;\n  exports.openURL = openURL;\n  Object.defineProperty(exports, \"parse\", {\n    enumerable: true,\n    get: function () {\n      return _createURL.parse;\n    }\n  });\n  exports.parseInitialURLAsync = parseInitialURLAsync;\n  exports.sendIntent = sendIntent;\n  exports.useLinkingURL = useLinkingURL;\n  exports.useURL = useURL;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _expoModulesCore = _$$_REQUIRE(_dependencyMap[3], \"expo-modules-core\");\n  var _react = _$$_REQUIRE(_dependencyMap[4], \"react\");\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n  var _ExpoLinking = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./ExpoLinking\"));\n  var _RNLinking = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./RNLinking\"));\n  var _createURL = _$$_REQUIRE(_dependencyMap[8], \"./createURL\");\n  var _validateURL = _$$_REQUIRE(_dependencyMap[9], \"./validateURL\");\n  var _Linking = _$$_REQUIRE(_dependencyMap[10], \"./Linking.types\");\n  Object.keys(_Linking).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _Linking[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return _Linking[key];\n      }\n    });\n  });\n  var _Schemes = _$$_REQUIRE(_dependencyMap[11], \"./Schemes\");\n  Object.keys(_Schemes).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _Schemes[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return _Schemes[key];\n      }\n    });\n  });\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // @needsAudit\n  /**\n   * Add a handler to `Linking` changes by listening to the `url` event type and providing the handler.\n   * It is recommended to use the [`useURL()`](#useurl) hook instead.\n   * @param type The only valid type is `'url'`.\n   * @param handler An [`URLListener`](#urllistener) function that takes an `event` object of the type\n   * [`EventType`](#eventype).\n   * @return An EmitterSubscription that has the remove method from EventSubscription\n   * @see [React Native documentation on Linking](https://reactnative.dev/docs/linking#addeventlistener).\n   */\n  function addEventListener(type, handler) {\n    return _RNLinking.default.addEventListener(type, handler);\n  }\n  // @needsAudit\n  /**\n   * Helper method which wraps React Native's `Linking.getInitialURL()` in `Linking.parse()`.\n   * Parses the deep link information out of the URL used to open the experience initially.\n   * If no link opened the app, all the fields will be `null`.\n   * > On the web it parses the current window URL.\n   * @return A promise that resolves with `ParsedURL` object.\n   */\n  function parseInitialURLAsync() {\n    return _parseInitialURLAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Launch an Android intent with extras.\n   * > Use [`expo-intent-launcher`](./intent-launcher) instead. `sendIntent` is only included in\n   * > `Linking` for API compatibility with React Native's Linking API.\n   * @platform android\n   */\n  function _parseInitialURLAsync() {\n    _parseInitialURLAsync = (0, _asyncToGenerator2.default)(function* () {\n      var initialUrl = yield _RNLinking.default.getInitialURL();\n      if (!initialUrl) {\n        return {\n          scheme: null,\n          hostname: null,\n          path: null,\n          queryParams: null\n        };\n      }\n      return (0, _createURL.parse)(initialUrl);\n    });\n    return _parseInitialURLAsync.apply(this, arguments);\n  }\n  function sendIntent(_x, _x2) {\n    return _sendIntent.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Open the operating system settings app and displays the appâ€™s custom settings, if it has any.\n   */\n  function _sendIntent() {\n    _sendIntent = (0, _asyncToGenerator2.default)(function* (action, extras) {\n      if (_reactNative.Platform.OS === 'android') {\n        return yield _RNLinking.default.sendIntent(action, extras);\n      }\n      throw new _expoModulesCore.UnavailabilityError('Linking', 'sendIntent');\n    });\n    return _sendIntent.apply(this, arguments);\n  }\n  function openSettings() {\n    return _openSettings.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Get the URL that was used to launch the app if it was launched by a link.\n   * @return The URL string that launched your app, or `null`.\n   */\n  function _openSettings() {\n    _openSettings = (0, _asyncToGenerator2.default)(function* () {\n      if (_reactNative.Platform.OS === 'web') {\n        throw new _expoModulesCore.UnavailabilityError('Linking', 'openSettings');\n      }\n      if (_RNLinking.default.openSettings) {\n        return yield _RNLinking.default.openSettings();\n      }\n      yield openURL('app-settings:');\n    });\n    return _openSettings.apply(this, arguments);\n  }\n  function getInitialURL() {\n    return _getInitialURL.apply(this, arguments);\n  }\n  /**\n   * Get the URL that was used to launch the app if it was launched by a link.\n   * @return The URL string that launched your app, or `null`.\n   */\n  function _getInitialURL() {\n    _getInitialURL = (0, _asyncToGenerator2.default)(function* () {\n      return (yield _RNLinking.default.getInitialURL()) ?? null;\n    });\n    return _getInitialURL.apply(this, arguments);\n  }\n  function getLinkingURL() {\n    return _ExpoLinking.default.getLinkingURL();\n  }\n  // @needsAudit\n  /**\n   * Attempt to open the given URL with an installed app. See the [Linking guide](/guides/linking)\n   * for more information.\n   * @param url A URL for the operating system to open. For example: `tel:5555555`, `exp://`.\n   * @return A `Promise` that is fulfilled with `true` if the link is opened operating system\n   * automatically or the user confirms the prompt to open the link. The `Promise` rejects if there\n   * are no applications registered for the URL or the user cancels the dialog.\n   */\n  function openURL(_x3) {\n    return _openURL.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Determine whether or not an installed app can handle a given URL.\n   * On web this always returns `true` because there is no API for detecting what URLs can be opened.\n   * @param url The URL that you want to test can be opened.\n   * @return A `Promise` object that is fulfilled with `true` if the URL can be handled, otherwise it\n   * `false` if not.\n   * The `Promise` will reject on Android if it was impossible to check if the URL can be opened, and\n   * on iOS if you didn't [add the specific scheme in the `LSApplicationQueriesSchemes` key inside **Info.plist**](/guides/linking#linking-from-your-app).\n   */\n  function _openURL() {\n    _openURL = (0, _asyncToGenerator2.default)(function* (url) {\n      (0, _validateURL.validateURL)(url);\n      return yield _RNLinking.default.openURL(url);\n    });\n    return _openURL.apply(this, arguments);\n  }\n  function canOpenURL(_x4) {\n    return _canOpenURL.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Returns the initial URL followed by any subsequent changes to the URL.\n   * @return Returns the initial URL or `null`.\n   */\n  function _canOpenURL() {\n    _canOpenURL = (0, _asyncToGenerator2.default)(function* (url) {\n      (0, _validateURL.validateURL)(url);\n      return yield _RNLinking.default.canOpenURL(url);\n    });\n    return _canOpenURL.apply(this, arguments);\n  }\n  function useURL() {\n    _s();\n    var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      url = _useState2[0],\n      setLink = _useState2[1];\n    function onChange(event) {\n      setLink(event.url);\n    }\n    (0, _react.useEffect)(() => {\n      getInitialURL().then(url => setLink(url));\n      var subscription = addEventListener('url', onChange);\n      return () => subscription.remove();\n    }, []);\n    return url;\n  }\n  /**\n   * Returns the linking URL followed by any subsequent changes to the URL.\n   * Always returns the initial URL immediately on reload.\n   * @return Returns the initial URL or `null`.\n   */\n  _s(useURL, \"t89IsIyOJgPVDSyV9d/b1Zh9HGI=\");\n  function useLinkingURL() {\n    _s2();\n    var _useState3 = (0, _react.useState)(_ExpoLinking.default.getLinkingURL),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      url = _useState4[0],\n      setLink = _useState4[1];\n    function onChange(event) {\n      setLink(event.url);\n    }\n    (0, _react.useEffect)(() => {\n      var subscription = _ExpoLinking.default.addListener('onURLReceived', onChange);\n      return () => subscription.remove();\n    }, []);\n    return url ?? null;\n  }\n  _s2(useLinkingURL, \"NUb80Y2VHMmhP4OmCLfiQoo4MaM=\");\n});","lineCount":252,"map":[[44,2,1,0],[44,6,1,0,"_expoModulesCore"],[44,22,1,0],[44,25,1,0,"_$$_REQUIRE"],[44,36,1,0],[44,37,1,0,"_dependencyMap"],[44,51,1,0],[45,2,2,0],[45,6,2,0,"_react"],[45,12,2,0],[45,15,2,0,"_$$_REQUIRE"],[45,26,2,0],[45,27,2,0,"_dependencyMap"],[45,41,2,0],[46,2,3,0],[46,6,3,0,"_reactNative"],[46,18,3,0],[46,21,3,0,"_$$_REQUIRE"],[46,32,3,0],[46,33,3,0,"_dependencyMap"],[46,47,3,0],[47,2,4,0],[47,6,4,0,"_ExpoLinking"],[47,18,4,0],[47,21,4,0,"_interopRequireDefault"],[47,43,4,0],[47,44,4,0,"_$$_REQUIRE"],[47,55,4,0],[47,56,4,0,"_dependencyMap"],[47,70,4,0],[48,2,5,0],[48,6,5,0,"_RNLinking"],[48,16,5,0],[48,19,5,0,"_interopRequireDefault"],[48,41,5,0],[48,42,5,0,"_$$_REQUIRE"],[48,53,5,0],[48,54,5,0,"_dependencyMap"],[48,68,5,0],[49,2,6,0],[49,6,6,0,"_createURL"],[49,16,6,0],[49,19,6,0,"_$$_REQUIRE"],[49,30,6,0],[49,31,6,0,"_dependencyMap"],[49,45,6,0],[50,2,7,0],[50,6,7,0,"_validateURL"],[50,18,7,0],[50,21,7,0,"_$$_REQUIRE"],[50,32,7,0],[50,33,7,0,"_dependencyMap"],[50,47,7,0],[51,2,142,0],[51,6,142,0,"_Linking"],[51,14,142,0],[51,17,142,0,"_$$_REQUIRE"],[51,28,142,0],[51,29,142,0,"_dependencyMap"],[51,43,142,0],[52,2,142,0,"Object"],[52,8,142,0],[52,9,142,0,"keys"],[52,13,142,0],[52,14,142,0,"_Linking"],[52,22,142,0],[52,24,142,0,"forEach"],[52,31,142,0],[52,42,142,0,"key"],[52,45,142,0],[53,4,142,0],[53,8,142,0,"key"],[53,11,142,0],[53,29,142,0,"key"],[53,32,142,0],[54,4,142,0],[54,8,142,0,"Object"],[54,14,142,0],[54,15,142,0,"prototype"],[54,24,142,0],[54,25,142,0,"hasOwnProperty"],[54,39,142,0],[54,40,142,0,"call"],[54,44,142,0],[54,45,142,0,"_exportNames"],[54,57,142,0],[54,59,142,0,"key"],[54,62,142,0],[55,4,142,0],[55,8,142,0,"key"],[55,11,142,0],[55,15,142,0,"exports"],[55,22,142,0],[55,26,142,0,"exports"],[55,33,142,0],[55,34,142,0,"key"],[55,37,142,0],[55,43,142,0,"_Linking"],[55,51,142,0],[55,52,142,0,"key"],[55,55,142,0],[56,4,142,0,"Object"],[56,10,142,0],[56,11,142,0,"defineProperty"],[56,25,142,0],[56,26,142,0,"exports"],[56,33,142,0],[56,35,142,0,"key"],[56,38,142,0],[57,6,142,0,"enumerable"],[57,16,142,0],[58,6,142,0,"get"],[58,9,142,0],[58,20,142,0,"get"],[58,21,142,0],[59,8,142,0],[59,15,142,0,"_Linking"],[59,23,142,0],[59,24,142,0,"key"],[59,27,142,0],[60,6,142,0],[61,4,142,0],[62,2,142,0],[63,2,143,0],[63,6,143,0,"_Schemes"],[63,14,143,0],[63,17,143,0,"_$$_REQUIRE"],[63,28,143,0],[63,29,143,0,"_dependencyMap"],[63,43,143,0],[64,2,143,0,"Object"],[64,8,143,0],[64,9,143,0,"keys"],[64,13,143,0],[64,14,143,0,"_Schemes"],[64,22,143,0],[64,24,143,0,"forEach"],[64,31,143,0],[64,42,143,0,"key"],[64,45,143,0],[65,4,143,0],[65,8,143,0,"key"],[65,11,143,0],[65,29,143,0,"key"],[65,32,143,0],[66,4,143,0],[66,8,143,0,"Object"],[66,14,143,0],[66,15,143,0,"prototype"],[66,24,143,0],[66,25,143,0,"hasOwnProperty"],[66,39,143,0],[66,40,143,0,"call"],[66,44,143,0],[66,45,143,0,"_exportNames"],[66,57,143,0],[66,59,143,0,"key"],[66,62,143,0],[67,4,143,0],[67,8,143,0,"key"],[67,11,143,0],[67,15,143,0,"exports"],[67,22,143,0],[67,26,143,0,"exports"],[67,33,143,0],[67,34,143,0,"key"],[67,37,143,0],[67,43,143,0,"_Schemes"],[67,51,143,0],[67,52,143,0,"key"],[67,55,143,0],[68,4,143,0,"Object"],[68,10,143,0],[68,11,143,0,"defineProperty"],[68,25,143,0],[68,26,143,0,"exports"],[68,33,143,0],[68,35,143,0,"key"],[68,38,143,0],[69,6,143,0,"enumerable"],[69,16,143,0],[70,6,143,0,"get"],[70,9,143,0],[70,20,143,0,"get"],[70,21,143,0],[71,8,143,0],[71,15,143,0,"_Schemes"],[71,23,143,0],[71,24,143,0,"key"],[71,27,143,0],[72,6,143,0],[73,4,143,0],[74,2,143,0],[75,2,143,26],[75,6,143,26,"_s"],[75,8,143,26],[75,11,143,26,"$RefreshSig$"],[75,23,143,26],[76,4,143,26,"_s2"],[76,7,143,26],[76,10,143,26,"$RefreshSig$"],[76,22,143,26],[77,2,8,0],[78,2,9,0],[79,0,10,0],[80,0,11,0],[81,0,12,0],[82,0,13,0],[83,0,14,0],[84,0,15,0],[85,0,16,0],[86,0,17,0],[87,2,18,7],[87,11,18,16,"addEventListener"],[87,27,18,32,"addEventListener"],[87,28,18,33,"type"],[87,32,18,37],[87,34,18,39,"handler"],[87,41,18,46],[87,43,18,48],[88,4,19,4],[88,11,19,11,"RNLinking"],[88,29,19,20],[88,30,19,21,"addEventListener"],[88,46,19,37],[88,47,19,38,"type"],[88,51,19,42],[88,53,19,44,"handler"],[88,60,19,51],[88,61,19,52],[89,2,20,0],[90,2,21,0],[91,2,22,0],[92,0,23,0],[93,0,24,0],[94,0,25,0],[95,0,26,0],[96,0,27,0],[97,0,28,0],[98,2,22,0],[98,11,29,22,"parseInitialURLAsync"],[98,31,29,42,"parseInitialURLAsync"],[98,32,29,42],[99,4,29,42],[99,11,29,42,"_parseInitialURLAsync"],[99,32,29,42],[99,33,29,42,"apply"],[99,38,29,42],[99,45,29,42,"arguments"],[99,54,29,42],[100,2,29,42],[100,4,41,0],[101,2,42,0],[102,0,43,0],[103,0,44,0],[104,0,45,0],[105,0,46,0],[106,0,47,0],[107,2,42,0],[107,11,42,0,"_parseInitialURLAsync"],[107,33,42,0],[108,4,42,0,"_parseInitialURLAsync"],[108,25,42,0],[108,32,42,0,"_asyncToGenerator2"],[108,50,42,0],[108,51,42,0,"default"],[108,58,42,0],[108,60,29,7],[108,73,29,45],[109,6,30,4],[109,10,30,10,"initialUrl"],[109,20,30,20],[109,29,30,29,"RNLinking"],[109,47,30,38],[109,48,30,39,"getInitialURL"],[109,61,30,52],[109,62,30,53],[109,63,30,54],[110,6,31,4],[110,10,31,8],[110,11,31,9,"initialUrl"],[110,21,31,19],[110,23,31,21],[111,8,32,8],[111,15,32,15],[112,10,33,12,"scheme"],[112,16,33,18],[112,18,33,20],[112,22,33,24],[113,10,34,12,"hostname"],[113,18,34,20],[113,20,34,22],[113,24,34,26],[114,10,35,12,"path"],[114,14,35,16],[114,16,35,18],[114,20,35,22],[115,10,36,12,"queryParams"],[115,21,36,23],[115,23,36,25],[116,8,37,8],[116,9,37,9],[117,6,38,4],[118,6,39,4],[118,13,39,11],[118,17,39,11,"parse"],[118,33,39,16],[118,35,39,17,"initialUrl"],[118,45,39,27],[118,46,39,28],[119,4,40,0],[119,5,40,1],[120,4,40,1],[120,11,40,1,"_parseInitialURLAsync"],[120,32,40,1],[120,33,40,1,"apply"],[120,38,40,1],[120,45,40,1,"arguments"],[120,54,40,1],[121,2,40,1],[122,2,40,1],[122,11,48,22,"sendIntent"],[122,21,48,32,"sendIntent"],[122,22,48,32,"_x"],[122,24,48,32],[122,26,48,32,"_x2"],[122,29,48,32],[123,4,48,32],[123,11,48,32,"_sendIntent"],[123,22,48,32],[123,23,48,32,"apply"],[123,28,48,32],[123,35,48,32,"arguments"],[123,44,48,32],[124,2,48,32],[124,4,54,0],[125,2,55,0],[126,0,56,0],[127,0,57,0],[128,2,55,0],[128,11,55,0,"_sendIntent"],[128,23,55,0],[129,4,55,0,"_sendIntent"],[129,15,55,0],[129,22,55,0,"_asyncToGenerator2"],[129,40,55,0],[129,41,55,0,"default"],[129,48,55,0],[129,50,48,7],[129,61,48,33,"action"],[129,67,48,39],[129,69,48,41,"extras"],[129,75,48,47],[129,77,48,49],[130,6,49,4],[130,10,49,8,"Platform"],[130,31,49,16],[130,32,49,17,"OS"],[130,34,49,19],[130,39,49,24],[130,48,49,33],[130,50,49,35],[131,8,50,8],[131,21,50,21,"RNLinking"],[131,39,50,30],[131,40,50,31,"sendIntent"],[131,50,50,41],[131,51,50,42,"action"],[131,57,50,48],[131,59,50,50,"extras"],[131,65,50,56],[131,66,50,57],[132,6,51,4],[133,6,52,4],[133,12,52,10],[133,16,52,14,"UnavailabilityError"],[133,52,52,33],[133,53,52,34],[133,62,52,43],[133,64,52,45],[133,76,52,57],[133,77,52,58],[134,4,53,0],[134,5,53,1],[135,4,53,1],[135,11,53,1,"_sendIntent"],[135,22,53,1],[135,23,53,1,"apply"],[135,28,53,1],[135,35,53,1,"arguments"],[135,44,53,1],[136,2,53,1],[137,2,53,1],[137,11,58,22,"openSettings"],[137,23,58,34,"openSettings"],[137,24,58,34],[138,4,58,34],[138,11,58,34,"_openSettings"],[138,24,58,34],[138,25,58,34,"apply"],[138,30,58,34],[138,37,58,34,"arguments"],[138,46,58,34],[139,2,58,34],[139,4,67,0],[140,2,68,0],[141,0,69,0],[142,0,70,0],[143,0,71,0],[144,2,68,0],[144,11,68,0,"_openSettings"],[144,25,68,0],[145,4,68,0,"_openSettings"],[145,17,68,0],[145,24,68,0,"_asyncToGenerator2"],[145,42,68,0],[145,43,68,0,"default"],[145,50,68,0],[145,52,58,7],[145,65,58,37],[146,6,59,4],[146,10,59,8,"Platform"],[146,31,59,16],[146,32,59,17,"OS"],[146,34,59,19],[146,39,59,24],[146,44,59,29],[146,46,59,31],[147,8,60,8],[147,14,60,14],[147,18,60,18,"UnavailabilityError"],[147,54,60,37],[147,55,60,38],[147,64,60,47],[147,66,60,49],[147,80,60,63],[147,81,60,64],[148,6,61,4],[149,6,62,4],[149,10,62,8,"RNLinking"],[149,28,62,17],[149,29,62,18,"openSettings"],[149,41,62,30],[149,43,62,32],[150,8,63,8],[150,21,63,21,"RNLinking"],[150,39,63,30],[150,40,63,31,"openSettings"],[150,52,63,43],[150,53,63,44],[150,54,63,45],[151,6,64,4],[152,6,65,4],[152,12,65,10,"openURL"],[152,19,65,17],[152,20,65,18],[152,35,65,33],[152,36,65,34],[153,4,66,0],[153,5,66,1],[154,4,66,1],[154,11,66,1,"_openSettings"],[154,24,66,1],[154,25,66,1,"apply"],[154,30,66,1],[154,37,66,1,"arguments"],[154,46,66,1],[155,2,66,1],[156,2,66,1],[156,11,72,22,"getInitialURL"],[156,24,72,35,"getInitialURL"],[156,25,72,35],[157,4,72,35],[157,11,72,35,"_getInitialURL"],[157,25,72,35],[157,26,72,35,"apply"],[157,31,72,35],[157,38,72,35,"arguments"],[157,47,72,35],[158,2,72,35],[159,2,75,0],[160,0,76,0],[161,0,77,0],[162,0,78,0],[163,2,75,0],[163,11,75,0,"_getInitialURL"],[163,26,75,0],[164,4,75,0,"_getInitialURL"],[164,18,75,0],[164,25,75,0,"_asyncToGenerator2"],[164,43,75,0],[164,44,75,0,"default"],[164,51,75,0],[164,53,72,7],[164,66,72,38],[165,6,73,4],[165,13,73,11],[165,20,73,18,"RNLinking"],[165,38,73,27],[165,39,73,28,"getInitialURL"],[165,52,73,41],[165,53,73,42],[165,54,73,43],[165,59,73,48],[165,63,73,52],[166,4,74,0],[166,5,74,1],[167,4,74,1],[167,11,74,1,"_getInitialURL"],[167,25,74,1],[167,26,74,1,"apply"],[167,31,74,1],[167,38,74,1,"arguments"],[167,47,74,1],[168,2,74,1],[169,2,79,7],[169,11,79,16,"getLinkingURL"],[169,24,79,29,"getLinkingURL"],[169,25,79,29],[169,27,79,32],[170,4,80,4],[170,11,80,11,"ExpoLinking"],[170,31,80,22],[170,32,80,23,"getLinkingURL"],[170,45,80,36],[170,46,80,37],[170,47,80,38],[171,2,81,0],[172,2,82,0],[173,2,83,0],[174,0,84,0],[175,0,85,0],[176,0,86,0],[177,0,87,0],[178,0,88,0],[179,0,89,0],[180,0,90,0],[181,2,83,0],[181,11,91,22,"openURL"],[181,18,91,29,"openURL"],[181,19,91,29,"_x3"],[181,22,91,29],[182,4,91,29],[182,11,91,29,"_openURL"],[182,19,91,29],[182,20,91,29,"apply"],[182,25,91,29],[182,32,91,29,"arguments"],[182,41,91,29],[183,2,91,29],[183,4,95,0],[184,2,96,0],[185,0,97,0],[186,0,98,0],[187,0,99,0],[188,0,100,0],[189,0,101,0],[190,0,102,0],[191,0,103,0],[192,0,104,0],[193,2,96,0],[193,11,96,0,"_openURL"],[193,20,96,0],[194,4,96,0,"_openURL"],[194,12,96,0],[194,19,96,0,"_asyncToGenerator2"],[194,37,96,0],[194,38,96,0,"default"],[194,45,96,0],[194,47,91,7],[194,58,91,30,"url"],[194,61,91,33],[194,63,91,35],[195,6,92,4],[195,10,92,4,"validateURL"],[195,34,92,15],[195,36,92,16,"url"],[195,39,92,19],[195,40,92,20],[196,6,93,4],[196,19,93,17,"RNLinking"],[196,37,93,26],[196,38,93,27,"openURL"],[196,45,93,34],[196,46,93,35,"url"],[196,49,93,38],[196,50,93,39],[197,4,94,0],[197,5,94,1],[198,4,94,1],[198,11,94,1,"_openURL"],[198,19,94,1],[198,20,94,1,"apply"],[198,25,94,1],[198,32,94,1,"arguments"],[198,41,94,1],[199,2,94,1],[200,2,94,1],[200,11,105,22,"canOpenURL"],[200,21,105,32,"canOpenURL"],[200,22,105,32,"_x4"],[200,25,105,32],[201,4,105,32],[201,11,105,32,"_canOpenURL"],[201,22,105,32],[201,23,105,32,"apply"],[201,28,105,32],[201,35,105,32,"arguments"],[201,44,105,32],[202,2,105,32],[202,4,109,0],[203,2,110,0],[204,0,111,0],[205,0,112,0],[206,0,113,0],[207,2,110,0],[207,11,110,0,"_canOpenURL"],[207,23,110,0],[208,4,110,0,"_canOpenURL"],[208,15,110,0],[208,22,110,0,"_asyncToGenerator2"],[208,40,110,0],[208,41,110,0,"default"],[208,48,110,0],[208,50,105,7],[208,61,105,33,"url"],[208,64,105,36],[208,66,105,38],[209,6,106,4],[209,10,106,4,"validateURL"],[209,34,106,15],[209,36,106,16,"url"],[209,39,106,19],[209,40,106,20],[210,6,107,4],[210,19,107,17,"RNLinking"],[210,37,107,26],[210,38,107,27,"canOpenURL"],[210,48,107,37],[210,49,107,38,"url"],[210,52,107,41],[210,53,107,42],[211,4,108,0],[211,5,108,1],[212,4,108,1],[212,11,108,1,"_canOpenURL"],[212,22,108,1],[212,23,108,1,"apply"],[212,28,108,1],[212,35,108,1,"arguments"],[212,44,108,1],[213,2,108,1],[214,2,114,7],[214,11,114,16,"useURL"],[214,17,114,22,"useURL"],[214,18,114,22],[214,20,114,25],[215,4,114,25,"_s"],[215,6,114,25],[216,4,115,4],[216,8,115,4,"_useState"],[216,17,115,4],[216,20,115,27],[216,24,115,27,"useState"],[216,39,115,35],[216,41,115,36],[216,45,115,40],[216,46,115,41],[217,6,115,41,"_useState2"],[217,16,115,41],[217,23,115,41,"_slicedToArray2"],[217,38,115,41],[217,39,115,41,"default"],[217,46,115,41],[217,48,115,41,"_useState"],[217,57,115,41],[218,6,115,11,"url"],[218,9,115,14],[218,12,115,14,"_useState2"],[218,22,115,14],[219,6,115,16,"setLink"],[219,13,115,23],[219,16,115,23,"_useState2"],[219,26,115,23],[220,4,116,4],[220,13,116,13,"onChange"],[220,21,116,21,"onChange"],[220,22,116,22,"event"],[220,27,116,27],[220,29,116,29],[221,6,117,8,"setLink"],[221,13,117,15],[221,14,117,16,"event"],[221,19,117,21],[221,20,117,22,"url"],[221,23,117,25],[221,24,117,26],[222,4,118,4],[223,4,119,4],[223,8,119,4,"useEffect"],[223,24,119,13],[223,26,119,14],[223,32,119,20],[224,6,120,8,"getInitialURL"],[224,19,120,21],[224,20,120,22],[224,21,120,23],[224,22,120,24,"then"],[224,26,120,28],[224,27,120,30,"url"],[224,30,120,33],[224,34,120,38,"setLink"],[224,41,120,45],[224,42,120,46,"url"],[224,45,120,49],[224,46,120,50],[224,47,120,51],[225,6,121,8],[225,10,121,14,"subscription"],[225,22,121,26],[225,25,121,29,"addEventListener"],[225,41,121,45],[225,42,121,46],[225,47,121,51],[225,49,121,53,"onChange"],[225,57,121,61],[225,58,121,62],[226,6,122,8],[226,13,122,15],[226,19,122,21,"subscription"],[226,31,122,33],[226,32,122,34,"remove"],[226,38,122,40],[226,39,122,41],[226,40,122,42],[227,4,123,4],[227,5,123,5],[227,7,123,7],[227,9,123,9],[227,10,123,10],[228,4,124,4],[228,11,124,11,"url"],[228,14,124,14],[229,2,125,0],[230,2,126,0],[231,0,127,0],[232,0,128,0],[233,0,129,0],[234,0,130,0],[235,2,126,0,"_s"],[235,4,126,0],[235,5,114,16,"useURL"],[235,11,114,22],[236,2,131,7],[236,11,131,16,"useLinkingURL"],[236,24,131,29,"useLinkingURL"],[236,25,131,29],[236,27,131,32],[237,4,131,32,"_s2"],[237,7,131,32],[238,4,132,4],[238,8,132,4,"_useState3"],[238,18,132,4],[238,21,132,27],[238,25,132,27,"useState"],[238,40,132,35],[238,42,132,36,"ExpoLinking"],[238,62,132,47],[238,63,132,48,"getLinkingURL"],[238,76,132,61],[238,77,132,62],[239,6,132,62,"_useState4"],[239,16,132,62],[239,23,132,62,"_slicedToArray2"],[239,38,132,62],[239,39,132,62,"default"],[239,46,132,62],[239,48,132,62,"_useState3"],[239,58,132,62],[240,6,132,11,"url"],[240,9,132,14],[240,12,132,14,"_useState4"],[240,22,132,14],[241,6,132,16,"setLink"],[241,13,132,23],[241,16,132,23,"_useState4"],[241,26,132,23],[242,4,133,4],[242,13,133,13,"onChange"],[242,21,133,21,"onChange"],[242,22,133,22,"event"],[242,27,133,27],[242,29,133,29],[243,6,134,8,"setLink"],[243,13,134,15],[243,14,134,16,"event"],[243,19,134,21],[243,20,134,22,"url"],[243,23,134,25],[243,24,134,26],[244,4,135,4],[245,4,136,4],[245,8,136,4,"useEffect"],[245,24,136,13],[245,26,136,14],[245,32,136,20],[246,6,137,8],[246,10,137,14,"subscription"],[246,22,137,26],[246,25,137,29,"ExpoLinking"],[246,45,137,40],[246,46,137,41,"addListener"],[246,57,137,52],[246,58,137,53],[246,73,137,68],[246,75,137,70,"onChange"],[246,83,137,78],[246,84,137,79],[247,6,138,8],[247,13,138,15],[247,19,138,21,"subscription"],[247,31,138,33],[247,32,138,34,"remove"],[247,38,138,40],[247,39,138,41],[247,40,138,42],[248,4,139,4],[248,5,139,5],[248,7,139,7],[248,9,139,9],[248,10,139,10],[249,4,140,4],[249,11,140,11,"url"],[249,14,140,14],[249,18,140,18],[249,22,140,22],[250,2,141,0],[251,2,141,1,"_s2"],[251,5,141,1],[251,6,131,16,"useLinkingURL"],[251,19,131,29],[252,0,131,29],[252,3]],"functionMap":{"names":["<global>","addEventListener","parseInitialURLAsync","sendIntent","openSettings","getInitialURL","getLinkingURL","openURL","canOpenURL","useURL","onChange","useEffect$argument_0","getInitialURL.then$argument_0","<anonymous>","useLinkingURL"],"mappings":"AAA;OCiB;CDE;OES;CFW;OGQ;CHK;OIK;CJQ;OKM;CLE;OMK;CNE;OOU;CPG;OQW;CRG;OSM;ICE;KDE;cEC;6BCC,qBD;eEE,2BF;KFC;CTE;OcM;IJE;KIE;cHC;eEE,2BF;KGC;CdE"}},"type":"js/module"}]}