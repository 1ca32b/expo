{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1738,"column":0,"index":49316}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1738,"column":0,"index":49316}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1738,"column":0,"index":49316}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"../../Pressability/usePressability","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":20,"column":0,"index":508},"end":{"line":20,"column":65,"index":573}}],"key":"8sknIYuMeQussHe8K4bG4Mrv+fY="}},{"name":"../../StyleSheet/flattenStyle","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":21,"column":0,"index":574},"end":{"line":21,"column":57,"index":631}}],"key":"g+sqej+kEmJ8JPA0E/+1AP6zIz0="}},{"name":"../../StyleSheet/StyleSheet","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":22,"column":0,"index":632},"end":{"line":26,"column":37,"index":753}}],"key":"8T7QAUV0eNWHjP7T5GM/rp2jyUM="}},{"name":"../../Text/Text","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":27,"column":0,"index":754},"end":{"line":27,"column":35,"index":789}}],"key":"o6+4JG6aRTkaznUOsv3oFDPa4t0="}},{"name":"../../Text/TextAncestor","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":28,"column":0,"index":790},"end":{"line":28,"column":51,"index":841}}],"key":"nN+Mxb49FJB9p6SkiBlgCRiq+K0="}},{"name":"../../Utilities/Platform","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":29,"column":0,"index":842},"end":{"line":29,"column":48,"index":890}}],"key":"u8HkMskTipFtyna6raQCNa0ZU48="}},{"name":"../../Utilities/useMergeRefs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":30,"column":0,"index":891},"end":{"line":30,"column":56,"index":947}}],"key":"c/QQVhxNH5PZowSfvwPFRHxK/ak="}},{"name":"./TextInputState","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":31,"column":0,"index":948},"end":{"line":31,"column":46,"index":994}}],"key":"GlU9M4KNJcd1nPVrGoJ4X0kybYA="}},{"name":"invariant","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":32,"column":0,"index":995},"end":{"line":32,"column":34,"index":1029}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"nullthrows","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":33,"column":0,"index":1030},"end":{"line":33,"column":36,"index":1066}}],"key":"3yYZ/IFwZXE7GnlKPSAzr74cRoo="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":34,"column":0,"index":1067},"end":{"line":34,"column":31,"index":1098}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1738,"column":0,"index":49316}}],"key":"o13xJBIQrtUiTCNVAdR54EGZcWw="}},{"name":"./AndroidTextInputNativeComponent","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":53,"column":21,"index":1745},"end":{"line":53,"column":65,"index":1789}},{"start":{"line":55,"column":4,"index":1832},"end":{"line":55,"column":48,"index":1876}}],"key":"mY63ThbZxS7IbBVDsNq0h9Tyt8Q="}},{"name":"./RCTSingelineTextInputNativeComponent","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":58,"column":4,"index":1958},"end":{"line":58,"column":53,"index":2007}},{"start":{"line":60,"column":4,"index":2062},"end":{"line":60,"column":53,"index":2111}}],"key":"vlFPMyV0tg3xGAJnJ26LH3n7uKU="}},{"name":"./RCTMultilineTextInputNativeComponent","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":62,"column":4,"index":2156},"end":{"line":62,"column":53,"index":2205}},{"start":{"line":64,"column":4,"index":2259},"end":{"line":64,"column":53,"index":2308}}],"key":"dVy8ay5uPfLolr6wqgDT2nwKJbk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _usePressability = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../../Pressability/usePressability\"));\n  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../../StyleSheet/flattenStyle\"));\n  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../../StyleSheet/StyleSheet\"));\n  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../../Text/Text\"));\n  var _TextAncestor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../../Text/TextAncestor\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../../Utilities/Platform\"));\n  var _useMergeRefs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"../../Utilities/useMergeRefs\"));\n  var _TextInputState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./TextInputState\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"invariant\"));\n  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"nullthrows\"));\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[13], \"react\"));\n  var React = _react;\n  var _jsxDevRuntime = _$$_REQUIRE(_dependencyMap[14], \"react/jsx-dev-runtime\");\n  var _excluded = [\"aria-busy\", \"aria-checked\", \"aria-disabled\", \"aria-expanded\", \"aria-selected\", \"accessibilityState\", \"id\", \"tabIndex\", \"selection\", \"selectionColor\", \"selectionHandleColor\", \"cursorColor\"],\n    _excluded2 = [\"onBlur\", \"onFocus\"],\n    _excluded3 = [\"allowFontScaling\", \"rejectResponderTermination\", \"underlineColorAndroid\", \"autoComplete\", \"textContentType\", \"readOnly\", \"editable\", \"enterKeyHint\", \"returnKeyType\", \"inputMode\", \"showSoftInputOnFocus\", \"keyboardType\"];\n  var _jsxFileName = \"/Users/evanbacon/Documents/GitHub/expo/node_modules/react-native/Libraries/Components/TextInput/TextInput.js\";\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var AndroidTextInput;\n  var AndroidTextInputCommands;\n  var RCTSinglelineTextInputView;\n  var RCTSinglelineTextInputNativeCommands;\n  var RCTMultilineTextInputView;\n  var RCTMultilineTextInputNativeCommands;\n  if (_Platform.default.OS === 'android') {\n    AndroidTextInput = _$$_REQUIRE(_dependencyMap[15], \"./AndroidTextInputNativeComponent\").default;\n    AndroidTextInputCommands = _$$_REQUIRE(_dependencyMap[15], \"./AndroidTextInputNativeComponent\").Commands;\n  } else if (_Platform.default.OS === 'ios') {\n    RCTSinglelineTextInputView = _$$_REQUIRE(_dependencyMap[16], \"./RCTSingelineTextInputNativeComponent\").default;\n    RCTSinglelineTextInputNativeCommands = _$$_REQUIRE(_dependencyMap[16], \"./RCTSingelineTextInputNativeComponent\").Commands;\n    RCTMultilineTextInputView = _$$_REQUIRE(_dependencyMap[17], \"./RCTMultilineTextInputNativeComponent\").default;\n    RCTMultilineTextInputNativeCommands = _$$_REQUIRE(_dependencyMap[17], \"./RCTMultilineTextInputNativeComponent\").Commands;\n  }\n  var emptyFunctionThatReturnsTrue = () => true;\n\n  /**\n   * A foundational component for inputting text into the app via a\n   * keyboard. Props provide configurability for several features, such as\n   * auto-correction, auto-capitalization, placeholder text, and different keyboard\n   * types, such as a numeric keypad.\n   *\n   * The simplest use case is to plop down a `TextInput` and subscribe to the\n   * `onChangeText` events to read the user input. There are also other events,\n   * such as `onSubmitEditing` and `onFocus` that can be subscribed to. A simple\n   * example:\n   *\n   * ```ReactNativeWebPlayer\n   * import React, { Component } from 'react';\n   * import { AppRegistry, TextInput } from 'react-native';\n   *\n   * export default class UselessTextInput extends Component {\n   *   constructor(props) {\n   *     super(props);\n   *     this.state = { text: 'Useless Placeholder' };\n   *   }\n   *\n   *   render() {\n   *     return (\n   *       <TextInput\n   *         style={{height: 40, borderColor: 'gray', borderWidth: 1}}\n   *         onChangeText={(text) => this.setState({text})}\n   *         value={this.state.text}\n   *       />\n   *     );\n   *   }\n   * }\n   *\n   * // skip this line if using Create React Native App\n   * AppRegistry.registerComponent('AwesomeProject', () => UselessTextInput);\n   * ```\n   *\n   * Two methods exposed via the native element are .focus() and .blur() that\n   * will focus or blur the TextInput programmatically.\n   *\n   * Note that some props are only available with `multiline={true/false}`.\n   * Additionally, border styles that apply to only one side of the element\n   * (e.g., `borderBottomColor`, `borderLeftWidth`, etc.) will not be applied if\n   * `multiline=false`. To achieve the same effect, you can wrap your `TextInput`\n   * in a `View`:\n   *\n   * ```ReactNativeWebPlayer\n   * import React, { Component } from 'react';\n   * import { AppRegistry, View, TextInput } from 'react-native';\n   *\n   * class UselessTextInput extends Component {\n   *   render() {\n   *     return (\n   *       <TextInput\n   *         {...this.props} // Inherit any props passed to it; e.g., multiline, numberOfLines below\n   *         editable={true}\n   *         maxLength={40}\n   *       />\n   *     );\n   *   }\n   * }\n   *\n   * export default class UselessTextInputMultiline extends Component {\n   *   constructor(props) {\n   *     super(props);\n   *     this.state = {\n   *       text: 'Useless Multiline Placeholder',\n   *     };\n   *   }\n   *\n   *   // If you type something in the text box that is a color, the background will change to that\n   *   // color.\n   *   render() {\n   *     return (\n   *      <View style={{\n   *        backgroundColor: this.state.text,\n   *        borderBottomColor: '#000000',\n   *        borderBottomWidth: 1 }}\n   *      >\n   *        <UselessTextInput\n   *          multiline={true}\n   *          numberOfLines={4}\n   *          onChangeText={(text) => this.setState({text})}\n   *          value={this.state.text}\n   *        />\n   *      </View>\n   *     );\n   *   }\n   * }\n   *\n   * // skip these lines if using Create React Native App\n   * AppRegistry.registerComponent(\n   *  'AwesomeProject',\n   *  () => UselessTextInputMultiline\n   * );\n   * ```\n   *\n   * `TextInput` has by default a border at the bottom of its view. This border\n   * has its padding set by the background image provided by the system, and it\n   * cannot be changed. Solutions to avoid this is to either not set height\n   * explicitly, case in which the system will take care of displaying the border\n   * in the correct position, or to not display the border by setting\n   * `underlineColorAndroid` to transparent.\n   *\n   * Note that on Android performing text selection in input can change\n   * app's activity `windowSoftInputMode` param to `adjustResize`.\n   * This may cause issues with components that have position: 'absolute'\n   * while keyboard is active. To avoid this behavior either specify `windowSoftInputMode`\n   * in AndroidManifest.xml ( https://developer.android.com/guide/topics/manifest/activity-element.html )\n   * or control this param programmatically with native code.\n   *\n   */\n  function InternalTextInput(props) {\n    var ariaBusy = props['aria-busy'],\n      ariaChecked = props['aria-checked'],\n      ariaDisabled = props['aria-disabled'],\n      ariaExpanded = props['aria-expanded'],\n      ariaSelected = props['aria-selected'],\n      accessibilityState = props.accessibilityState,\n      id = props.id,\n      tabIndex = props.tabIndex,\n      propsSelection = props.selection,\n      selectionColor = props.selectionColor,\n      selectionHandleColor = props.selectionHandleColor,\n      cursorColor = props.cursorColor,\n      otherProps = (0, _objectWithoutProperties2.default)(props, _excluded);\n    var inputRef = (0, _react.useRef)(null);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var selection = propsSelection == null ? null : {\n      start: propsSelection.start,\n      end: propsSelection.end ?? propsSelection.start\n    };\n    var _useState = (0, _react.useState)(0),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      mostRecentEventCount = _useState2[0],\n      setMostRecentEventCount = _useState2[1];\n    var _useState3 = (0, _react.useState)(props.value),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      lastNativeText = _useState4[0],\n      setLastNativeText = _useState4[1];\n    var _useState5 = (0, _react.useState)({\n        selection: {\n          start: -1,\n          end: -1\n        },\n        mostRecentEventCount: mostRecentEventCount\n      }),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      lastNativeSelectionState = _useState6[0],\n      setLastNativeSelection = _useState6[1];\n    var lastNativeSelection = lastNativeSelectionState.selection;\n    var viewCommands;\n    if (AndroidTextInputCommands) {\n      viewCommands = AndroidTextInputCommands;\n    } else {\n      viewCommands = props.multiline === true ? RCTMultilineTextInputNativeCommands : RCTSinglelineTextInputNativeCommands;\n    }\n    var text = typeof props.value === 'string' ? props.value : typeof props.defaultValue === 'string' ? props.defaultValue : '';\n\n    // This is necessary in case native updates the text and JS decides\n    // that the update should be ignored and we should stick with the value\n    // that we have in JS.\n    (0, _react.useLayoutEffect)(() => {\n      var nativeUpdate = {};\n      if (lastNativeText !== props.value && typeof props.value === 'string') {\n        nativeUpdate.text = props.value;\n        setLastNativeText(props.value);\n      }\n      if (selection && lastNativeSelection && (lastNativeSelection.start !== selection.start || lastNativeSelection.end !== selection.end)) {\n        nativeUpdate.selection = selection;\n        setLastNativeSelection({\n          selection,\n          mostRecentEventCount\n        });\n      }\n      if (Object.keys(nativeUpdate).length === 0) {\n        return;\n      }\n      if (inputRef.current != null) {\n        viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, text, selection?.start ?? -1, selection?.end ?? -1);\n      }\n    }, [mostRecentEventCount, inputRef, props.value, props.defaultValue, lastNativeText, selection, lastNativeSelection, text, viewCommands]);\n    (0, _react.useLayoutEffect)(() => {\n      var inputRefValue = inputRef.current;\n      if (inputRefValue != null) {\n        _TextInputState.default.registerInput(inputRefValue);\n        return () => {\n          _TextInputState.default.unregisterInput(inputRefValue);\n          if (_TextInputState.default.currentlyFocusedInput() === inputRefValue) {\n            (0, _nullthrows.default)(inputRefValue).blur();\n          }\n        };\n      }\n    }, [inputRef]);\n    var setLocalRef = (0, _react.useCallback)(instance => {\n      inputRef.current = instance;\n\n      /*\n      Hi reader from the future. I'm sorry for this.\n       This is a hack. Ideally we would forwardRef to the underlying\n      host component. However, since TextInput has it's own methods that can be\n      called as well, if we used the standard forwardRef then these\n      methods wouldn't be accessible and thus be a breaking change.\n       We have a couple of options of how to handle this:\n      - Return a new ref with everything we methods from both. This is problematic\n        because we need React to also know it is a host component which requires\n        internals of the class implementation of the ref.\n      - Break the API and have some other way to call one set of the methods or\n        the other. This is our long term approach as we want to eventually\n        get the methods on host components off the ref. So instead of calling\n        ref.measure() you might call ReactNative.measure(ref). This would hopefully\n        let the ref for TextInput then have the methods like `.clear`. Or we do it\n        the other way and make it TextInput.clear(textInputRef) which would be fine\n        too. Either way though is a breaking change that is longer term.\n      - Mutate this ref. :( Gross, but accomplishes what we need in the meantime\n        before we can get to the long term breaking change.\n      */\n      if (instance != null) {\n        // $FlowFixMe[incompatible-use] - See the explanation above.\n        Object.assign(instance, {\n          clear() {\n            if (inputRef.current != null) {\n              viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, '', 0, 0);\n            }\n          },\n          // TODO: Fix this returning true on null === null, when no input is focused\n          isFocused() {\n            return _TextInputState.default.currentlyFocusedInput() === inputRef.current;\n          },\n          getNativeRef() {\n            return inputRef.current;\n          },\n          setSelection(start, end) {\n            if (inputRef.current != null) {\n              viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, null, start, end);\n            }\n          }\n        });\n      }\n    }, [mostRecentEventCount, viewCommands]);\n    var ref = (0, _useMergeRefs.default)(setLocalRef, props.forwardedRef);\n    var _onChange = event => {\n      var currentText = event.nativeEvent.text;\n      props.onChange && props.onChange(event);\n      props.onChangeText && props.onChangeText(currentText);\n      if (inputRef.current == null) {\n        // calling `props.onChange` or `props.onChangeText`\n        // may clean up the input itself. Exits here.\n        return;\n      }\n      setLastNativeText(currentText);\n      // This must happen last, after we call setLastNativeText.\n      // Different ordering can cause bugs when editing AndroidTextInputs\n      // with multiple Fragments.\n      // We must update this so that controlled input updates work.\n      setMostRecentEventCount(event.nativeEvent.eventCount);\n    };\n    var _onSelectionChange = event => {\n      props.onSelectionChange && props.onSelectionChange(event);\n      if (inputRef.current == null) {\n        // calling `props.onSelectionChange`\n        // may clean up the input itself. Exits here.\n        return;\n      }\n      setLastNativeSelection({\n        selection: event.nativeEvent.selection,\n        mostRecentEventCount\n      });\n    };\n    var _onFocus = event => {\n      _TextInputState.default.focusInput(inputRef.current);\n      if (props.onFocus) {\n        props.onFocus(event);\n      }\n    };\n    var _onBlur = event => {\n      _TextInputState.default.blurInput(inputRef.current);\n      if (props.onBlur) {\n        props.onBlur(event);\n      }\n    };\n    var _onScroll = event => {\n      props.onScroll && props.onScroll(event);\n    };\n    var textInput = null;\n    var multiline = props.multiline ?? false;\n    var submitBehavior;\n    if (props.submitBehavior != null) {\n      // `submitBehavior` is set explicitly\n      if (!multiline && props.submitBehavior === 'newline') {\n        // For single line text inputs, `'newline'` is not a valid option\n        submitBehavior = 'blurAndSubmit';\n      } else {\n        submitBehavior = props.submitBehavior;\n      }\n    } else if (multiline) {\n      if (props.blurOnSubmit === true) {\n        submitBehavior = 'blurAndSubmit';\n      } else {\n        submitBehavior = 'newline';\n      }\n    } else {\n      // Single line\n      if (props.blurOnSubmit !== false) {\n        submitBehavior = 'blurAndSubmit';\n      } else {\n        submitBehavior = 'submit';\n      }\n    }\n    var accessible = props.accessible !== false;\n    var focusable = props.focusable !== false;\n    var editable = props.editable,\n      hitSlop = props.hitSlop,\n      onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      rejectResponderTermination = props.rejectResponderTermination;\n    var config = React.useMemo(() => ({\n      hitSlop,\n      onPress: event => {\n        onPress?.(event);\n        if (editable !== false) {\n          if (inputRef.current != null) {\n            inputRef.current.focus();\n          }\n        }\n      },\n      onPressIn: onPressIn,\n      onPressOut: onPressOut,\n      cancelable: _Platform.default.OS === 'ios' ? !rejectResponderTermination : null\n    }), [editable, hitSlop, onPress, onPressIn, onPressOut, rejectResponderTermination]);\n\n    // Hide caret during test runs due to a flashing caret\n    // makes screenshot tests flakey\n    var caretHidden = props.caretHidden;\n    if (_Platform.default.isTesting) {\n      caretHidden = true;\n    }\n\n    // TextInput handles onBlur and onFocus events\n    // so omitting onBlur and onFocus pressability handlers here.\n    var _ref = (0, _usePressability.default)(config) || {},\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      eventHandlers = (0, _objectWithoutProperties2.default)(_ref, _excluded2);\n    var _accessibilityState;\n    if (accessibilityState != null || ariaBusy != null || ariaChecked != null || ariaDisabled != null || ariaExpanded != null || ariaSelected != null) {\n      _accessibilityState = {\n        busy: ariaBusy ?? accessibilityState?.busy,\n        checked: ariaChecked ?? accessibilityState?.checked,\n        disabled: ariaDisabled ?? accessibilityState?.disabled,\n        expanded: ariaExpanded ?? accessibilityState?.expanded,\n        selected: ariaSelected ?? accessibilityState?.selected\n      };\n    }\n    var style = (0, _flattenStyle.default)(props.style);\n    if (typeof style?.fontWeight === 'number') {\n      // $FlowFixMe[prop-missing]\n      // $FlowFixMe[cannot-write]\n      style.fontWeight = style?.fontWeight.toString();\n    }\n    if (_Platform.default.OS === 'ios') {\n      var RCTTextInputView = props.multiline === true ? RCTMultilineTextInputView : RCTSinglelineTextInputView;\n      var useMultilineDefaultStyle = props.multiline === true && (style == null || style.padding == null && style.paddingVertical == null && style.paddingTop == null);\n      textInput = /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(RCTTextInputView\n      // $FlowFixMe[incompatible-type] - Figure out imperative + forward refs.\n      , {\n        ref: ref,\n        ...otherProps,\n        ...eventHandlers,\n        accessibilityState: _accessibilityState,\n        accessible: accessible,\n        submitBehavior: submitBehavior,\n        caretHidden: caretHidden,\n        dataDetectorTypes: props.dataDetectorTypes,\n        focusable: tabIndex !== undefined ? !tabIndex : focusable,\n        mostRecentEventCount: mostRecentEventCount,\n        nativeID: id ?? props.nativeID,\n        onBlur: _onBlur,\n        onChange: _onChange,\n        onContentSizeChange: props.onContentSizeChange,\n        onFocus: _onFocus,\n        onScroll: _onScroll,\n        onSelectionChange: _onSelectionChange,\n        onSelectionChangeShouldSetResponder: emptyFunctionThatReturnsTrue,\n        selection: selection,\n        selectionColor: selectionColor,\n        style: _StyleSheet.default.compose(useMultilineDefaultStyle ? styles.multilineDefault : null, style),\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1426,\n        columnNumber: 7\n      }, this);\n    } else if (_Platform.default.OS === 'android') {\n      var autoCapitalize = props.autoCapitalize || 'sentences';\n      var _accessibilityLabelledBy = props?.['aria-labelledby'] ?? props?.accessibilityLabelledBy;\n      var placeholder = props.placeholder ?? '';\n      var children = props.children;\n      var childCount = React.Children.count(children);\n      (0, _invariant.default)(!(props.value != null && childCount), 'Cannot specify both value and children.');\n      if (childCount > 1) {\n        children = /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_Text.default, {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1467,\n          columnNumber: 18\n        }, this);\n      }\n      // For consistency with iOS set cursor/selectionHandle color as selectionColor\n      var colorProps = {\n        selectionColor,\n        selectionHandleColor: selectionHandleColor === undefined ? selectionColor : selectionHandleColor,\n        cursorColor: cursorColor === undefined ? selectionColor : cursorColor\n      };\n      textInput =\n      /*#__PURE__*/\n      /* $FlowFixMe[prop-missing] the types for AndroidTextInput don't match up\n       * exactly with the props for TextInput. This will need to get fixed */\n      /* $FlowFixMe[incompatible-type] the types for AndroidTextInput don't\n       * match up exactly with the props for TextInput. This will need to get\n       * fixed */\n      /* $FlowFixMe[incompatible-type-arg] the types for AndroidTextInput don't\n       * match up exactly with the props for TextInput. This will need to get\n       * fixed */\n      (0, _jsxDevRuntime.jsxDEV)(AndroidTextInput\n      // $FlowFixMe[incompatible-type] - Figure out imperative + forward refs.\n      , {\n        ref: ref,\n        ...otherProps,\n        ...colorProps,\n        ...eventHandlers,\n        accessibilityState: _accessibilityState,\n        accessibilityLabelledBy: _accessibilityLabelledBy,\n        accessible: accessible,\n        autoCapitalize: autoCapitalize,\n        submitBehavior: submitBehavior,\n        caretHidden: caretHidden,\n        children: children,\n        disableFullscreenUI: props.disableFullscreenUI,\n        focusable: tabIndex !== undefined ? !tabIndex : focusable,\n        mostRecentEventCount: mostRecentEventCount,\n        nativeID: id ?? props.nativeID,\n        numberOfLines: props.rows ?? props.numberOfLines,\n        onBlur: _onBlur,\n        onChange: _onChange,\n        onFocus: _onFocus\n        /* $FlowFixMe[prop-missing] the types for AndroidTextInput don't match\n         * up exactly with the props for TextInput. This will need to get fixed\n         */\n        /* $FlowFixMe[incompatible-type-arg] the types for AndroidTextInput\n         * don't match up exactly with the props for TextInput. This will need\n         * to get fixed */,\n        onScroll: _onScroll,\n        onSelectionChange: _onSelectionChange,\n        placeholder: placeholder,\n        style: style,\n        text: text,\n        textBreakStrategy: props.textBreakStrategy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1487,\n        columnNumber: 7\n      }, this);\n    }\n    return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_TextAncestor.default.Provider, {\n      value: true,\n      children: textInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1524,\n      columnNumber: 5\n    }, this);\n  }\n  var enterKeyHintToReturnTypeMap = {\n    enter: 'default',\n    done: 'done',\n    go: 'go',\n    next: 'next',\n    previous: 'previous',\n    search: 'search',\n    send: 'send'\n  };\n  var inputModeToKeyboardTypeMap = {\n    none: 'default',\n    text: 'default',\n    decimal: 'decimal-pad',\n    numeric: 'number-pad',\n    tel: 'phone-pad',\n    search: _Platform.default.OS === 'ios' ? 'web-search' : 'default',\n    email: 'email-address',\n    url: 'url'\n  };\n\n  // Map HTML autocomplete values to Android autoComplete values\n  var autoCompleteWebToAutoCompleteAndroidMap = {\n    'address-line1': 'postal-address-region',\n    'address-line2': 'postal-address-locality',\n    bday: 'birthdate-full',\n    'bday-day': 'birthdate-day',\n    'bday-month': 'birthdate-month',\n    'bday-year': 'birthdate-year',\n    'cc-csc': 'cc-csc',\n    'cc-exp': 'cc-exp',\n    'cc-exp-month': 'cc-exp-month',\n    'cc-exp-year': 'cc-exp-year',\n    'cc-number': 'cc-number',\n    country: 'postal-address-country',\n    'current-password': 'password',\n    email: 'email',\n    'honorific-prefix': 'name-prefix',\n    'honorific-suffix': 'name-suffix',\n    name: 'name',\n    'additional-name': 'name-middle',\n    'family-name': 'name-family',\n    'given-name': 'name-given',\n    'new-password': 'password-new',\n    off: 'off',\n    'one-time-code': 'sms-otp',\n    'postal-code': 'postal-code',\n    sex: 'gender',\n    'street-address': 'street-address',\n    tel: 'tel',\n    'tel-country-code': 'tel-country-code',\n    'tel-national': 'tel-national',\n    username: 'username'\n  };\n\n  // Map HTML autocomplete values to iOS textContentType values\n  var autoCompleteWebToTextContentTypeMap = {\n    'address-line1': 'streetAddressLine1',\n    'address-line2': 'streetAddressLine2',\n    bday: 'birthdate',\n    'bday-day': 'birthdateDay',\n    'bday-month': 'birthdateMonth',\n    'bday-year': 'birthdateYear',\n    'cc-csc': 'creditCardSecurityCode',\n    'cc-exp-month': 'creditCardExpirationMonth',\n    'cc-exp-year': 'creditCardExpirationYear',\n    'cc-exp': 'creditCardExpiration',\n    'cc-given-name': 'creditCardGivenName',\n    'cc-additional-name': 'creditCardMiddleName',\n    'cc-family-name': 'creditCardFamilyName',\n    'cc-name': 'creditCardName',\n    'cc-number': 'creditCardNumber',\n    'cc-type': 'creditCardType',\n    'current-password': 'password',\n    country: 'countryName',\n    email: 'emailAddress',\n    name: 'name',\n    'additional-name': 'middleName',\n    'family-name': 'familyName',\n    'given-name': 'givenName',\n    nickname: 'nickname',\n    'honorific-prefix': 'namePrefix',\n    'honorific-suffix': 'nameSuffix',\n    'new-password': 'newPassword',\n    off: 'none',\n    'one-time-code': 'oneTimeCode',\n    organization: 'organizationName',\n    'organization-title': 'jobTitle',\n    'postal-code': 'postalCode',\n    'street-address': 'fullStreetAddress',\n    tel: 'telephoneNumber',\n    url: 'URL',\n    username: 'username'\n  };\n  var ExportedForwardRef = /*#__PURE__*/React.forwardRef(function TextInput(_ref2, forwardedRef) {\n    var _ref2$allowFontScalin = _ref2.allowFontScaling,\n      allowFontScaling = _ref2$allowFontScalin === void 0 ? true : _ref2$allowFontScalin,\n      _ref2$rejectResponder = _ref2.rejectResponderTermination,\n      rejectResponderTermination = _ref2$rejectResponder === void 0 ? true : _ref2$rejectResponder,\n      _ref2$underlineColorA = _ref2.underlineColorAndroid,\n      underlineColorAndroid = _ref2$underlineColorA === void 0 ? 'transparent' : _ref2$underlineColorA,\n      autoComplete = _ref2.autoComplete,\n      textContentType = _ref2.textContentType,\n      readOnly = _ref2.readOnly,\n      editable = _ref2.editable,\n      enterKeyHint = _ref2.enterKeyHint,\n      returnKeyType = _ref2.returnKeyType,\n      inputMode = _ref2.inputMode,\n      showSoftInputOnFocus = _ref2.showSoftInputOnFocus,\n      keyboardType = _ref2.keyboardType,\n      restProps = (0, _objectWithoutProperties2.default)(_ref2, _excluded3);\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    var style = (0, _flattenStyle.default)(restProps.style);\n    if (style?.verticalAlign != null) {\n      // $FlowFixMe[prop-missing]\n      // $FlowFixMe[cannot-write]\n      style.textAlignVertical =\n      // $FlowFixMe[invalid-computed-prop]\n      verticalAlignToTextAlignVerticalMap[style.verticalAlign];\n      // $FlowFixMe[prop-missing]\n      // $FlowFixMe[cannot-write]\n      delete style.verticalAlign;\n    }\n    return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(InternalTextInput, {\n      allowFontScaling: allowFontScaling,\n      rejectResponderTermination: rejectResponderTermination,\n      underlineColorAndroid: underlineColorAndroid,\n      editable: readOnly !== undefined ? !readOnly : editable,\n      returnKeyType: enterKeyHint ? enterKeyHintToReturnTypeMap[enterKeyHint] : returnKeyType,\n      keyboardType: inputMode ? inputModeToKeyboardTypeMap[inputMode] : keyboardType,\n      showSoftInputOnFocus: inputMode == null ? showSoftInputOnFocus : inputMode !== 'none',\n      autoComplete: _Platform.default.OS === 'android' ?\n      // $FlowFixMe[invalid-computed-prop]\n      // $FlowFixMe[prop-missing]\n      autoCompleteWebToAutoCompleteAndroidMap[autoComplete] ?? autoComplete : undefined,\n      textContentType: textContentType != null ? textContentType : _Platform.default.OS === 'ios' && autoComplete && autoComplete in autoCompleteWebToTextContentTypeMap ?\n      // $FlowFixMe[invalid-computed-prop]\n      // $FlowFixMe[prop-missing]\n      autoCompleteWebToTextContentTypeMap[autoComplete] : textContentType,\n      ...restProps,\n      forwardedRef: forwardedRef,\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1660,\n      columnNumber: 5\n    }, this);\n  });\n  ExportedForwardRef.displayName = 'TextInput';\n\n  // $FlowFixMe[prop-missing]\n  ExportedForwardRef.State = {\n    currentlyFocusedInput: _TextInputState.default.currentlyFocusedInput,\n    currentlyFocusedField: _TextInputState.default.currentlyFocusedField,\n    focusTextInput: _TextInputState.default.focusTextInput,\n    blurTextInput: _TextInputState.default.blurTextInput\n  };\n  var styles = _StyleSheet.default.create({\n    multilineDefault: {\n      // This default top inset makes RCTMultilineTextInputView seem as close as possible\n      // to single-line RCTSinglelineTextInputView defaults, using the system defaults\n      // of font size 17 and a height of 31 points.\n      paddingTop: 5\n    }\n  });\n  var verticalAlignToTextAlignVerticalMap = {\n    auto: 'auto',\n    top: 'top',\n    bottom: 'bottom',\n    middle: 'center'\n  };\n\n  // $FlowFixMe[unclear-type] Unclear type. Using `any` type is not safe.\n  module.exports = ExportedForwardRef;\n});","lineCount":698,"map":[[5,2,20,0],[5,6,20,0,"_usePressability"],[5,22,20,0],[5,25,20,0,"_interopRequireDefault"],[5,47,20,0],[5,48,20,0,"_$$_REQUIRE"],[5,59,20,0],[5,60,20,0,"_dependencyMap"],[5,74,20,0],[6,2,21,0],[6,6,21,0,"_flattenStyle"],[6,19,21,0],[6,22,21,0,"_interopRequireDefault"],[6,44,21,0],[6,45,21,0,"_$$_REQUIRE"],[6,56,21,0],[6,57,21,0,"_dependencyMap"],[6,71,21,0],[7,2,22,0],[7,6,22,0,"_StyleSheet"],[7,17,22,0],[7,20,22,0,"_interopRequireDefault"],[7,42,22,0],[7,43,22,0,"_$$_REQUIRE"],[7,54,22,0],[7,55,22,0,"_dependencyMap"],[7,69,22,0],[8,2,27,0],[8,6,27,0,"_Text"],[8,11,27,0],[8,14,27,0,"_interopRequireDefault"],[8,36,27,0],[8,37,27,0,"_$$_REQUIRE"],[8,48,27,0],[8,49,27,0,"_dependencyMap"],[8,63,27,0],[9,2,28,0],[9,6,28,0,"_TextAncestor"],[9,19,28,0],[9,22,28,0,"_interopRequireDefault"],[9,44,28,0],[9,45,28,0,"_$$_REQUIRE"],[9,56,28,0],[9,57,28,0,"_dependencyMap"],[9,71,28,0],[10,2,29,0],[10,6,29,0,"_Platform"],[10,15,29,0],[10,18,29,0,"_interopRequireDefault"],[10,40,29,0],[10,41,29,0,"_$$_REQUIRE"],[10,52,29,0],[10,53,29,0,"_dependencyMap"],[10,67,29,0],[11,2,30,0],[11,6,30,0,"_useMergeRefs"],[11,19,30,0],[11,22,30,0,"_interopRequireDefault"],[11,44,30,0],[11,45,30,0,"_$$_REQUIRE"],[11,56,30,0],[11,57,30,0,"_dependencyMap"],[11,71,30,0],[12,2,31,0],[12,6,31,0,"_TextInputState"],[12,21,31,0],[12,24,31,0,"_interopRequireDefault"],[12,46,31,0],[12,47,31,0,"_$$_REQUIRE"],[12,58,31,0],[12,59,31,0,"_dependencyMap"],[12,73,31,0],[13,2,32,0],[13,6,32,0,"_invariant"],[13,16,32,0],[13,19,32,0,"_interopRequireDefault"],[13,41,32,0],[13,42,32,0,"_$$_REQUIRE"],[13,53,32,0],[13,54,32,0,"_dependencyMap"],[13,68,32,0],[14,2,33,0],[14,6,33,0,"_nullthrows"],[14,17,33,0],[14,20,33,0,"_interopRequireDefault"],[14,42,33,0],[14,43,33,0,"_$$_REQUIRE"],[14,54,33,0],[14,55,33,0,"_dependencyMap"],[14,69,33,0],[15,2,34,0],[15,6,34,0,"_react"],[15,12,34,0],[15,15,34,0,"_interopRequireWildcard"],[15,38,34,0],[15,39,34,0,"_$$_REQUIRE"],[15,50,34,0],[15,51,34,0,"_dependencyMap"],[15,65,34,0],[16,2,34,31],[16,6,34,31,"React"],[16,11,34,31],[16,14,34,31,"_react"],[16,20,34,31],[17,2,34,31],[17,6,34,31,"_jsxDevRuntime"],[17,20,34,31],[17,23,34,31,"_$$_REQUIRE"],[17,34,34,31],[17,35,34,31,"_dependencyMap"],[17,49,34,31],[18,2,34,31],[18,6,34,31,"_excluded"],[18,15,34,31],[19,4,34,31,"_excluded2"],[19,14,34,31],[20,4,34,31,"_excluded3"],[20,14,34,31],[21,2,34,31],[21,6,34,31,"_jsxFileName"],[21,18,34,31],[22,2,1,0],[23,0,2,0],[24,0,3,0],[25,0,4,0],[26,0,5,0],[27,0,6,0],[28,0,7,0],[29,0,8,0],[30,0,9,0],[31,2,1,0],[31,11,1,0,"_getRequireWildcardCache"],[31,36,1,0,"e"],[31,37,1,0],[31,66,1,0,"WeakMap"],[31,73,1,0],[31,92,1,0,"r"],[31,93,1,0],[31,100,1,0,"WeakMap"],[31,107,1,0],[31,111,1,0,"t"],[31,112,1,0],[31,119,1,0,"WeakMap"],[31,126,1,0],[31,138,1,0,"_getRequireWildcardCache"],[31,162,1,0],[31,174,1,0,"_getRequireWildcardCache"],[31,175,1,0,"e"],[31,176,1,0],[31,187,1,0,"e"],[31,188,1,0],[31,191,1,0,"t"],[31,192,1,0],[31,195,1,0,"r"],[31,196,1,0],[31,201,1,0,"e"],[31,202,1,0],[32,2,1,0],[32,11,1,0,"_interopRequireWildcard"],[32,35,1,0,"e"],[32,36,1,0],[32,38,1,0,"r"],[32,39,1,0],[32,48,1,0,"r"],[32,49,1,0],[32,53,1,0,"e"],[32,54,1,0],[32,58,1,0,"e"],[32,59,1,0],[32,60,1,0,"__esModule"],[32,70,1,0],[32,79,1,0,"e"],[32,80,1,0],[32,95,1,0,"e"],[32,96,1,0],[32,119,1,0,"e"],[32,120,1,0],[32,145,1,0,"e"],[32,146,1,0],[32,157,1,0,"default"],[32,164,1,0],[32,166,1,0,"e"],[32,167,1,0],[32,175,1,0,"t"],[32,176,1,0],[32,179,1,0,"_getRequireWildcardCache"],[32,203,1,0],[32,204,1,0,"r"],[32,205,1,0],[32,212,1,0,"t"],[32,213,1,0],[32,217,1,0,"t"],[32,218,1,0],[32,219,1,0,"has"],[32,222,1,0],[32,223,1,0,"e"],[32,224,1,0],[32,234,1,0,"t"],[32,235,1,0],[32,236,1,0,"get"],[32,239,1,0],[32,240,1,0,"e"],[32,241,1,0],[32,248,1,0,"n"],[32,249,1,0],[32,254,1,0,"__proto__"],[32,263,1,0],[32,273,1,0,"a"],[32,274,1,0],[32,277,1,0,"Object"],[32,283,1,0],[32,284,1,0,"defineProperty"],[32,298,1,0],[32,302,1,0,"Object"],[32,308,1,0],[32,309,1,0,"getOwnPropertyDescriptor"],[32,333,1,0],[32,344,1,0,"u"],[32,345,1,0],[32,349,1,0,"e"],[32,350,1,0],[32,370,1,0,"u"],[32,371,1,0],[32,375,1,0,"Object"],[32,381,1,0],[32,382,1,0,"prototype"],[32,391,1,0],[32,392,1,0,"hasOwnProperty"],[32,406,1,0],[32,407,1,0,"call"],[32,411,1,0],[32,412,1,0,"e"],[32,413,1,0],[32,415,1,0,"u"],[32,416,1,0],[32,425,1,0,"i"],[32,426,1,0],[32,429,1,0,"a"],[32,430,1,0],[32,433,1,0,"Object"],[32,439,1,0],[32,440,1,0,"getOwnPropertyDescriptor"],[32,464,1,0],[32,465,1,0,"e"],[32,466,1,0],[32,468,1,0,"u"],[32,469,1,0],[32,479,1,0,"i"],[32,480,1,0],[32,485,1,0,"i"],[32,486,1,0],[32,487,1,0,"get"],[32,490,1,0],[32,494,1,0,"i"],[32,495,1,0],[32,496,1,0,"set"],[32,499,1,0],[32,503,1,0,"Object"],[32,509,1,0],[32,510,1,0,"defineProperty"],[32,524,1,0],[32,525,1,0,"n"],[32,526,1,0],[32,528,1,0,"u"],[32,529,1,0],[32,531,1,0,"i"],[32,532,1,0],[32,536,1,0,"n"],[32,537,1,0],[32,538,1,0,"u"],[32,539,1,0],[32,543,1,0,"e"],[32,544,1,0],[32,545,1,0,"u"],[32,546,1,0],[32,558,1,0,"n"],[32,559,1,0],[32,560,1,0,"default"],[32,567,1,0],[32,570,1,0,"e"],[32,571,1,0],[32,573,1,0,"t"],[32,574,1,0],[32,578,1,0,"t"],[32,579,1,0],[32,580,1,0,"set"],[32,583,1,0],[32,584,1,0,"e"],[32,585,1,0],[32,587,1,0,"n"],[32,588,1,0],[32,591,1,0,"n"],[32,592,1,0],[33,2,45,0],[33,6,45,4,"AndroidTextInput"],[33,22,45,20],[34,2,46,0],[34,6,46,4,"AndroidTextInputCommands"],[34,30,46,28],[35,2,47,0],[35,6,47,4,"RCTSinglelineTextInputView"],[35,32,47,30],[36,2,48,0],[36,6,48,4,"RCTSinglelineTextInputNativeCommands"],[36,42,48,40],[37,2,49,0],[37,6,49,4,"RCTMultilineTextInputView"],[37,31,49,29],[38,2,50,0],[38,6,50,4,"RCTMultilineTextInputNativeCommands"],[38,41,50,39],[39,2,52,0],[39,6,52,4,"Platform"],[39,23,52,12],[39,24,52,13,"OS"],[39,26,52,15],[39,31,52,20],[39,40,52,29],[39,42,52,31],[40,4,53,2,"AndroidTextInput"],[40,20,53,18],[40,23,53,21,"require"],[40,34,53,28],[40,35,53,28,"_dependencyMap"],[40,49,53,28],[40,90,53,64],[40,91,53,65],[40,92,53,66,"default"],[40,99,53,73],[41,4,54,2,"AndroidTextInputCommands"],[41,28,54,26],[41,31,55,4,"require"],[41,42,55,11],[41,43,55,11,"_dependencyMap"],[41,57,55,11],[41,98,55,47],[41,99,55,48],[41,100,55,49,"Commands"],[41,108,55,57],[42,2,56,0],[42,3,56,1],[42,9,56,7],[42,13,56,11,"Platform"],[42,30,56,19],[42,31,56,20,"OS"],[42,33,56,22],[42,38,56,27],[42,43,56,32],[42,45,56,34],[43,4,57,2,"RCTSinglelineTextInputView"],[43,30,57,28],[43,33,58,4,"require"],[43,44,58,11],[43,45,58,11,"_dependencyMap"],[43,59,58,11],[43,105,58,52],[43,106,58,53],[43,107,58,54,"default"],[43,114,58,61],[44,4,59,2,"RCTSinglelineTextInputNativeCommands"],[44,40,59,38],[44,43,60,4,"require"],[44,54,60,11],[44,55,60,11,"_dependencyMap"],[44,69,60,11],[44,115,60,52],[44,116,60,53],[44,117,60,54,"Commands"],[44,125,60,62],[45,4,61,2,"RCTMultilineTextInputView"],[45,29,61,27],[45,32,62,4,"require"],[45,43,62,11],[45,44,62,11,"_dependencyMap"],[45,58,62,11],[45,104,62,52],[45,105,62,53],[45,106,62,54,"default"],[45,113,62,61],[46,4,63,2,"RCTMultilineTextInputNativeCommands"],[46,39,63,37],[46,42,64,4,"require"],[46,53,64,11],[46,54,64,11,"_dependencyMap"],[46,68,64,11],[46,114,64,52],[46,115,64,53],[46,116,64,54,"Commands"],[46,124,64,62],[47,2,65,0],[48,2,960,0],[48,6,960,6,"emptyFunctionThatReturnsTrue"],[48,34,960,34],[48,37,960,37,"emptyFunctionThatReturnsTrue"],[48,38,960,37],[48,43,960,43],[48,47,960,47],[50,2,962,0],[51,0,963,0],[52,0,964,0],[53,0,965,0],[54,0,966,0],[55,0,967,0],[56,0,968,0],[57,0,969,0],[58,0,970,0],[59,0,971,0],[60,0,972,0],[61,0,973,0],[62,0,974,0],[63,0,975,0],[64,0,976,0],[65,0,977,0],[66,0,978,0],[67,0,979,0],[68,0,980,0],[69,0,981,0],[70,0,982,0],[71,0,983,0],[72,0,984,0],[73,0,985,0],[74,0,986,0],[75,0,987,0],[76,0,988,0],[77,0,989,0],[78,0,990,0],[79,0,991,0],[80,0,992,0],[81,0,993,0],[82,0,994,0],[83,0,995,0],[84,0,996,0],[85,0,997,0],[86,0,998,0],[87,0,999,0],[88,0,1000,0],[89,0,1001,0],[90,0,1002,0],[91,0,1003,0],[92,0,1004,0],[93,0,1005,0],[94,0,1006,0],[95,0,1007,0],[96,0,1008,0],[97,0,1009,0],[98,0,1010,0],[99,0,1011,0],[100,0,1012,0],[101,0,1013,0],[102,0,1014,0],[103,0,1015,0],[104,0,1016,0],[105,0,1017,0],[106,0,1018,0],[107,0,1019,0],[108,0,1020,0],[109,0,1021,0],[110,0,1022,0],[111,0,1023,0],[112,0,1024,0],[113,0,1025,0],[114,0,1026,0],[115,0,1027,0],[116,0,1028,0],[117,0,1029,0],[118,0,1030,0],[119,0,1031,0],[120,0,1032,0],[121,0,1033,0],[122,0,1034,0],[123,0,1035,0],[124,0,1036,0],[125,0,1037,0],[126,0,1038,0],[127,0,1039,0],[128,0,1040,0],[129,0,1041,0],[130,0,1042,0],[131,0,1043,0],[132,0,1044,0],[133,0,1045,0],[134,0,1046,0],[135,0,1047,0],[136,0,1048,0],[137,0,1049,0],[138,0,1050,0],[139,0,1051,0],[140,0,1052,0],[141,0,1053,0],[142,0,1054,0],[143,0,1055,0],[144,0,1056,0],[145,0,1057,0],[146,0,1058,0],[147,0,1059,0],[148,0,1060,0],[149,0,1061,0],[150,0,1062,0],[151,0,1063,0],[152,0,1064,0],[153,0,1065,0],[154,0,1066,0],[155,0,1067,0],[156,0,1068,0],[157,0,1069,0],[158,0,1070,0],[159,0,1071,0],[160,0,1072,0],[161,2,1073,0],[161,11,1073,9,"InternalTextInput"],[161,28,1073,26,"InternalTextInput"],[161,29,1073,27,"props"],[161,34,1073,39],[161,36,1073,53],[162,4,1074,2],[162,8,1075,17,"ariaBusy"],[162,16,1075,25],[162,19,1088,6,"props"],[162,24,1088,11],[162,25,1075,4],[162,36,1075,15],[163,6,1076,20,"ariaChecked"],[163,17,1076,31],[163,20,1088,6,"props"],[163,25,1088,11],[163,26,1076,4],[163,40,1076,18],[164,6,1077,21,"ariaDisabled"],[164,18,1077,33],[164,21,1088,6,"props"],[164,26,1088,11],[164,27,1077,4],[164,42,1077,19],[165,6,1078,21,"ariaExpanded"],[165,18,1078,33],[165,21,1088,6,"props"],[165,26,1088,11],[165,27,1078,4],[165,42,1078,19],[166,6,1079,21,"ariaSelected"],[166,18,1079,33],[166,21,1088,6,"props"],[166,26,1088,11],[166,27,1079,4],[166,42,1079,19],[167,6,1080,4,"accessibilityState"],[167,24,1080,22],[167,27,1088,6,"props"],[167,32,1088,11],[167,33,1080,4,"accessibilityState"],[167,51,1080,22],[168,6,1081,4,"id"],[168,8,1081,6],[168,11,1088,6,"props"],[168,16,1088,11],[168,17,1081,4,"id"],[168,19,1081,6],[169,6,1082,4,"tabIndex"],[169,14,1082,12],[169,17,1088,6,"props"],[169,22,1088,11],[169,23,1082,4,"tabIndex"],[169,31,1082,12],[170,6,1083,15,"propsSelection"],[170,20,1083,29],[170,23,1088,6,"props"],[170,28,1088,11],[170,29,1083,4,"selection"],[170,38,1083,13],[171,6,1084,4,"selectionColor"],[171,20,1084,18],[171,23,1088,6,"props"],[171,28,1088,11],[171,29,1084,4,"selectionColor"],[171,43,1084,18],[172,6,1085,4,"selectionHandleColor"],[172,26,1085,24],[172,29,1088,6,"props"],[172,34,1088,11],[172,35,1085,4,"selectionHandleColor"],[172,55,1085,24],[173,6,1086,4,"cursorColor"],[173,17,1086,15],[173,20,1088,6,"props"],[173,25,1088,11],[173,26,1086,4,"cursorColor"],[173,37,1086,15],[174,6,1087,7,"otherProps"],[174,16,1087,17],[174,23,1087,17,"_objectWithoutProperties2"],[174,48,1087,17],[174,49,1087,17,"default"],[174,56,1087,17],[174,58,1088,6,"props"],[174,63,1088,11],[174,65,1088,11,"_excluded"],[174,74,1088,11],[175,4,1090,2],[175,8,1090,8,"inputRef"],[175,16,1090,16],[175,19,1090,19],[175,23,1090,19,"useRef"],[175,36,1090,25],[175,38,1090,73],[175,42,1090,77],[175,43,1090,78],[177,4,1092,2],[178,4,1093,2],[178,8,1093,8,"selection"],[178,17,1093,29],[178,20,1094,4,"propsSelection"],[178,34,1094,18],[178,38,1094,22],[178,42,1094,26],[178,45,1095,8],[178,49,1095,12],[178,52,1096,8],[179,6,1097,10,"start"],[179,11,1097,15],[179,13,1097,17,"propsSelection"],[179,27,1097,31],[179,28,1097,32,"start"],[179,33,1097,37],[180,6,1098,10,"end"],[180,9,1098,13],[180,11,1098,15,"propsSelection"],[180,25,1098,29],[180,26,1098,30,"end"],[180,29,1098,33],[180,33,1098,37,"propsSelection"],[180,47,1098,51],[180,48,1098,52,"start"],[181,4,1099,8],[181,5,1099,9],[182,4,1101,2],[182,8,1101,2,"_useState"],[182,17,1101,2],[182,20,1101,58],[182,24,1101,58,"useState"],[182,39,1101,66],[182,41,1101,75],[182,42,1101,76],[182,43,1101,77],[183,6,1101,77,"_useState2"],[183,16,1101,77],[183,23,1101,77,"_slicedToArray2"],[183,38,1101,77],[183,39,1101,77,"default"],[183,46,1101,77],[183,48,1101,77,"_useState"],[183,57,1101,77],[184,6,1101,9,"mostRecentEventCount"],[184,26,1101,29],[184,29,1101,29,"_useState2"],[184,39,1101,29],[185,6,1101,31,"setMostRecentEventCount"],[185,29,1101,54],[185,32,1101,54,"_useState2"],[185,42,1101,54],[186,4,1102,2],[186,8,1102,2,"_useState3"],[186,18,1102,2],[186,21,1102,46],[186,25,1102,46,"useState"],[186,40,1102,54],[186,42,1102,67,"props"],[186,47,1102,72],[186,48,1102,73,"value"],[186,53,1102,78],[186,54,1102,79],[187,6,1102,79,"_useState4"],[187,16,1102,79],[187,23,1102,79,"_slicedToArray2"],[187,38,1102,79],[187,39,1102,79,"default"],[187,46,1102,79],[187,48,1102,79,"_useState3"],[187,58,1102,79],[188,6,1102,9,"lastNativeText"],[188,20,1102,23],[188,23,1102,23,"_useState4"],[188,33,1102,23],[189,6,1102,25,"setLastNativeText"],[189,23,1102,42],[189,26,1102,42,"_useState4"],[189,36,1102,42],[190,4,1103,2],[190,8,1103,2,"_useState5"],[190,18,1103,2],[190,21,1103,61],[190,25,1103,61,"useState"],[190,40,1103,69],[190,42,1106,6],[191,8,1107,4,"selection"],[191,17,1107,13],[191,19,1107,15],[192,10,1107,16,"start"],[192,15,1107,21],[192,17,1107,23],[192,18,1107,24],[192,19,1107,25],[193,10,1107,27,"end"],[193,13,1107,30],[193,15,1107,32],[193,16,1107,33],[194,8,1107,34],[194,9,1107,35],[195,8,1108,4,"mostRecentEventCount"],[195,28,1108,24],[195,30,1108,26,"mostRecentEventCount"],[196,6,1109,2],[196,7,1109,3],[196,8,1109,4],[197,6,1109,4,"_useState6"],[197,16,1109,4],[197,23,1109,4,"_slicedToArray2"],[197,38,1109,4],[197,39,1109,4,"default"],[197,46,1109,4],[197,48,1109,4,"_useState5"],[197,58,1109,4],[198,6,1103,9,"lastNativeSelectionState"],[198,30,1103,33],[198,33,1103,33,"_useState6"],[198,43,1103,33],[199,6,1103,35,"setLastNativeSelection"],[199,28,1103,57],[199,31,1103,57,"_useState6"],[199,41,1103,57],[200,4,1111,2],[200,8,1111,8,"lastNativeSelection"],[200,27,1111,27],[200,30,1111,30,"lastNativeSelectionState"],[200,54,1111,54],[200,55,1111,55,"selection"],[200,64,1111,64],[201,4,1113,2],[201,8,1113,6,"viewCommands"],[201,20,1113,18],[202,4,1114,2],[202,8,1114,6,"AndroidTextInputCommands"],[202,32,1114,30],[202,34,1114,32],[203,6,1115,4,"viewCommands"],[203,18,1115,16],[203,21,1115,19,"AndroidTextInputCommands"],[203,45,1115,43],[204,4,1116,2],[204,5,1116,3],[204,11,1116,9],[205,6,1117,4,"viewCommands"],[205,18,1117,16],[205,21,1118,6,"props"],[205,26,1118,11],[205,27,1118,12,"multiline"],[205,36,1118,21],[205,41,1118,26],[205,45,1118,30],[205,48,1119,10,"RCTMultilineTextInputNativeCommands"],[205,83,1119,45],[205,86,1120,10,"RCTSinglelineTextInputNativeCommands"],[205,122,1120,46],[206,4,1121,2],[207,4,1123,2],[207,8,1123,8,"text"],[207,12,1123,12],[207,15,1124,4],[207,22,1124,11,"props"],[207,27,1124,16],[207,28,1124,17,"value"],[207,33,1124,22],[207,38,1124,27],[207,46,1124,35],[207,49,1125,8,"props"],[207,54,1125,13],[207,55,1125,14,"value"],[207,60,1125,19],[207,63,1126,8],[207,70,1126,15,"props"],[207,75,1126,20],[207,76,1126,21,"defaultValue"],[207,88,1126,33],[207,93,1126,38],[207,101,1126,46],[207,104,1127,10,"props"],[207,109,1127,15],[207,110,1127,16,"defaultValue"],[207,122,1127,28],[207,125,1128,10],[207,127,1128,12],[209,4,1130,2],[210,4,1131,2],[211,4,1132,2],[212,4,1133,2],[212,8,1133,2,"useLayoutEffect"],[212,30,1133,17],[212,32,1133,18],[212,38,1133,24],[213,6,1134,4],[213,10,1134,10,"nativeUpdate"],[213,22,1134,62],[213,25,1134,65],[213,26,1134,66],[213,27,1134,67],[214,6,1136,4],[214,10,1136,8,"lastNativeText"],[214,24,1136,22],[214,29,1136,27,"props"],[214,34,1136,32],[214,35,1136,33,"value"],[214,40,1136,38],[214,44,1136,42],[214,51,1136,49,"props"],[214,56,1136,54],[214,57,1136,55,"value"],[214,62,1136,60],[214,67,1136,65],[214,75,1136,73],[214,77,1136,75],[215,8,1137,6,"nativeUpdate"],[215,20,1137,18],[215,21,1137,19,"text"],[215,25,1137,23],[215,28,1137,26,"props"],[215,33,1137,31],[215,34,1137,32,"value"],[215,39,1137,37],[216,8,1138,6,"setLastNativeText"],[216,25,1138,23],[216,26,1138,24,"props"],[216,31,1138,29],[216,32,1138,30,"value"],[216,37,1138,35],[216,38,1138,36],[217,6,1139,4],[218,6,1141,4],[218,10,1142,6,"selection"],[218,19,1142,15],[218,23,1143,6,"lastNativeSelection"],[218,42,1143,25],[218,47,1144,7,"lastNativeSelection"],[218,66,1144,26],[218,67,1144,27,"start"],[218,72,1144,32],[218,77,1144,37,"selection"],[218,86,1144,46],[218,87,1144,47,"start"],[218,92,1144,52],[218,96,1145,8,"lastNativeSelection"],[218,115,1145,27],[218,116,1145,28,"end"],[218,119,1145,31],[218,124,1145,36,"selection"],[218,133,1145,45],[218,134,1145,46,"end"],[218,137,1145,49],[218,138,1145,50],[218,140,1146,6],[219,8,1147,6,"nativeUpdate"],[219,20,1147,18],[219,21,1147,19,"selection"],[219,30,1147,28],[219,33,1147,31,"selection"],[219,42,1147,40],[220,8,1148,6,"setLastNativeSelection"],[220,30,1148,28],[220,31,1148,29],[221,10,1148,30,"selection"],[221,19,1148,39],[222,10,1148,41,"mostRecentEventCount"],[223,8,1148,61],[223,9,1148,62],[223,10,1148,63],[224,6,1149,4],[225,6,1151,4],[225,10,1151,8,"Object"],[225,16,1151,14],[225,17,1151,15,"keys"],[225,21,1151,19],[225,22,1151,20,"nativeUpdate"],[225,34,1151,32],[225,35,1151,33],[225,36,1151,34,"length"],[225,42,1151,40],[225,47,1151,45],[225,48,1151,46],[225,50,1151,48],[226,8,1152,6],[227,6,1153,4],[228,6,1155,4],[228,10,1155,8,"inputRef"],[228,18,1155,16],[228,19,1155,17,"current"],[228,26,1155,24],[228,30,1155,28],[228,34,1155,32],[228,36,1155,34],[229,8,1156,6,"viewCommands"],[229,20,1156,18],[229,21,1156,19,"setTextAndSelection"],[229,40,1156,38],[229,41,1157,8,"inputRef"],[229,49,1157,16],[229,50,1157,17,"current"],[229,57,1157,24],[229,59,1158,8,"mostRecentEventCount"],[229,79,1158,28],[229,81,1159,8,"text"],[229,85,1159,12],[229,87,1160,8,"selection"],[229,96,1160,17],[229,98,1160,19,"start"],[229,103,1160,24],[229,107,1160,28],[229,108,1160,29],[229,109,1160,30],[229,111,1161,8,"selection"],[229,120,1161,17],[229,122,1161,19,"end"],[229,125,1161,22],[229,129,1161,26],[229,130,1161,27],[229,131,1162,6],[229,132,1162,7],[230,6,1163,4],[231,4,1164,2],[231,5,1164,3],[231,7,1164,5],[231,8,1165,4,"mostRecentEventCount"],[231,28,1165,24],[231,30,1166,4,"inputRef"],[231,38,1166,12],[231,40,1167,4,"props"],[231,45,1167,9],[231,46,1167,10,"value"],[231,51,1167,15],[231,53,1168,4,"props"],[231,58,1168,9],[231,59,1168,10,"defaultValue"],[231,71,1168,22],[231,73,1169,4,"lastNativeText"],[231,87,1169,18],[231,89,1170,4,"selection"],[231,98,1170,13],[231,100,1171,4,"lastNativeSelection"],[231,119,1171,23],[231,121,1172,4,"text"],[231,125,1172,8],[231,127,1173,4,"viewCommands"],[231,139,1173,16],[231,140,1174,3],[231,141,1174,4],[232,4,1176,2],[232,8,1176,2,"useLayoutEffect"],[232,30,1176,17],[232,32,1176,18],[232,38,1176,24],[233,6,1177,4],[233,10,1177,10,"inputRefValue"],[233,23,1177,23],[233,26,1177,26,"inputRef"],[233,34,1177,34],[233,35,1177,35,"current"],[233,42,1177,42],[234,6,1179,4],[234,10,1179,8,"inputRefValue"],[234,23,1179,21],[234,27,1179,25],[234,31,1179,29],[234,33,1179,31],[235,8,1180,6,"TextInputState"],[235,31,1180,20],[235,32,1180,21,"registerInput"],[235,45,1180,34],[235,46,1180,35,"inputRefValue"],[235,59,1180,48],[235,60,1180,49],[236,8,1182,6],[236,15,1182,13],[236,21,1182,19],[237,10,1183,8,"TextInputState"],[237,33,1183,22],[237,34,1183,23,"unregisterInput"],[237,49,1183,38],[237,50,1183,39,"inputRefValue"],[237,63,1183,52],[237,64,1183,53],[238,10,1185,8],[238,14,1185,12,"TextInputState"],[238,37,1185,26],[238,38,1185,27,"currentlyFocusedInput"],[238,59,1185,48],[238,60,1185,49],[238,61,1185,50],[238,66,1185,55,"inputRefValue"],[238,79,1185,68],[238,81,1185,70],[239,12,1186,10],[239,16,1186,10,"nullthrows"],[239,35,1186,20],[239,37,1186,21,"inputRefValue"],[239,50,1186,34],[239,51,1186,35],[239,52,1186,36,"blur"],[239,56,1186,40],[239,57,1186,41],[239,58,1186,42],[240,10,1187,8],[241,8,1188,6],[241,9,1188,7],[242,6,1189,4],[243,4,1190,2],[243,5,1190,3],[243,7,1190,5],[243,8,1190,6,"inputRef"],[243,16,1190,14],[243,17,1190,15],[243,18,1190,16],[244,4,1192,2],[244,8,1192,8,"setLocalRef"],[244,19,1192,19],[244,22,1192,22],[244,26,1192,22,"useCallback"],[244,44,1192,33],[244,46,1193,5,"instance"],[244,54,1193,39],[244,58,1193,44],[245,6,1194,6,"inputRef"],[245,14,1194,14],[245,15,1194,15,"current"],[245,22,1194,22],[245,25,1194,25,"instance"],[245,33,1194,33],[247,6,1196,6],[248,0,1197,0],[249,0,1198,0],[250,0,1199,0],[251,0,1200,0],[252,0,1201,0],[253,0,1202,0],[254,0,1203,0],[255,0,1204,0],[256,0,1205,0],[257,0,1206,0],[258,0,1207,0],[259,0,1208,0],[260,0,1209,0],[261,0,1210,0],[262,0,1211,0],[263,0,1212,0],[264,0,1213,0],[265,0,1214,0],[266,0,1215,0],[267,6,1218,6],[267,10,1218,10,"instance"],[267,18,1218,18],[267,22,1218,22],[267,26,1218,26],[267,28,1218,28],[268,8,1219,8],[269,8,1220,8,"Object"],[269,14,1220,14],[269,15,1220,15,"assign"],[269,21,1220,21],[269,22,1220,22,"instance"],[269,30,1220,30],[269,32,1220,32],[270,10,1221,10,"clear"],[270,15,1221,15,"clear"],[270,16,1221,15],[270,18,1221,24],[271,12,1222,12],[271,16,1222,16,"inputRef"],[271,24,1222,24],[271,25,1222,25,"current"],[271,32,1222,32],[271,36,1222,36],[271,40,1222,40],[271,42,1222,42],[272,14,1223,14,"viewCommands"],[272,26,1223,26],[272,27,1223,27,"setTextAndSelection"],[272,46,1223,46],[272,47,1224,16,"inputRef"],[272,55,1224,24],[272,56,1224,25,"current"],[272,63,1224,32],[272,65,1225,16,"mostRecentEventCount"],[272,85,1225,36],[272,87,1226,16],[272,89,1226,18],[272,91,1227,16],[272,92,1227,17],[272,94,1228,16],[272,95,1229,14],[272,96,1229,15],[273,12,1230,12],[274,10,1231,10],[274,11,1231,11],[275,10,1232,10],[276,10,1233,10,"isFocused"],[276,19,1233,19,"isFocused"],[276,20,1233,19],[276,22,1233,31],[277,12,1234,12],[277,19,1234,19,"TextInputState"],[277,42,1234,33],[277,43,1234,34,"currentlyFocusedInput"],[277,64,1234,55],[277,65,1234,56],[277,66,1234,57],[277,71,1234,62,"inputRef"],[277,79,1234,70],[277,80,1234,71,"current"],[277,87,1234,78],[278,10,1235,10],[278,11,1235,11],[279,10,1236,10,"getNativeRef"],[279,22,1236,22,"getNativeRef"],[279,23,1236,22],[279,25,1236,66],[280,12,1237,12],[280,19,1237,19,"inputRef"],[280,27,1237,27],[280,28,1237,28,"current"],[280,35,1237,35],[281,10,1238,10],[281,11,1238,11],[282,10,1239,10,"setSelection"],[282,22,1239,22,"setSelection"],[282,23,1239,23,"start"],[282,28,1239,36],[282,30,1239,38,"end"],[282,33,1239,49],[282,35,1239,57],[283,12,1240,12],[283,16,1240,16,"inputRef"],[283,24,1240,24],[283,25,1240,25,"current"],[283,32,1240,32],[283,36,1240,36],[283,40,1240,40],[283,42,1240,42],[284,14,1241,14,"viewCommands"],[284,26,1241,26],[284,27,1241,27,"setTextAndSelection"],[284,46,1241,46],[284,47,1242,16,"inputRef"],[284,55,1242,24],[284,56,1242,25,"current"],[284,63,1242,32],[284,65,1243,16,"mostRecentEventCount"],[284,85,1243,36],[284,87,1244,16],[284,91,1244,20],[284,93,1245,16,"start"],[284,98,1245,21],[284,100,1246,16,"end"],[284,103,1247,14],[284,104,1247,15],[285,12,1248,12],[286,10,1249,10],[287,8,1250,8],[287,9,1250,9],[287,10,1250,10],[288,6,1251,6],[289,4,1252,4],[289,5,1252,5],[289,7,1253,4],[289,8,1253,5,"mostRecentEventCount"],[289,28,1253,25],[289,30,1253,27,"viewCommands"],[289,42,1253,39],[289,43,1254,2],[289,44,1254,3],[290,4,1256,2],[290,8,1256,8,"ref"],[290,11,1256,11],[290,14,1256,14],[290,18,1256,14,"useMergeRefs"],[290,39,1256,26],[290,41,1256,46,"setLocalRef"],[290,52,1256,57],[290,54,1256,59,"props"],[290,59,1256,64],[290,60,1256,65,"forwardedRef"],[290,72,1256,77],[290,73,1256,78],[291,4,1258,2],[291,8,1258,8,"_onChange"],[291,17,1258,17],[291,20,1258,21,"event"],[291,25,1258,39],[291,29,1258,44],[292,6,1259,4],[292,10,1259,10,"currentText"],[292,21,1259,21],[292,24,1259,24,"event"],[292,29,1259,29],[292,30,1259,30,"nativeEvent"],[292,41,1259,41],[292,42,1259,42,"text"],[292,46,1259,46],[293,6,1260,4,"props"],[293,11,1260,9],[293,12,1260,10,"onChange"],[293,20,1260,18],[293,24,1260,22,"props"],[293,29,1260,27],[293,30,1260,28,"onChange"],[293,38,1260,36],[293,39,1260,37,"event"],[293,44,1260,42],[293,45,1260,43],[294,6,1261,4,"props"],[294,11,1261,9],[294,12,1261,10,"onChangeText"],[294,24,1261,22],[294,28,1261,26,"props"],[294,33,1261,31],[294,34,1261,32,"onChangeText"],[294,46,1261,44],[294,47,1261,45,"currentText"],[294,58,1261,56],[294,59,1261,57],[295,6,1263,4],[295,10,1263,8,"inputRef"],[295,18,1263,16],[295,19,1263,17,"current"],[295,26,1263,24],[295,30,1263,28],[295,34,1263,32],[295,36,1263,34],[296,8,1264,6],[297,8,1265,6],[298,8,1266,6],[299,6,1267,4],[300,6,1269,4,"setLastNativeText"],[300,23,1269,21],[300,24,1269,22,"currentText"],[300,35,1269,33],[300,36,1269,34],[301,6,1270,4],[302,6,1271,4],[303,6,1272,4],[304,6,1273,4],[305,6,1274,4,"setMostRecentEventCount"],[305,29,1274,27],[305,30,1274,28,"event"],[305,35,1274,33],[305,36,1274,34,"nativeEvent"],[305,47,1274,45],[305,48,1274,46,"eventCount"],[305,58,1274,56],[305,59,1274,57],[306,4,1275,2],[306,5,1275,3],[307,4,1277,2],[307,8,1277,8,"_onSelectionChange"],[307,26,1277,26],[307,29,1277,30,"event"],[307,34,1277,57],[307,38,1277,62],[308,6,1278,4,"props"],[308,11,1278,9],[308,12,1278,10,"onSelectionChange"],[308,29,1278,27],[308,33,1278,31,"props"],[308,38,1278,36],[308,39,1278,37,"onSelectionChange"],[308,56,1278,54],[308,57,1278,55,"event"],[308,62,1278,60],[308,63,1278,61],[309,6,1280,4],[309,10,1280,8,"inputRef"],[309,18,1280,16],[309,19,1280,17,"current"],[309,26,1280,24],[309,30,1280,28],[309,34,1280,32],[309,36,1280,34],[310,8,1281,6],[311,8,1282,6],[312,8,1283,6],[313,6,1284,4],[314,6,1286,4,"setLastNativeSelection"],[314,28,1286,26],[314,29,1286,27],[315,8,1287,6,"selection"],[315,17,1287,15],[315,19,1287,17,"event"],[315,24,1287,22],[315,25,1287,23,"nativeEvent"],[315,36,1287,34],[315,37,1287,35,"selection"],[315,46,1287,44],[316,8,1288,6,"mostRecentEventCount"],[317,6,1289,4],[317,7,1289,5],[317,8,1289,6],[318,4,1290,2],[318,5,1290,3],[319,4,1292,2],[319,8,1292,8,"_onFocus"],[319,16,1292,16],[319,19,1292,20,"event"],[319,24,1292,37],[319,28,1292,42],[320,6,1293,4,"TextInputState"],[320,29,1293,18],[320,30,1293,19,"focusInput"],[320,40,1293,29],[320,41,1293,30,"inputRef"],[320,49,1293,38],[320,50,1293,39,"current"],[320,57,1293,46],[320,58,1293,47],[321,6,1294,4],[321,10,1294,8,"props"],[321,15,1294,13],[321,16,1294,14,"onFocus"],[321,23,1294,21],[321,25,1294,23],[322,8,1295,6,"props"],[322,13,1295,11],[322,14,1295,12,"onFocus"],[322,21,1295,19],[322,22,1295,20,"event"],[322,27,1295,25],[322,28,1295,26],[323,6,1296,4],[324,4,1297,2],[324,5,1297,3],[325,4,1299,2],[325,8,1299,8,"_onBlur"],[325,15,1299,15],[325,18,1299,19,"event"],[325,23,1299,35],[325,27,1299,40],[326,6,1300,4,"TextInputState"],[326,29,1300,18],[326,30,1300,19,"blurInput"],[326,39,1300,28],[326,40,1300,29,"inputRef"],[326,48,1300,37],[326,49,1300,38,"current"],[326,56,1300,45],[326,57,1300,46],[327,6,1301,4],[327,10,1301,8,"props"],[327,15,1301,13],[327,16,1301,14,"onBlur"],[327,22,1301,20],[327,24,1301,22],[328,8,1302,6,"props"],[328,13,1302,11],[328,14,1302,12,"onBlur"],[328,20,1302,18],[328,21,1302,19,"event"],[328,26,1302,24],[328,27,1302,25],[329,6,1303,4],[330,4,1304,2],[330,5,1304,3],[331,4,1306,2],[331,8,1306,8,"_onScroll"],[331,17,1306,17],[331,20,1306,21,"event"],[331,25,1306,39],[331,29,1306,44],[332,6,1307,4,"props"],[332,11,1307,9],[332,12,1307,10,"onScroll"],[332,20,1307,18],[332,24,1307,22,"props"],[332,29,1307,27],[332,30,1307,28,"onScroll"],[332,38,1307,36],[332,39,1307,37,"event"],[332,44,1307,42],[332,45,1307,43],[333,4,1308,2],[333,5,1308,3],[334,4,1310,2],[334,8,1310,6,"textInput"],[334,17,1310,15],[334,20,1310,18],[334,24,1310,22],[335,4,1312,2],[335,8,1312,8,"multiline"],[335,17,1312,17],[335,20,1312,20,"props"],[335,25,1312,25],[335,26,1312,26,"multiline"],[335,35,1312,35],[335,39,1312,39],[335,44,1312,44],[336,4,1314,2],[336,8,1314,6,"submitBehavior"],[336,22,1314,36],[337,4,1315,2],[337,8,1315,6,"props"],[337,13,1315,11],[337,14,1315,12,"submitBehavior"],[337,28,1315,26],[337,32,1315,30],[337,36,1315,34],[337,38,1315,36],[338,6,1316,4],[339,6,1317,4],[339,10,1317,8],[339,11,1317,9,"multiline"],[339,20,1317,18],[339,24,1317,22,"props"],[339,29,1317,27],[339,30,1317,28,"submitBehavior"],[339,44,1317,42],[339,49,1317,47],[339,58,1317,56],[339,60,1317,58],[340,8,1318,6],[341,8,1319,6,"submitBehavior"],[341,22,1319,20],[341,25,1319,23],[341,40,1319,38],[342,6,1320,4],[342,7,1320,5],[342,13,1320,11],[343,8,1321,6,"submitBehavior"],[343,22,1321,20],[343,25,1321,23,"props"],[343,30,1321,28],[343,31,1321,29,"submitBehavior"],[343,45,1321,43],[344,6,1322,4],[345,4,1323,2],[345,5,1323,3],[345,11,1323,9],[345,15,1323,13,"multiline"],[345,24,1323,22],[345,26,1323,24],[346,6,1324,4],[346,10,1324,8,"props"],[346,15,1324,13],[346,16,1324,14,"blurOnSubmit"],[346,28,1324,26],[346,33,1324,31],[346,37,1324,35],[346,39,1324,37],[347,8,1325,6,"submitBehavior"],[347,22,1325,20],[347,25,1325,23],[347,40,1325,38],[348,6,1326,4],[348,7,1326,5],[348,13,1326,11],[349,8,1327,6,"submitBehavior"],[349,22,1327,20],[349,25,1327,23],[349,34,1327,32],[350,6,1328,4],[351,4,1329,2],[351,5,1329,3],[351,11,1329,9],[352,6,1330,4],[353,6,1331,4],[353,10,1331,8,"props"],[353,15,1331,13],[353,16,1331,14,"blurOnSubmit"],[353,28,1331,26],[353,33,1331,31],[353,38,1331,36],[353,40,1331,38],[354,8,1332,6,"submitBehavior"],[354,22,1332,20],[354,25,1332,23],[354,40,1332,38],[355,6,1333,4],[355,7,1333,5],[355,13,1333,11],[356,8,1334,6,"submitBehavior"],[356,22,1334,20],[356,25,1334,23],[356,33,1334,31],[357,6,1335,4],[358,4,1336,2],[359,4,1338,2],[359,8,1338,8,"accessible"],[359,18,1338,18],[359,21,1338,21,"props"],[359,26,1338,26],[359,27,1338,27,"accessible"],[359,37,1338,37],[359,42,1338,42],[359,47,1338,47],[360,4,1339,2],[360,8,1339,8,"focusable"],[360,17,1339,17],[360,20,1339,20,"props"],[360,25,1339,25],[360,26,1339,26,"focusable"],[360,35,1339,35],[360,40,1339,40],[360,45,1339,45],[361,4,1341,2],[361,8,1342,4,"editable"],[361,16,1342,12],[361,19,1348,6,"props"],[361,24,1348,11],[361,25,1342,4,"editable"],[361,33,1342,12],[362,6,1343,4,"hitSlop"],[362,13,1343,11],[362,16,1348,6,"props"],[362,21,1348,11],[362,22,1343,4,"hitSlop"],[362,29,1343,11],[363,6,1344,4,"onPress"],[363,13,1344,11],[363,16,1348,6,"props"],[363,21,1348,11],[363,22,1344,4,"onPress"],[363,29,1344,11],[364,6,1345,4,"onPressIn"],[364,15,1345,13],[364,18,1348,6,"props"],[364,23,1348,11],[364,24,1345,4,"onPressIn"],[364,33,1345,13],[365,6,1346,4,"onPressOut"],[365,16,1346,14],[365,19,1348,6,"props"],[365,24,1348,11],[365,25,1346,4,"onPressOut"],[365,35,1346,14],[366,6,1347,4,"rejectResponderTermination"],[366,32,1347,30],[366,35,1348,6,"props"],[366,40,1348,11],[366,41,1347,4,"rejectResponderTermination"],[366,67,1347,30],[367,4,1350,2],[367,8,1350,8,"config"],[367,14,1350,14],[367,17,1350,17,"React"],[367,22,1350,22],[367,23,1350,23,"useMemo"],[367,30,1350,30],[367,31,1351,4],[367,38,1351,11],[368,6,1352,6,"hitSlop"],[368,13,1352,13],[369,6,1353,6,"onPress"],[369,13,1353,13],[369,15,1353,16,"event"],[369,20,1353,33],[369,24,1353,38],[370,8,1354,8,"onPress"],[370,15,1354,15],[370,18,1354,18,"event"],[370,23,1354,23],[370,24,1354,24],[371,8,1355,8],[371,12,1355,12,"editable"],[371,20,1355,20],[371,25,1355,25],[371,30,1355,30],[371,32,1355,32],[372,10,1356,10],[372,14,1356,14,"inputRef"],[372,22,1356,22],[372,23,1356,23,"current"],[372,30,1356,30],[372,34,1356,34],[372,38,1356,38],[372,40,1356,40],[373,12,1357,12,"inputRef"],[373,20,1357,20],[373,21,1357,21,"current"],[373,28,1357,28],[373,29,1357,29,"focus"],[373,34,1357,34],[373,35,1357,35],[373,36,1357,36],[374,10,1358,10],[375,8,1359,8],[376,6,1360,6],[376,7,1360,7],[377,6,1361,6,"onPressIn"],[377,15,1361,15],[377,17,1361,17,"onPressIn"],[377,26,1361,26],[378,6,1362,6,"onPressOut"],[378,16,1362,16],[378,18,1362,18,"onPressOut"],[378,28,1362,28],[379,6,1363,6,"cancelable"],[379,16,1363,16],[379,18,1363,18,"Platform"],[379,35,1363,26],[379,36,1363,27,"OS"],[379,38,1363,29],[379,43,1363,34],[379,48,1363,39],[379,51,1363,42],[379,52,1363,43,"rejectResponderTermination"],[379,78,1363,69],[379,81,1363,72],[380,4,1364,4],[380,5,1364,5],[380,6,1364,6],[380,8,1365,4],[380,9,1366,6,"editable"],[380,17,1366,14],[380,19,1367,6,"hitSlop"],[380,26,1367,13],[380,28,1368,6,"onPress"],[380,35,1368,13],[380,37,1369,6,"onPressIn"],[380,46,1369,15],[380,48,1370,6,"onPressOut"],[380,58,1370,16],[380,60,1371,6,"rejectResponderTermination"],[380,86,1371,32],[380,87,1373,2],[380,88,1373,3],[382,4,1375,2],[383,4,1376,2],[384,4,1377,2],[384,8,1377,6,"caretHidden"],[384,19,1377,17],[384,22,1377,20,"props"],[384,27,1377,25],[384,28,1377,26,"caretHidden"],[384,39,1377,37],[385,4,1378,2],[385,8,1378,6,"Platform"],[385,25,1378,14],[385,26,1378,15,"isTesting"],[385,35,1378,24],[385,37,1378,26],[386,6,1379,4,"caretHidden"],[386,17,1379,15],[386,20,1379,18],[386,24,1379,22],[387,4,1380,2],[389,4,1382,2],[390,4,1383,2],[391,4,1384,2],[391,8,1384,2,"_ref"],[391,12,1384,2],[391,15,1384,46],[391,19,1384,46,"usePressability"],[391,43,1384,61],[391,45,1384,62,"config"],[391,51,1384,68],[391,52,1384,69],[391,56,1384,73],[391,57,1384,74],[391,58,1384,75],[392,6,1384,9,"onBlur"],[392,12,1384,15],[392,15,1384,15,"_ref"],[392,19,1384,15],[392,20,1384,9,"onBlur"],[392,26,1384,15],[393,6,1384,17,"onFocus"],[393,13,1384,24],[393,16,1384,24,"_ref"],[393,20,1384,24],[393,21,1384,17,"onFocus"],[393,28,1384,24],[394,6,1384,29,"eventHandlers"],[394,19,1384,42],[394,26,1384,42,"_objectWithoutProperties2"],[394,51,1384,42],[394,52,1384,42,"default"],[394,59,1384,42],[394,61,1384,42,"_ref"],[394,65,1384,42],[394,67,1384,42,"_excluded2"],[394,77,1384,42],[395,4,1386,2],[395,8,1386,6,"_accessibilityState"],[395,27,1386,25],[396,4,1387,2],[396,8,1388,4,"accessibilityState"],[396,26,1388,22],[396,30,1388,26],[396,34,1388,30],[396,38,1389,4,"ariaBusy"],[396,46,1389,12],[396,50,1389,16],[396,54,1389,20],[396,58,1390,4,"ariaChecked"],[396,69,1390,15],[396,73,1390,19],[396,77,1390,23],[396,81,1391,4,"ariaDisabled"],[396,93,1391,16],[396,97,1391,20],[396,101,1391,24],[396,105,1392,4,"ariaExpanded"],[396,117,1392,16],[396,121,1392,20],[396,125,1392,24],[396,129,1393,4,"ariaSelected"],[396,141,1393,16],[396,145,1393,20],[396,149,1393,24],[396,151,1394,4],[397,6,1395,4,"_accessibilityState"],[397,25,1395,23],[397,28,1395,26],[398,8,1396,6,"busy"],[398,12,1396,10],[398,14,1396,12,"ariaBusy"],[398,22,1396,20],[398,26,1396,24,"accessibilityState"],[398,44,1396,42],[398,46,1396,44,"busy"],[398,50,1396,48],[399,8,1397,6,"checked"],[399,15,1397,13],[399,17,1397,15,"ariaChecked"],[399,28,1397,26],[399,32,1397,30,"accessibilityState"],[399,50,1397,48],[399,52,1397,50,"checked"],[399,59,1397,57],[400,8,1398,6,"disabled"],[400,16,1398,14],[400,18,1398,16,"ariaDisabled"],[400,30,1398,28],[400,34,1398,32,"accessibilityState"],[400,52,1398,50],[400,54,1398,52,"disabled"],[400,62,1398,60],[401,8,1399,6,"expanded"],[401,16,1399,14],[401,18,1399,16,"ariaExpanded"],[401,30,1399,28],[401,34,1399,32,"accessibilityState"],[401,52,1399,50],[401,54,1399,52,"expanded"],[401,62,1399,60],[402,8,1400,6,"selected"],[402,16,1400,14],[402,18,1400,16,"ariaSelected"],[402,30,1400,28],[402,34,1400,32,"accessibilityState"],[402,52,1400,50],[402,54,1400,52,"selected"],[403,6,1401,4],[403,7,1401,5],[404,4,1402,2],[405,4,1404,2],[405,8,1404,8,"style"],[405,13,1404,13],[405,16,1404,16],[405,20,1404,16,"flattenStyle"],[405,41,1404,28],[405,43,1404,44,"props"],[405,48,1404,49],[405,49,1404,50,"style"],[405,54,1404,55],[405,55,1404,56],[406,4,1406,2],[406,8,1406,6],[406,15,1406,13,"style"],[406,20,1406,18],[406,22,1406,20,"fontWeight"],[406,32,1406,30],[406,37,1406,35],[406,45,1406,43],[406,47,1406,45],[407,6,1407,4],[408,6,1408,4],[409,6,1409,4,"style"],[409,11,1409,9],[409,12,1409,10,"fontWeight"],[409,22,1409,20],[409,25,1409,23,"style"],[409,30,1409,28],[409,32,1409,30,"fontWeight"],[409,42,1409,40],[409,43,1409,41,"toString"],[409,51,1409,49],[409,52,1409,50],[409,53,1409,51],[410,4,1410,2],[411,4,1412,2],[411,8,1412,6,"Platform"],[411,25,1412,14],[411,26,1412,15,"OS"],[411,28,1412,17],[411,33,1412,22],[411,38,1412,27],[411,40,1412,29],[412,6,1413,4],[412,10,1413,10,"RCTTextInputView"],[412,26,1413,26],[412,29,1414,6,"props"],[412,34,1414,11],[412,35,1414,12,"multiline"],[412,44,1414,21],[412,49,1414,26],[412,53,1414,30],[412,56,1415,10,"RCTMultilineTextInputView"],[412,81,1415,35],[412,84,1416,10,"RCTSinglelineTextInputView"],[412,110,1416,36],[413,6,1418,4],[413,10,1418,10,"useMultilineDefaultStyle"],[413,34,1418,34],[413,37,1419,6,"props"],[413,42,1419,11],[413,43,1419,12,"multiline"],[413,52,1419,21],[413,57,1419,26],[413,61,1419,30],[413,66,1420,7,"style"],[413,71,1420,12],[413,75,1420,16],[413,79,1420,20],[413,83,1421,9,"style"],[413,88,1421,14],[413,89,1421,15,"padding"],[413,96,1421,22],[413,100,1421,26],[413,104,1421,30],[413,108,1422,10,"style"],[413,113,1422,15],[413,114,1422,16,"paddingVertical"],[413,129,1422,31],[413,133,1422,35],[413,137,1422,39],[413,141,1423,10,"style"],[413,146,1423,15],[413,147,1423,16,"paddingTop"],[413,157,1423,26],[413,161,1423,30],[413,165,1423,35],[413,166,1423,36],[414,6,1425,4,"textInput"],[414,15,1425,13],[414,31,1426,6],[414,35,1426,6,"_jsxDevRuntime"],[414,49,1426,6],[414,50,1426,6,"jsxDEV"],[414,56,1426,6],[414,58,1426,7,"RCTTextInputView"],[415,6,1427,8],[416,6,1427,8],[417,8,1428,8,"ref"],[417,11,1428,11],[417,13,1428,13,"ref"],[417,16,1428,17],[418,8,1428,17],[418,11,1429,12,"otherProps"],[418,21,1429,22],[419,8,1429,22],[419,11,1430,12,"eventHandlers"],[419,24,1430,25],[420,8,1431,8,"accessibilityState"],[420,26,1431,26],[420,28,1431,28,"_accessibilityState"],[420,47,1431,48],[421,8,1432,8,"accessible"],[421,18,1432,18],[421,20,1432,20,"accessible"],[421,30,1432,31],[422,8,1433,8,"submitBehavior"],[422,22,1433,22],[422,24,1433,24,"submitBehavior"],[422,38,1433,39],[423,8,1434,8,"caretHidden"],[423,19,1434,19],[423,21,1434,21,"caretHidden"],[423,32,1434,33],[424,8,1435,8,"dataDetectorTypes"],[424,25,1435,25],[424,27,1435,27,"props"],[424,32,1435,32],[424,33,1435,33,"dataDetectorTypes"],[424,50,1435,51],[425,8,1436,8,"focusable"],[425,17,1436,17],[425,19,1436,19,"tabIndex"],[425,27,1436,27],[425,32,1436,32,"undefined"],[425,41,1436,41],[425,44,1436,44],[425,45,1436,45,"tabIndex"],[425,53,1436,53],[425,56,1436,56,"focusable"],[425,65,1436,66],[426,8,1437,8,"mostRecentEventCount"],[426,28,1437,28],[426,30,1437,30,"mostRecentEventCount"],[426,50,1437,51],[427,8,1438,8,"nativeID"],[427,16,1438,16],[427,18,1438,18,"id"],[427,20,1438,20],[427,24,1438,24,"props"],[427,29,1438,29],[427,30,1438,30,"nativeID"],[427,38,1438,39],[428,8,1439,8,"onBlur"],[428,14,1439,14],[428,16,1439,16,"_onBlur"],[428,23,1439,24],[429,8,1440,8,"onChange"],[429,16,1440,16],[429,18,1440,18,"_onChange"],[429,27,1440,28],[430,8,1441,8,"onContentSizeChange"],[430,27,1441,27],[430,29,1441,29,"props"],[430,34,1441,34],[430,35,1441,35,"onContentSizeChange"],[430,54,1441,55],[431,8,1442,8,"onFocus"],[431,15,1442,15],[431,17,1442,17,"_onFocus"],[431,25,1442,26],[432,8,1443,8,"onScroll"],[432,16,1443,16],[432,18,1443,18,"_onScroll"],[432,27,1443,28],[433,8,1444,8,"onSelectionChange"],[433,25,1444,25],[433,27,1444,27,"_onSelectionChange"],[433,45,1444,46],[434,8,1445,8,"onSelectionChangeShouldSetResponder"],[434,43,1445,43],[434,45,1445,45,"emptyFunctionThatReturnsTrue"],[434,73,1445,74],[435,8,1446,8,"selection"],[435,17,1446,17],[435,19,1446,19,"selection"],[435,28,1446,29],[436,8,1447,8,"selectionColor"],[436,22,1447,22],[436,24,1447,24,"selectionColor"],[436,38,1447,39],[437,8,1448,8,"style"],[437,13,1448,13],[437,15,1448,15,"StyleSheet"],[437,34,1448,25],[437,35,1448,26,"compose"],[437,42,1448,33],[437,43,1449,10,"useMultilineDefaultStyle"],[437,67,1449,34],[437,70,1449,37,"styles"],[437,76,1449,43],[437,77,1449,44,"multilineDefault"],[437,93,1449,60],[437,96,1449,63],[437,100,1449,67],[437,102,1450,10,"style"],[437,107,1451,8],[437,108,1451,10],[438,8,1452,8,"text"],[438,12,1452,12],[438,14,1452,14,"text"],[439,6,1452,19],[440,8,1452,19,"fileName"],[440,16,1452,19],[440,18,1452,19,"_jsxFileName"],[440,30,1452,19],[441,8,1452,19,"lineNumber"],[441,18,1452,19],[442,8,1452,19,"columnNumber"],[442,20,1452,19],[443,6,1452,19],[443,13,1453,7],[443,14,1454,5],[444,4,1455,2],[444,5,1455,3],[444,11,1455,9],[444,15,1455,13,"Platform"],[444,32,1455,21],[444,33,1455,22,"OS"],[444,35,1455,24],[444,40,1455,29],[444,49,1455,38],[444,51,1455,40],[445,6,1456,4],[445,10,1456,10,"autoCapitalize"],[445,24,1456,24],[445,27,1456,27,"props"],[445,32,1456,32],[445,33,1456,33,"autoCapitalize"],[445,47,1456,47],[445,51,1456,51],[445,62,1456,62],[446,6,1457,4],[446,10,1457,10,"_accessibilityLabelledBy"],[446,34,1457,34],[446,37,1458,6,"props"],[446,42,1458,11],[446,45,1458,14],[446,62,1458,31],[446,63,1458,32],[446,67,1458,36,"props"],[446,72,1458,41],[446,74,1458,43,"accessibilityLabelledBy"],[446,97,1458,66],[447,6,1459,4],[447,10,1459,10,"placeholder"],[447,21,1459,21],[447,24,1459,24,"props"],[447,29,1459,29],[447,30,1459,30,"placeholder"],[447,41,1459,41],[447,45,1459,45],[447,47,1459,47],[448,6,1460,4],[448,10,1460,8,"children"],[448,18,1460,16],[448,21,1460,19,"props"],[448,26,1460,24],[448,27,1460,25,"children"],[448,35,1460,33],[449,6,1461,4],[449,10,1461,10,"childCount"],[449,20,1461,20],[449,23,1461,23,"React"],[449,28,1461,28],[449,29,1461,29,"Children"],[449,37,1461,37],[449,38,1461,38,"count"],[449,43,1461,43],[449,44,1461,44,"children"],[449,52,1461,52],[449,53,1461,53],[450,6,1462,4],[450,10,1462,4,"invariant"],[450,28,1462,13],[450,30,1463,6],[450,32,1463,8,"props"],[450,37,1463,13],[450,38,1463,14,"value"],[450,43,1463,19],[450,47,1463,23],[450,51,1463,27],[450,55,1463,31,"childCount"],[450,65,1463,41],[450,66,1463,42],[450,68,1464,6],[450,109,1465,4],[450,110,1465,5],[451,6,1466,4],[451,10,1466,8,"childCount"],[451,20,1466,18],[451,23,1466,21],[451,24,1466,22],[451,26,1466,24],[452,8,1467,6,"children"],[452,16,1467,14],[452,32,1467,17],[452,36,1467,17,"_jsxDevRuntime"],[452,50,1467,17],[452,51,1467,17,"jsxDEV"],[452,57,1467,17],[452,59,1467,18,"_Text"],[452,64,1467,18],[452,65,1467,18,"default"],[452,72,1467,22],[453,10,1467,22,"children"],[453,18,1467,22],[453,20,1467,24,"children"],[454,8,1467,32],[455,10,1467,32,"fileName"],[455,18,1467,32],[455,20,1467,32,"_jsxFileName"],[455,32,1467,32],[456,10,1467,32,"lineNumber"],[456,20,1467,32],[457,10,1467,32,"columnNumber"],[457,22,1467,32],[458,8,1467,32],[458,15,1467,39],[458,16,1467,40],[459,6,1468,4],[460,6,1469,4],[461,6,1470,4],[461,10,1470,10,"colorProps"],[461,20,1470,20],[461,23,1470,23],[462,8,1471,6,"selectionColor"],[462,22,1471,20],[463,8,1472,6,"selectionHandleColor"],[463,28,1472,26],[463,30,1473,8,"selectionHandleColor"],[463,50,1473,28],[463,55,1473,33,"undefined"],[463,64,1473,42],[463,67,1474,12,"selectionColor"],[463,81,1474,26],[463,84,1475,12,"selectionHandleColor"],[463,104,1475,32],[464,8,1476,6,"cursorColor"],[464,19,1476,17],[464,21,1476,19,"cursorColor"],[464,32,1476,30],[464,37,1476,35,"undefined"],[464,46,1476,44],[464,49,1476,47,"selectionColor"],[464,63,1476,61],[464,66,1476,64,"cursorColor"],[465,6,1477,4],[465,7,1477,5],[466,6,1478,4,"textInput"],[466,15,1478,13],[467,6,1478,13],[468,6,1479,6],[469,0,1480,0],[470,6,1481,6],[471,0,1482,0],[472,0,1483,0],[473,6,1484,6],[474,0,1485,0],[475,0,1486,0],[476,6,1487,6],[476,10,1487,6,"_jsxDevRuntime"],[476,24,1487,6],[476,25,1487,6,"jsxDEV"],[476,31,1487,6],[476,33,1487,7,"AndroidTextInput"],[477,6,1488,8],[478,6,1488,8],[479,8,1489,8,"ref"],[479,11,1489,11],[479,13,1489,13,"ref"],[479,16,1489,17],[480,8,1489,17],[480,11,1490,12,"otherProps"],[480,21,1490,22],[481,8,1490,22],[481,11,1491,12,"colorProps"],[481,21,1491,22],[482,8,1491,22],[482,11,1492,12,"eventHandlers"],[482,24,1492,25],[483,8,1493,8,"accessibilityState"],[483,26,1493,26],[483,28,1493,28,"_accessibilityState"],[483,47,1493,48],[484,8,1494,8,"accessibilityLabelledBy"],[484,31,1494,31],[484,33,1494,33,"_accessibilityLabelledBy"],[484,57,1494,58],[485,8,1495,8,"accessible"],[485,18,1495,18],[485,20,1495,20,"accessible"],[485,30,1495,31],[486,8,1496,8,"autoCapitalize"],[486,22,1496,22],[486,24,1496,24,"autoCapitalize"],[486,38,1496,39],[487,8,1497,8,"submitBehavior"],[487,22,1497,22],[487,24,1497,24,"submitBehavior"],[487,38,1497,39],[488,8,1498,8,"caretHidden"],[488,19,1498,19],[488,21,1498,21,"caretHidden"],[488,32,1498,33],[489,8,1499,8,"children"],[489,16,1499,16],[489,18,1499,18,"children"],[489,26,1499,27],[490,8,1500,8,"disableFullscreenUI"],[490,27,1500,27],[490,29,1500,29,"props"],[490,34,1500,34],[490,35,1500,35,"disableFullscreenUI"],[490,54,1500,55],[491,8,1501,8,"focusable"],[491,17,1501,17],[491,19,1501,19,"tabIndex"],[491,27,1501,27],[491,32,1501,32,"undefined"],[491,41,1501,41],[491,44,1501,44],[491,45,1501,45,"tabIndex"],[491,53,1501,53],[491,56,1501,56,"focusable"],[491,65,1501,66],[492,8,1502,8,"mostRecentEventCount"],[492,28,1502,28],[492,30,1502,30,"mostRecentEventCount"],[492,50,1502,51],[493,8,1503,8,"nativeID"],[493,16,1503,16],[493,18,1503,18,"id"],[493,20,1503,20],[493,24,1503,24,"props"],[493,29,1503,29],[493,30,1503,30,"nativeID"],[493,38,1503,39],[494,8,1504,8,"numberOfLines"],[494,21,1504,21],[494,23,1504,23,"props"],[494,28,1504,28],[494,29,1504,29,"rows"],[494,33,1504,33],[494,37,1504,37,"props"],[494,42,1504,42],[494,43,1504,43,"numberOfLines"],[494,56,1504,57],[495,8,1505,8,"onBlur"],[495,14,1505,14],[495,16,1505,16,"_onBlur"],[495,23,1505,24],[496,8,1506,8,"onChange"],[496,16,1506,16],[496,18,1506,18,"_onChange"],[496,27,1506,28],[497,8,1507,8,"onFocus"],[497,15,1507,15],[497,17,1507,17,"_onFocus"],[498,8,1508,8],[499,0,1509,0],[500,0,1510,0],[501,8,1511,8],[502,0,1512,0],[503,0,1513,0],[503,26,1511,8],[504,8,1514,8,"onScroll"],[504,16,1514,16],[504,18,1514,18,"_onScroll"],[504,27,1514,28],[505,8,1515,8,"onSelectionChange"],[505,25,1515,25],[505,27,1515,27,"_onSelectionChange"],[505,45,1515,46],[506,8,1516,8,"placeholder"],[506,19,1516,19],[506,21,1516,21,"placeholder"],[506,32,1516,33],[507,8,1517,8,"style"],[507,13,1517,13],[507,15,1517,15,"style"],[507,20,1517,21],[508,8,1518,8,"text"],[508,12,1518,12],[508,14,1518,14,"text"],[508,18,1518,19],[509,8,1519,8,"textBreakStrategy"],[509,25,1519,25],[509,27,1519,27,"props"],[509,32,1519,32],[509,33,1519,33,"textBreakStrategy"],[510,6,1519,51],[511,8,1519,51,"fileName"],[511,16,1519,51],[511,18,1519,51,"_jsxFileName"],[511,30,1519,51],[512,8,1519,51,"lineNumber"],[512,18,1519,51],[513,8,1519,51,"columnNumber"],[513,20,1519,51],[514,6,1519,51],[514,13,1520,7],[514,14,1521,5],[515,4,1522,2],[516,4,1523,2],[516,24,1524,4],[516,28,1524,4,"_jsxDevRuntime"],[516,42,1524,4],[516,43,1524,4,"jsxDEV"],[516,49,1524,4],[516,51,1524,5,"_TextAncestor"],[516,64,1524,5],[516,65,1524,5,"default"],[516,72,1524,17],[516,73,1524,18,"Provider"],[516,81,1524,26],[517,6,1524,27,"value"],[517,11,1524,32],[517,13,1524,34],[517,17,1524,39],[518,6,1524,39,"children"],[518,14,1524,39],[518,16,1524,41,"textInput"],[519,4,1524,50],[520,6,1524,50,"fileName"],[520,14,1524,50],[520,16,1524,50,"_jsxFileName"],[520,28,1524,50],[521,6,1524,50,"lineNumber"],[521,16,1524,50],[522,6,1524,50,"columnNumber"],[522,18,1524,50],[523,4,1524,50],[523,11,1524,74],[523,12,1524,75],[524,2,1526,0],[525,2,1528,0],[525,6,1528,6,"enterKeyHintToReturnTypeMap"],[525,33,1528,33],[525,36,1528,36],[526,4,1529,2,"enter"],[526,9,1529,7],[526,11,1529,9],[526,20,1529,18],[527,4,1530,2,"done"],[527,8,1530,6],[527,10,1530,8],[527,16,1530,14],[528,4,1531,2,"go"],[528,6,1531,4],[528,8,1531,6],[528,12,1531,10],[529,4,1532,2,"next"],[529,8,1532,6],[529,10,1532,8],[529,16,1532,14],[530,4,1533,2,"previous"],[530,12,1533,10],[530,14,1533,12],[530,24,1533,22],[531,4,1534,2,"search"],[531,10,1534,8],[531,12,1534,10],[531,20,1534,18],[532,4,1535,2,"send"],[532,8,1535,6],[532,10,1535,8],[533,2,1536,0],[533,3,1536,1],[534,2,1538,0],[534,6,1538,6,"inputModeToKeyboardTypeMap"],[534,32,1538,32],[534,35,1538,35],[535,4,1539,2,"none"],[535,8,1539,6],[535,10,1539,8],[535,19,1539,17],[536,4,1540,2,"text"],[536,8,1540,6],[536,10,1540,8],[536,19,1540,17],[537,4,1541,2,"decimal"],[537,11,1541,9],[537,13,1541,11],[537,26,1541,24],[538,4,1542,2,"numeric"],[538,11,1542,9],[538,13,1542,11],[538,25,1542,23],[539,4,1543,2,"tel"],[539,7,1543,5],[539,9,1543,7],[539,20,1543,18],[540,4,1544,2,"search"],[540,10,1544,8],[540,12,1544,10,"Platform"],[540,29,1544,18],[540,30,1544,19,"OS"],[540,32,1544,21],[540,37,1544,26],[540,42,1544,31],[540,45,1544,34],[540,57,1544,46],[540,60,1544,49],[540,69,1544,58],[541,4,1545,2,"email"],[541,9,1545,7],[541,11,1545,9],[541,26,1545,24],[542,4,1546,2,"url"],[542,7,1546,5],[542,9,1546,7],[543,2,1547,0],[543,3,1547,1],[545,2,1549,0],[546,2,1550,0],[546,6,1550,6,"autoCompleteWebToAutoCompleteAndroidMap"],[546,45,1550,45],[546,48,1550,48],[547,4,1551,2],[547,19,1551,17],[547,21,1551,19],[547,44,1551,42],[548,4,1552,2],[548,19,1552,17],[548,21,1552,19],[548,46,1552,44],[549,4,1553,2,"bday"],[549,8,1553,6],[549,10,1553,8],[549,26,1553,24],[550,4,1554,2],[550,14,1554,12],[550,16,1554,14],[550,31,1554,29],[551,4,1555,2],[551,16,1555,14],[551,18,1555,16],[551,35,1555,33],[552,4,1556,2],[552,15,1556,13],[552,17,1556,15],[552,33,1556,31],[553,4,1557,2],[553,12,1557,10],[553,14,1557,12],[553,22,1557,20],[554,4,1558,2],[554,12,1558,10],[554,14,1558,12],[554,22,1558,20],[555,4,1559,2],[555,18,1559,16],[555,20,1559,18],[555,34,1559,32],[556,4,1560,2],[556,17,1560,15],[556,19,1560,17],[556,32,1560,30],[557,4,1561,2],[557,15,1561,13],[557,17,1561,15],[557,28,1561,26],[558,4,1562,2,"country"],[558,11,1562,9],[558,13,1562,11],[558,37,1562,35],[559,4,1563,2],[559,22,1563,20],[559,24,1563,22],[559,34,1563,32],[560,4,1564,2,"email"],[560,9,1564,7],[560,11,1564,9],[560,18,1564,16],[561,4,1565,2],[561,22,1565,20],[561,24,1565,22],[561,37,1565,35],[562,4,1566,2],[562,22,1566,20],[562,24,1566,22],[562,37,1566,35],[563,4,1567,2,"name"],[563,8,1567,6],[563,10,1567,8],[563,16,1567,14],[564,4,1568,2],[564,21,1568,19],[564,23,1568,21],[564,36,1568,34],[565,4,1569,2],[565,17,1569,15],[565,19,1569,17],[565,32,1569,30],[566,4,1570,2],[566,16,1570,14],[566,18,1570,16],[566,30,1570,28],[567,4,1571,2],[567,18,1571,16],[567,20,1571,18],[567,34,1571,32],[568,4,1572,2,"off"],[568,7,1572,5],[568,9,1572,7],[568,14,1572,12],[569,4,1573,2],[569,19,1573,17],[569,21,1573,19],[569,30,1573,28],[570,4,1574,2],[570,17,1574,15],[570,19,1574,17],[570,32,1574,30],[571,4,1575,2,"sex"],[571,7,1575,5],[571,9,1575,7],[571,17,1575,15],[572,4,1576,2],[572,20,1576,18],[572,22,1576,20],[572,38,1576,36],[573,4,1577,2,"tel"],[573,7,1577,5],[573,9,1577,7],[573,14,1577,12],[574,4,1578,2],[574,22,1578,20],[574,24,1578,22],[574,42,1578,40],[575,4,1579,2],[575,18,1579,16],[575,20,1579,18],[575,34,1579,32],[576,4,1580,2,"username"],[576,12,1580,10],[576,14,1580,12],[577,2,1581,0],[577,3,1581,1],[579,2,1583,0],[580,2,1584,0],[580,6,1584,6,"autoCompleteWebToTextContentTypeMap"],[580,41,1584,41],[580,44,1584,44],[581,4,1585,2],[581,19,1585,17],[581,21,1585,19],[581,41,1585,39],[582,4,1586,2],[582,19,1586,17],[582,21,1586,19],[582,41,1586,39],[583,4,1587,2,"bday"],[583,8,1587,6],[583,10,1587,8],[583,21,1587,19],[584,4,1588,2],[584,14,1588,12],[584,16,1588,14],[584,30,1588,28],[585,4,1589,2],[585,16,1589,14],[585,18,1589,16],[585,34,1589,32],[586,4,1590,2],[586,15,1590,13],[586,17,1590,15],[586,32,1590,30],[587,4,1591,2],[587,12,1591,10],[587,14,1591,12],[587,38,1591,36],[588,4,1592,2],[588,18,1592,16],[588,20,1592,18],[588,47,1592,45],[589,4,1593,2],[589,17,1593,15],[589,19,1593,17],[589,45,1593,43],[590,4,1594,2],[590,12,1594,10],[590,14,1594,12],[590,36,1594,34],[591,4,1595,2],[591,19,1595,17],[591,21,1595,19],[591,42,1595,40],[592,4,1596,2],[592,24,1596,22],[592,26,1596,24],[592,48,1596,46],[593,4,1597,2],[593,20,1597,18],[593,22,1597,20],[593,44,1597,42],[594,4,1598,2],[594,13,1598,11],[594,15,1598,13],[594,31,1598,29],[595,4,1599,2],[595,15,1599,13],[595,17,1599,15],[595,35,1599,33],[596,4,1600,2],[596,13,1600,11],[596,15,1600,13],[596,31,1600,29],[597,4,1601,2],[597,22,1601,20],[597,24,1601,22],[597,34,1601,32],[598,4,1602,2,"country"],[598,11,1602,9],[598,13,1602,11],[598,26,1602,24],[599,4,1603,2,"email"],[599,9,1603,7],[599,11,1603,9],[599,25,1603,23],[600,4,1604,2,"name"],[600,8,1604,6],[600,10,1604,8],[600,16,1604,14],[601,4,1605,2],[601,21,1605,19],[601,23,1605,21],[601,35,1605,33],[602,4,1606,2],[602,17,1606,15],[602,19,1606,17],[602,31,1606,29],[603,4,1607,2],[603,16,1607,14],[603,18,1607,16],[603,29,1607,27],[604,4,1608,2,"nickname"],[604,12,1608,10],[604,14,1608,12],[604,24,1608,22],[605,4,1609,2],[605,22,1609,20],[605,24,1609,22],[605,36,1609,34],[606,4,1610,2],[606,22,1610,20],[606,24,1610,22],[606,36,1610,34],[607,4,1611,2],[607,18,1611,16],[607,20,1611,18],[607,33,1611,31],[608,4,1612,2,"off"],[608,7,1612,5],[608,9,1612,7],[608,15,1612,13],[609,4,1613,2],[609,19,1613,17],[609,21,1613,19],[609,34,1613,32],[610,4,1614,2,"organization"],[610,16,1614,14],[610,18,1614,16],[610,36,1614,34],[611,4,1615,2],[611,24,1615,22],[611,26,1615,24],[611,36,1615,34],[612,4,1616,2],[612,17,1616,15],[612,19,1616,17],[612,31,1616,29],[613,4,1617,2],[613,20,1617,18],[613,22,1617,20],[613,41,1617,39],[614,4,1618,2,"tel"],[614,7,1618,5],[614,9,1618,7],[614,26,1618,24],[615,4,1619,2,"url"],[615,7,1619,5],[615,9,1619,7],[615,14,1619,12],[616,4,1620,2,"username"],[616,12,1620,10],[616,14,1620,12],[617,2,1621,0],[617,3,1621,1],[618,2,1623,0],[618,6,1623,6,"ExportedForwardRef"],[618,24,1627,1],[618,40,1627,4,"React"],[618,45,1627,9],[618,46,1627,10,"forwardRef"],[618,56,1627,20],[618,57,1627,21],[618,66,1627,30,"TextInput"],[618,75,1627,39,"TextInput"],[618,76,1627,39,"_ref2"],[618,81,1627,39],[618,83,1643,2,"forwardedRef"],[618,95,1643,49],[618,97,1644,2],[619,4,1644,2],[619,8,1644,2,"_ref2$allowFontScalin"],[619,29,1644,2],[619,32,1644,2,"_ref2"],[619,37,1644,2],[619,38,1629,4,"allowFontScaling"],[619,54,1629,20],[620,6,1629,4,"allowFontScaling"],[620,22,1629,20],[620,25,1629,20,"_ref2$allowFontScalin"],[620,46,1629,20],[620,60,1629,23],[620,64,1629,27],[620,67,1629,27,"_ref2$allowFontScalin"],[620,88,1629,27],[621,6,1629,27,"_ref2$rejectResponder"],[621,27,1629,27],[621,30,1629,27,"_ref2"],[621,35,1629,27],[621,36,1630,4,"rejectResponderTermination"],[621,62,1630,30],[622,6,1630,4,"rejectResponderTermination"],[622,32,1630,30],[622,35,1630,30,"_ref2$rejectResponder"],[622,56,1630,30],[622,70,1630,33],[622,74,1630,37],[622,77,1630,37,"_ref2$rejectResponder"],[622,98,1630,37],[623,6,1630,37,"_ref2$underlineColorA"],[623,27,1630,37],[623,30,1630,37,"_ref2"],[623,35,1630,37],[623,36,1631,4,"underlineColorAndroid"],[623,57,1631,25],[624,6,1631,4,"underlineColorAndroid"],[624,27,1631,25],[624,30,1631,25,"_ref2$underlineColorA"],[624,51,1631,25],[624,65,1631,28],[624,78,1631,41],[624,81,1631,41,"_ref2$underlineColorA"],[624,102,1631,41],[625,6,1632,4,"autoComplete"],[625,18,1632,16],[625,21,1632,16,"_ref2"],[625,26,1632,16],[625,27,1632,4,"autoComplete"],[625,39,1632,16],[626,6,1633,4,"textContentType"],[626,21,1633,19],[626,24,1633,19,"_ref2"],[626,29,1633,19],[626,30,1633,4,"textContentType"],[626,45,1633,19],[627,6,1634,4,"readOnly"],[627,14,1634,12],[627,17,1634,12,"_ref2"],[627,22,1634,12],[627,23,1634,4,"readOnly"],[627,31,1634,12],[628,6,1635,4,"editable"],[628,14,1635,12],[628,17,1635,12,"_ref2"],[628,22,1635,12],[628,23,1635,4,"editable"],[628,31,1635,12],[629,6,1636,4,"enterKeyHint"],[629,18,1636,16],[629,21,1636,16,"_ref2"],[629,26,1636,16],[629,27,1636,4,"enterKeyHint"],[629,39,1636,16],[630,6,1637,4,"returnKeyType"],[630,19,1637,17],[630,22,1637,17,"_ref2"],[630,27,1637,17],[630,28,1637,4,"returnKeyType"],[630,41,1637,17],[631,6,1638,4,"inputMode"],[631,15,1638,13],[631,18,1638,13,"_ref2"],[631,23,1638,13],[631,24,1638,4,"inputMode"],[631,33,1638,13],[632,6,1639,4,"showSoftInputOnFocus"],[632,26,1639,24],[632,29,1639,24,"_ref2"],[632,34,1639,24],[632,35,1639,4,"showSoftInputOnFocus"],[632,55,1639,24],[633,6,1640,4,"keyboardType"],[633,18,1640,16],[633,21,1640,16,"_ref2"],[633,26,1640,16],[633,27,1640,4,"keyboardType"],[633,39,1640,16],[634,6,1641,7,"restProps"],[634,15,1641,16],[634,22,1641,16,"_objectWithoutProperties2"],[634,47,1641,16],[634,48,1641,16,"default"],[634,55,1641,16],[634,57,1641,16,"_ref2"],[634,62,1641,16],[634,64,1641,16,"_excluded3"],[634,74,1641,16],[635,4,1645,2],[636,4,1646,2],[636,8,1646,6,"style"],[636,13,1646,11],[636,16,1646,14],[636,20,1646,14,"flattenStyle"],[636,41,1646,26],[636,43,1646,27,"restProps"],[636,52,1646,36],[636,53,1646,37,"style"],[636,58,1646,42],[636,59,1646,43],[637,4,1648,2],[637,8,1648,6,"style"],[637,13,1648,11],[637,15,1648,13,"verticalAlign"],[637,28,1648,26],[637,32,1648,30],[637,36,1648,34],[637,38,1648,36],[638,6,1649,4],[639,6,1650,4],[640,6,1651,4,"style"],[640,11,1651,9],[640,12,1651,10,"textAlignVertical"],[640,29,1651,27],[641,6,1652,6],[642,6,1653,6,"verticalAlignToTextAlignVerticalMap"],[642,41,1653,41],[642,42,1653,42,"style"],[642,47,1653,47],[642,48,1653,48,"verticalAlign"],[642,61,1653,61],[642,62,1653,62],[643,6,1654,4],[644,6,1655,4],[645,6,1656,4],[645,13,1656,11,"style"],[645,18,1656,16],[645,19,1656,17,"verticalAlign"],[645,32,1656,30],[646,4,1657,2],[647,4,1659,2],[647,24,1660,4],[647,28,1660,4,"_jsxDevRuntime"],[647,42,1660,4],[647,43,1660,4,"jsxDEV"],[647,49,1660,4],[647,51,1660,5,"InternalTextInput"],[647,68,1660,22],[648,6,1661,6,"allowFontScaling"],[648,22,1661,22],[648,24,1661,24,"allowFontScaling"],[648,40,1661,41],[649,6,1662,6,"rejectResponderTermination"],[649,32,1662,32],[649,34,1662,34,"rejectResponderTermination"],[649,60,1662,61],[650,6,1663,6,"underlineColorAndroid"],[650,27,1663,27],[650,29,1663,29,"underlineColorAndroid"],[650,50,1663,51],[651,6,1664,6,"editable"],[651,14,1664,14],[651,16,1664,16,"readOnly"],[651,24,1664,24],[651,29,1664,29,"undefined"],[651,38,1664,38],[651,41,1664,41],[651,42,1664,42,"readOnly"],[651,50,1664,50],[651,53,1664,53,"editable"],[651,61,1664,62],[652,6,1665,6,"returnKeyType"],[652,19,1665,19],[652,21,1666,8,"enterKeyHint"],[652,33,1666,20],[652,36,1666,23,"enterKeyHintToReturnTypeMap"],[652,63,1666,50],[652,64,1666,51,"enterKeyHint"],[652,76,1666,63],[652,77,1666,64],[652,80,1666,67,"returnKeyType"],[652,93,1667,7],[653,6,1668,6,"keyboardType"],[653,18,1668,18],[653,20,1669,8,"inputMode"],[653,29,1669,17],[653,32,1669,20,"inputModeToKeyboardTypeMap"],[653,58,1669,46],[653,59,1669,47,"inputMode"],[653,68,1669,56],[653,69,1669,57],[653,72,1669,60,"keyboardType"],[653,84,1670,7],[654,6,1671,6,"showSoftInputOnFocus"],[654,26,1671,26],[654,28,1672,8,"inputMode"],[654,37,1672,17],[654,41,1672,21],[654,45,1672,25],[654,48,1672,28,"showSoftInputOnFocus"],[654,68,1672,48],[654,71,1672,51,"inputMode"],[654,80,1672,60],[654,85,1672,65],[654,91,1673,7],[655,6,1674,6,"autoComplete"],[655,18,1674,18],[655,20,1675,8,"Platform"],[655,37,1675,16],[655,38,1675,17,"OS"],[655,40,1675,19],[655,45,1675,24],[655,54,1675,33],[656,6,1676,12],[657,6,1677,12],[658,6,1678,12,"autoCompleteWebToAutoCompleteAndroidMap"],[658,45,1678,51],[658,46,1678,52,"autoComplete"],[658,58,1678,64],[658,59,1678,65],[658,63,1679,12,"autoComplete"],[658,75,1679,24],[658,78,1680,12,"undefined"],[658,87,1681,7],[659,6,1682,6,"textContentType"],[659,21,1682,21],[659,23,1683,8,"textContentType"],[659,38,1683,23],[659,42,1683,27],[659,46,1683,31],[659,49,1684,12,"textContentType"],[659,64,1684,27],[659,67,1685,12,"Platform"],[659,84,1685,20],[659,85,1685,21,"OS"],[659,87,1685,23],[659,92,1685,28],[659,97,1685,33],[659,101,1686,14,"autoComplete"],[659,113,1686,26],[659,117,1687,14,"autoComplete"],[659,129,1687,26],[659,133,1687,30,"autoCompleteWebToTextContentTypeMap"],[659,168,1687,65],[660,6,1688,14],[661,6,1689,14],[662,6,1690,14,"autoCompleteWebToTextContentTypeMap"],[662,41,1690,49],[662,42,1690,50,"autoComplete"],[662,54,1690,62],[662,55,1690,63],[662,58,1691,14,"textContentType"],[662,73,1692,7],[663,6,1692,7],[663,9,1693,10,"restProps"],[663,18,1693,19],[664,6,1694,6,"forwardedRef"],[664,18,1694,18],[664,20,1694,20,"forwardedRef"],[664,32,1694,33],[665,6,1695,6,"style"],[665,11,1695,11],[665,13,1695,13,"style"],[666,4,1695,19],[667,6,1695,19,"fileName"],[667,14,1695,19],[667,16,1695,19,"_jsxFileName"],[667,28,1695,19],[668,6,1695,19,"lineNumber"],[668,16,1695,19],[669,6,1695,19,"columnNumber"],[669,18,1695,19],[670,4,1695,19],[670,11,1696,5],[670,12,1696,6],[671,2,1698,0],[671,3,1698,1],[671,4,1698,2],[672,2,1700,0,"ExportedForwardRef"],[672,20,1700,18],[672,21,1700,19,"displayName"],[672,32,1700,30],[672,35,1700,33],[672,46,1700,44],[674,2,1702,0],[675,2,1703,0,"ExportedForwardRef"],[675,20,1703,18],[675,21,1703,19,"State"],[675,26,1703,24],[675,29,1703,27],[676,4,1704,2,"currentlyFocusedInput"],[676,25,1704,23],[676,27,1704,25,"TextInputState"],[676,50,1704,39],[676,51,1704,40,"currentlyFocusedInput"],[676,72,1704,61],[677,4,1706,2,"currentlyFocusedField"],[677,25,1706,23],[677,27,1706,25,"TextInputState"],[677,50,1706,39],[677,51,1706,40,"currentlyFocusedField"],[677,72,1706,61],[678,4,1707,2,"focusTextInput"],[678,18,1707,16],[678,20,1707,18,"TextInputState"],[678,43,1707,32],[678,44,1707,33,"focusTextInput"],[678,58,1707,47],[679,4,1708,2,"blurTextInput"],[679,17,1708,15],[679,19,1708,17,"TextInputState"],[679,42,1708,31],[679,43,1708,32,"blurTextInput"],[680,2,1709,0],[680,3,1709,1],[681,2,1720,0],[681,6,1720,6,"styles"],[681,12,1720,12],[681,15,1720,15,"StyleSheet"],[681,34,1720,25],[681,35,1720,26,"create"],[681,41,1720,32],[681,42,1720,33],[682,4,1721,2,"multilineDefault"],[682,20,1721,18],[682,22,1721,20],[683,6,1722,4],[684,6,1723,4],[685,6,1724,4],[686,6,1725,4,"paddingTop"],[686,16,1725,14],[686,18,1725,16],[687,4,1726,2],[688,2,1727,0],[688,3,1727,1],[688,4,1727,2],[689,2,1729,0],[689,6,1729,6,"verticalAlignToTextAlignVerticalMap"],[689,41,1729,41],[689,44,1729,44],[690,4,1730,2,"auto"],[690,8,1730,6],[690,10,1730,8],[690,16,1730,14],[691,4,1731,2,"top"],[691,7,1731,5],[691,9,1731,7],[691,14,1731,12],[692,4,1732,2,"bottom"],[692,10,1732,8],[692,12,1732,10],[692,20,1732,18],[693,4,1733,2,"middle"],[693,10,1733,8],[693,12,1733,10],[694,2,1734,0],[694,3,1734,1],[696,2,1736,0],[697,2,1737,0,"module"],[697,8,1737,6],[697,9,1737,7,"exports"],[697,16,1737,14],[697,19,1737,19,"ExportedForwardRef"],[697,37,1737,59],[698,0,1737,60],[698,3]],"functionMap":{"names":["<global>","emptyFunctionThatReturnsTrue","InternalTextInput","useLayoutEffect$argument_0","<anonymous>","setLocalRef","Object.assign$argument_1.clear","Object.assign$argument_1.isFocused","Object.assign$argument_1.getNativeRef","Object.assign$argument_1.setSelection","_onChange","_onSelectionChange","_onFocus","_onBlur","_onScroll","React.useMemo$argument_0","onPress","TextInput"],"mappings":"AAA;qCC+7B,UD;AEiH;kBC4D;GD+B;kBCY;aCM;ODM;GDE;IGG;UC4B;WDU;UEE;WFE;UGC;WHE;UIC;WJU;KHG;oBQM;GRiB;6BSE;GTa;mBUE;GVK;kBWE;GXK;oBYE;GZE;Ia2C;eCE;ODO;MbI;CFkK;qBiBqG;CjBuE"}},"type":"js/module"}]}