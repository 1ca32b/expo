{"dependencies":[{"name":"@react-navigation/core","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":7,"column":32,"index":121}}],"key":"i0wMeuFkK29k6tj4be7EOXJEiJA="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":0,"index":122},"end":{"line":8,"column":31,"index":153}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useScrollToTop;\n  var _core = _$$_REQUIRE(_dependencyMap[0], \"@react-navigation/core\");\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1], \"react\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function getScrollableNode(ref) {\n    if (ref.current == null) {\n      return null;\n    }\n    if ('scrollToTop' in ref.current || 'scrollTo' in ref.current || 'scrollToOffset' in ref.current || 'scrollResponderScrollTo' in ref.current) {\n      // This is already a scrollable node.\n      return ref.current;\n    } else if ('getScrollResponder' in ref.current) {\n      // If the view is a wrapper like FlatList, SectionList etc.\n      // We need to use `getScrollResponder` to get access to the scroll responder\n      return ref.current.getScrollResponder();\n    } else if ('getNode' in ref.current) {\n      // When a `ScrollView` is wraped in `Animated.createAnimatedComponent`\n      // we need to use `getNode` to get the ref to the actual scrollview.\n      // Note that `getNode` is deprecated in newer versions of react-native\n      // this is why we check if we already have a scrollable node above.\n      return ref.current.getNode();\n    } else {\n      return ref.current;\n    }\n  }\n  function useScrollToTop(ref) {\n    var navigation = React.useContext(_core.NavigationContext);\n    var route = (0, _core.useRoute)();\n    if (navigation === undefined) {\n      throw new Error(\"Couldn't find a navigation object. Is your component inside NavigationContainer?\");\n    }\n    React.useEffect(() => {\n      var tabNavigations = [];\n      var currentNavigation = navigation;\n      // If the screen is nested inside multiple tab navigators, we should scroll to top for any of them\n      // So we need to find all the parent tab navigators and add the listeners there\n      while (currentNavigation) {\n        if (currentNavigation.getState().type === 'tab') {\n          tabNavigations.push(currentNavigation);\n        }\n        currentNavigation = currentNavigation.getParent();\n      }\n      if (tabNavigations.length === 0) {\n        return;\n      }\n      var unsubscribers = tabNavigations.map(tab => {\n        return tab.addListener(\n        // We don't wanna import tab types here to avoid extra deps\n        // in addition, there are multiple tab implementations\n        // @ts-expect-error\n        'tabPress', e => {\n          // We should scroll to top only when the screen is focused\n          var isFocused = navigation.isFocused();\n\n          // In a nested stack navigator, tab press resets the stack to first screen\n          // So we should scroll to top only when we are on first screen\n          var isFirst = tabNavigations.includes(navigation) || navigation.getState().routes[0].key === route.key;\n\n          // Run the operation in the next frame so we're sure all listeners have been run\n          // This is necessary to know if preventDefault() has been called\n          requestAnimationFrame(() => {\n            var scrollable = getScrollableNode(ref);\n            if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n              if ('scrollToTop' in scrollable) {\n                scrollable.scrollToTop();\n              } else if ('scrollTo' in scrollable) {\n                scrollable.scrollTo({\n                  y: 0,\n                  animated: true\n                });\n              } else if ('scrollToOffset' in scrollable) {\n                scrollable.scrollToOffset({\n                  offset: 0,\n                  animated: true\n                });\n              } else if ('scrollResponderScrollTo' in scrollable) {\n                scrollable.scrollResponderScrollTo({\n                  y: 0,\n                  animated: true\n                });\n              }\n            }\n          });\n        });\n      });\n      return () => {\n        unsubscribers.forEach(unsubscribe => unsubscribe());\n      };\n    }, [navigation, ref, route.key]);\n  }\n});","lineCount":96,"map":[[6,2,1,0],[6,6,1,0,"_core"],[6,11,1,0],[6,14,1,0,"_$$_REQUIRE"],[6,25,1,0],[6,26,1,0,"_dependencyMap"],[6,40,1,0],[7,2,8,0],[7,6,8,0,"React"],[7,11,8,0],[7,14,8,0,"_interopRequireWildcard"],[7,37,8,0],[7,38,8,0,"_$$_REQUIRE"],[7,49,8,0],[7,50,8,0,"_dependencyMap"],[7,64,8,0],[8,2,8,31],[8,11,8,31,"_getRequireWildcardCache"],[8,36,8,31,"e"],[8,37,8,31],[8,66,8,31,"WeakMap"],[8,73,8,31],[8,92,8,31,"r"],[8,93,8,31],[8,100,8,31,"WeakMap"],[8,107,8,31],[8,111,8,31,"t"],[8,112,8,31],[8,119,8,31,"WeakMap"],[8,126,8,31],[8,138,8,31,"_getRequireWildcardCache"],[8,162,8,31],[8,174,8,31,"_getRequireWildcardCache"],[8,175,8,31,"e"],[8,176,8,31],[8,187,8,31,"e"],[8,188,8,31],[8,191,8,31,"t"],[8,192,8,31],[8,195,8,31,"r"],[8,196,8,31],[8,201,8,31,"e"],[8,202,8,31],[9,2,8,31],[9,11,8,31,"_interopRequireWildcard"],[9,35,8,31,"e"],[9,36,8,31],[9,38,8,31,"r"],[9,39,8,31],[9,48,8,31,"r"],[9,49,8,31],[9,53,8,31,"e"],[9,54,8,31],[9,58,8,31,"e"],[9,59,8,31],[9,60,8,31,"__esModule"],[9,70,8,31],[9,79,8,31,"e"],[9,80,8,31],[9,95,8,31,"e"],[9,96,8,31],[9,119,8,31,"e"],[9,120,8,31],[9,145,8,31,"e"],[9,146,8,31],[9,157,8,31,"default"],[9,164,8,31],[9,166,8,31,"e"],[9,167,8,31],[9,175,8,31,"t"],[9,176,8,31],[9,179,8,31,"_getRequireWildcardCache"],[9,203,8,31],[9,204,8,31,"r"],[9,205,8,31],[9,212,8,31,"t"],[9,213,8,31],[9,217,8,31,"t"],[9,218,8,31],[9,219,8,31,"has"],[9,222,8,31],[9,223,8,31,"e"],[9,224,8,31],[9,234,8,31,"t"],[9,235,8,31],[9,236,8,31,"get"],[9,239,8,31],[9,240,8,31,"e"],[9,241,8,31],[9,248,8,31,"n"],[9,249,8,31],[9,254,8,31,"__proto__"],[9,263,8,31],[9,273,8,31,"a"],[9,274,8,31],[9,277,8,31,"Object"],[9,283,8,31],[9,284,8,31,"defineProperty"],[9,298,8,31],[9,302,8,31,"Object"],[9,308,8,31],[9,309,8,31,"getOwnPropertyDescriptor"],[9,333,8,31],[9,344,8,31,"u"],[9,345,8,31],[9,349,8,31,"e"],[9,350,8,31],[9,370,8,31,"u"],[9,371,8,31],[9,375,8,31,"Object"],[9,381,8,31],[9,382,8,31,"prototype"],[9,391,8,31],[9,392,8,31,"hasOwnProperty"],[9,406,8,31],[9,407,8,31,"call"],[9,411,8,31],[9,412,8,31,"e"],[9,413,8,31],[9,415,8,31,"u"],[9,416,8,31],[9,425,8,31,"i"],[9,426,8,31],[9,429,8,31,"a"],[9,430,8,31],[9,433,8,31,"Object"],[9,439,8,31],[9,440,8,31,"getOwnPropertyDescriptor"],[9,464,8,31],[9,465,8,31,"e"],[9,466,8,31],[9,468,8,31,"u"],[9,469,8,31],[9,479,8,31,"i"],[9,480,8,31],[9,485,8,31,"i"],[9,486,8,31],[9,487,8,31,"get"],[9,490,8,31],[9,494,8,31,"i"],[9,495,8,31],[9,496,8,31,"set"],[9,499,8,31],[9,503,8,31,"Object"],[9,509,8,31],[9,510,8,31,"defineProperty"],[9,524,8,31],[9,525,8,31,"n"],[9,526,8,31],[9,528,8,31,"u"],[9,529,8,31],[9,531,8,31,"i"],[9,532,8,31],[9,536,8,31,"n"],[9,537,8,31],[9,538,8,31,"u"],[9,539,8,31],[9,543,8,31,"e"],[9,544,8,31],[9,545,8,31,"u"],[9,546,8,31],[9,558,8,31,"n"],[9,559,8,31],[9,560,8,31,"default"],[9,567,8,31],[9,570,8,31,"e"],[9,571,8,31],[9,573,8,31,"t"],[9,574,8,31],[9,578,8,31,"t"],[9,579,8,31],[9,580,8,31,"set"],[9,583,8,31],[9,584,8,31,"e"],[9,585,8,31],[9,587,8,31,"n"],[9,588,8,31],[9,591,8,31,"n"],[9,592,8,31],[10,2,24,0],[10,11,24,9,"getScrollableNode"],[10,28,24,26,"getScrollableNode"],[10,29,24,27,"ref"],[10,32,24,66],[10,34,24,68],[11,4,25,2],[11,8,25,6,"ref"],[11,11,25,9],[11,12,25,10,"current"],[11,19,25,17],[11,23,25,21],[11,27,25,25],[11,29,25,27],[12,6,26,4],[12,13,26,11],[12,17,26,15],[13,4,27,2],[14,4,29,2],[14,8,30,4],[14,21,30,17],[14,25,30,21,"ref"],[14,28,30,24],[14,29,30,25,"current"],[14,36,30,32],[14,40,31,4],[14,50,31,14],[14,54,31,18,"ref"],[14,57,31,21],[14,58,31,22,"current"],[14,65,31,29],[14,69,32,4],[14,85,32,20],[14,89,32,24,"ref"],[14,92,32,27],[14,93,32,28,"current"],[14,100,32,35],[14,104,33,4],[14,129,33,29],[14,133,33,33,"ref"],[14,136,33,36],[14,137,33,37,"current"],[14,144,33,44],[14,146,34,4],[15,6,35,4],[16,6,36,4],[16,13,36,11,"ref"],[16,16,36,14],[16,17,36,15,"current"],[16,24,36,22],[17,4,37,2],[17,5,37,3],[17,11,37,9],[17,15,37,13],[17,35,37,33],[17,39,37,37,"ref"],[17,42,37,40],[17,43,37,41,"current"],[17,50,37,48],[17,52,37,50],[18,6,38,4],[19,6,39,4],[20,6,40,4],[20,13,40,11,"ref"],[20,16,40,14],[20,17,40,15,"current"],[20,24,40,22],[20,25,40,23,"getScrollResponder"],[20,43,40,41],[20,44,40,42],[20,45,40,43],[21,4,41,2],[21,5,41,3],[21,11,41,9],[21,15,41,13],[21,24,41,22],[21,28,41,26,"ref"],[21,31,41,29],[21,32,41,30,"current"],[21,39,41,37],[21,41,41,39],[22,6,42,4],[23,6,43,4],[24,6,44,4],[25,6,45,4],[26,6,46,4],[26,13,46,11,"ref"],[26,16,46,14],[26,17,46,15,"current"],[26,24,46,22],[26,25,46,23,"getNode"],[26,32,46,30],[26,33,46,31],[26,34,46,32],[27,4,47,2],[27,5,47,3],[27,11,47,9],[28,6,48,4],[28,13,48,11,"ref"],[28,16,48,14],[28,17,48,15,"current"],[28,24,48,22],[29,4,49,2],[30,2,50,0],[31,2,52,15],[31,11,52,24,"useScrollToTop"],[31,25,52,38,"useScrollToTop"],[31,26,53,2,"ref"],[31,29,53,41],[31,31,54,2],[32,4,55,2],[32,8,55,8,"navigation"],[32,18,55,18],[32,21,55,21,"React"],[32,26,55,26],[32,27,55,27,"useContext"],[32,37,55,37],[32,38,55,38,"NavigationContext"],[32,61,55,55],[32,62,55,56],[33,4,56,2],[33,8,56,8,"route"],[33,13,56,13],[33,16,56,16],[33,20,56,16,"useRoute"],[33,34,56,24],[33,36,56,25],[33,37,56,26],[34,4,58,2],[34,8,58,6,"navigation"],[34,18,58,16],[34,23,58,21,"undefined"],[34,32,58,30],[34,34,58,32],[35,6,59,4],[35,12,59,10],[35,16,59,14,"Error"],[35,21,59,19],[35,22,60,6],[35,104,61,4],[35,105,61,5],[36,4,62,2],[37,4,64,2,"React"],[37,9,64,7],[37,10,64,8,"useEffect"],[37,19,64,17],[37,20,64,18],[37,26,64,24],[38,6,65,4],[38,10,65,10,"tabNavigations"],[38,24,65,57],[38,27,65,60],[38,29,65,62],[39,6,66,4],[39,10,66,8,"currentNavigation"],[39,27,66,25],[39,30,66,28,"navigation"],[39,40,66,38],[40,6,67,4],[41,6,68,4],[42,6,69,4],[42,13,69,11,"currentNavigation"],[42,30,69,28],[42,32,69,30],[43,8,70,6],[43,12,70,10,"currentNavigation"],[43,29,70,27],[43,30,70,28,"getState"],[43,38,70,36],[43,39,70,37],[43,40,70,38],[43,41,70,39,"type"],[43,45,70,43],[43,50,70,48],[43,55,70,53],[43,57,70,55],[44,10,71,8,"tabNavigations"],[44,24,71,22],[44,25,71,23,"push"],[44,29,71,27],[44,30,71,28,"currentNavigation"],[44,47,71,45],[44,48,71,46],[45,8,72,6],[46,8,74,6,"currentNavigation"],[46,25,74,23],[46,28,74,26,"currentNavigation"],[46,45,74,43],[46,46,74,44,"getParent"],[46,55,74,53],[46,56,74,54],[46,57,74,55],[47,6,75,4],[48,6,77,4],[48,10,77,8,"tabNavigations"],[48,24,77,22],[48,25,77,23,"length"],[48,31,77,29],[48,36,77,34],[48,37,77,35],[48,39,77,37],[49,8,78,6],[50,6,79,4],[51,6,81,4],[51,10,81,10,"unsubscribers"],[51,23,81,23],[51,26,81,26,"tabNavigations"],[51,40,81,40],[51,41,81,41,"map"],[51,44,81,44],[51,45,81,46,"tab"],[51,48,81,49],[51,52,81,54],[52,8,82,6],[52,15,82,13,"tab"],[52,18,82,16],[52,19,82,17,"addListener"],[52,30,82,28],[53,8,83,8],[54,8,84,8],[55,8,85,8],[56,8,86,8],[56,18,86,18],[56,20,87,9,"e"],[56,21,87,38],[56,25,87,43],[57,10,88,10],[58,10,89,10],[58,14,89,16,"isFocused"],[58,23,89,25],[58,26,89,28,"navigation"],[58,36,89,38],[58,37,89,39,"isFocused"],[58,46,89,48],[58,47,89,49],[58,48,89,50],[60,10,91,10],[61,10,92,10],[62,10,93,10],[62,14,93,16,"isFirst"],[62,21,93,23],[62,24,94,12,"tabNavigations"],[62,38,94,26],[62,39,94,27,"includes"],[62,47,94,35],[62,48,94,36,"navigation"],[62,58,94,46],[62,59,94,47],[62,63,95,12,"navigation"],[62,73,95,22],[62,74,95,23,"getState"],[62,82,95,31],[62,83,95,32],[62,84,95,33],[62,85,95,34,"routes"],[62,91,95,40],[62,92,95,41],[62,93,95,42],[62,94,95,43],[62,95,95,44,"key"],[62,98,95,47],[62,103,95,52,"route"],[62,108,95,57],[62,109,95,58,"key"],[62,112,95,61],[64,10,97,10],[65,10,98,10],[66,10,99,10,"requestAnimationFrame"],[66,31,99,31],[66,32,99,32],[66,38,99,38],[67,12,100,12],[67,16,100,18,"scrollable"],[67,26,100,28],[67,29,100,31,"getScrollableNode"],[67,46,100,48],[67,47,100,49,"ref"],[67,50,100,52],[67,51,100,74],[68,12,102,12],[68,16,102,16,"isFocused"],[68,25,102,25],[68,29,102,29,"isFirst"],[68,36,102,36],[68,40,102,40,"scrollable"],[68,50,102,50],[68,54,102,54],[68,55,102,55,"e"],[68,56,102,56],[68,57,102,57,"defaultPrevented"],[68,73,102,73],[68,75,102,75],[69,14,103,14],[69,18,103,18],[69,31,103,31],[69,35,103,35,"scrollable"],[69,45,103,45],[69,47,103,47],[70,16,104,16,"scrollable"],[70,26,104,26],[70,27,104,27,"scrollToTop"],[70,38,104,38],[70,39,104,39],[70,40,104,40],[71,14,105,14],[71,15,105,15],[71,21,105,21],[71,25,105,25],[71,35,105,35],[71,39,105,39,"scrollable"],[71,49,105,49],[71,51,105,51],[72,16,106,16,"scrollable"],[72,26,106,26],[72,27,106,27,"scrollTo"],[72,35,106,35],[72,36,106,36],[73,18,106,38,"y"],[73,19,106,39],[73,21,106,41],[73,22,106,42],[74,18,106,44,"animated"],[74,26,106,52],[74,28,106,54],[75,16,106,59],[75,17,106,60],[75,18,106,61],[76,14,107,14],[76,15,107,15],[76,21,107,21],[76,25,107,25],[76,41,107,41],[76,45,107,45,"scrollable"],[76,55,107,55],[76,57,107,57],[77,16,108,16,"scrollable"],[77,26,108,26],[77,27,108,27,"scrollToOffset"],[77,41,108,41],[77,42,108,42],[78,18,108,44,"offset"],[78,24,108,50],[78,26,108,52],[78,27,108,53],[79,18,108,55,"animated"],[79,26,108,63],[79,28,108,65],[80,16,108,70],[80,17,108,71],[80,18,108,72],[81,14,109,14],[81,15,109,15],[81,21,109,21],[81,25,109,25],[81,50,109,50],[81,54,109,54,"scrollable"],[81,64,109,64],[81,66,109,66],[82,16,110,16,"scrollable"],[82,26,110,26],[82,27,110,27,"scrollResponderScrollTo"],[82,50,110,50],[82,51,110,51],[83,18,110,53,"y"],[83,19,110,54],[83,21,110,56],[83,22,110,57],[84,18,110,59,"animated"],[84,26,110,67],[84,28,110,69],[85,16,110,74],[85,17,110,75],[85,18,110,76],[86,14,111,14],[87,12,112,12],[88,10,113,10],[88,11,113,11],[88,12,113,12],[89,8,114,8],[89,9,115,6],[89,10,115,7],[90,6,116,4],[90,7,116,5],[90,8,116,6],[91,6,118,4],[91,13,118,11],[91,19,118,17],[92,8,119,6,"unsubscribers"],[92,21,119,19],[92,22,119,20,"forEach"],[92,29,119,27],[92,30,119,29,"unsubscribe"],[92,41,119,40],[92,45,119,45,"unsubscribe"],[92,56,119,56],[92,57,119,57],[92,58,119,58],[92,59,119,59],[93,6,120,4],[93,7,120,5],[94,4,121,2],[94,5,121,3],[94,7,121,5],[94,8,121,6,"navigation"],[94,18,121,16],[94,20,121,18,"ref"],[94,23,121,21],[94,25,121,23,"route"],[94,30,121,28],[94,31,121,29,"key"],[94,34,121,32],[94,35,121,33],[94,36,121,34],[95,2,122,0],[96,0,122,1],[96,3]],"functionMap":{"names":["<global>","getScrollableNode","useScrollToTop","React.useEffect$argument_0","tabNavigations.map$argument_0","tab.addListener$argument_1","requestAnimationFrame$argument_0","<anonymous>","unsubscribers.forEach$argument_0"],"mappings":"AAA;ACuB;CD0B;eEE;kBCY;6CCiB;QCM;gCCY;WDc;SDC;KDE;WIE;4BCC,8BD;KJC;GDC;CFC"}},"type":"js/module"}]}