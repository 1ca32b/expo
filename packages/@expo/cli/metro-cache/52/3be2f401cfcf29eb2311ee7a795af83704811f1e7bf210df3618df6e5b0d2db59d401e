{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":0,"index":12653}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":0,"index":12653}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":0,"index":12653}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":0,"index":12653}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":0,"index":12653}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":0,"index":12653}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"../../Core/Devtools/parseErrorStack","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":21,"column":0,"index":456},"end":{"line":21,"column":66,"index":522}}],"key":"FgxQzv74nv4TEARyMhTrzrRRqIo="}},{"name":"../../NativeModules/specs/NativeDevSettings","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":22,"column":0,"index":523},"end":{"line":22,"column":76,"index":599}}],"key":"wrzW3tGGGAhLjsLSVM808Cn2bTA="}},{"name":"../../NativeModules/specs/NativeLogBox","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":23,"column":0,"index":600},"end":{"line":23,"column":66,"index":666}}],"key":"gVaxfWXVRxL2zJT5JNlaaR/Xrgs="}},{"name":"./LogBoxLog","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":24,"column":0,"index":667},"end":{"line":24,"column":36,"index":703}}],"key":"NkM4+L+MmwTJD8nd0tRosHgq5Og="}},{"name":"./parseLogBoxLog","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":25,"column":0,"index":704},"end":{"line":25,"column":54,"index":758}}],"key":"Zbz8QjDcDG2C2PQ9AuAV++r6EsA="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":26,"column":0,"index":759},"end":{"line":26,"column":31,"index":790}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":0,"index":12653}}],"key":"o13xJBIQrtUiTCNVAdR54EGZcWw="}},{"name":"../../Core/ExceptionsManager","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":106,"column":28,"index":2664},"end":{"line":106,"column":67,"index":2703}}],"key":"rh1lsYexuAEiAxWxhF9+r+tk2ws="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addException = addException;\n  exports.addIgnorePatterns = addIgnorePatterns;\n  exports.addLog = addLog;\n  exports.checkWarningFilter = checkWarningFilter;\n  exports.clear = clear;\n  exports.clearErrors = clearErrors;\n  exports.clearWarnings = clearWarnings;\n  exports.dismiss = dismiss;\n  exports.getAppInfo = getAppInfo;\n  exports.getIgnorePatterns = getIgnorePatterns;\n  exports.isDisabled = isDisabled;\n  exports.isLogBoxErrorMessage = isLogBoxErrorMessage;\n  exports.isMessageIgnored = isMessageIgnored;\n  exports.observe = observe;\n  exports.reportLogBoxError = reportLogBoxError;\n  exports.retrySymbolicateLogNow = retrySymbolicateLogNow;\n  exports.setAppInfo = setAppInfo;\n  exports.setDisabled = setDisabled;\n  exports.setSelectedLog = setSelectedLog;\n  exports.setWarningFilter = setWarningFilter;\n  exports.symbolicateLogLazy = symbolicateLogLazy;\n  exports.symbolicateLogNow = symbolicateLogNow;\n  exports.withSubscription = withSubscription;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _parseErrorStack = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../../Core/Devtools/parseErrorStack\"));\n  var _NativeDevSettings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../../NativeModules/specs/NativeDevSettings\"));\n  var _NativeLogBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../../NativeModules/specs/NativeLogBox\"));\n  var _LogBoxLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./LogBoxLog\"));\n  var _parseLogBoxLog = _$$_REQUIRE(_dependencyMap[10], \"./parseLogBoxLog\");\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11], \"react\"));\n  var _jsxDevRuntime = _$$_REQUIRE(_dependencyMap[12], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"/Users/evanbacon/Documents/GitHub/expo/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js\";\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  var observers = new Set();\n  var ignorePatterns = new Set();\n  var appInfo = null;\n  var logs = new Set();\n  var updateTimeout = null;\n  var _isDisabled = false;\n  var _selectedIndex = -1;\n  var hasShownFuseboxWarningsMigrationMessage = false;\n  var warningFilter = function (format) {\n    return {\n      finalFormat: format,\n      forceDialogImmediately: false,\n      suppressDialog_LEGACY: true,\n      suppressCompletely: false,\n      monitorEvent: 'unknown',\n      monitorListVersion: 0,\n      monitorSampleRate: 1\n    };\n  };\n  var LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';\n  function getNextState() {\n    return {\n      logs,\n      isDisabled: _isDisabled,\n      selectedLogIndex: _selectedIndex\n    };\n  }\n  function reportLogBoxError(error, componentStack) {\n    var ExceptionsManager = _$$_REQUIRE(_dependencyMap[13], \"../../Core/ExceptionsManager\");\n    error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n    if (componentStack != null) {\n      error.componentStack = componentStack;\n    }\n    ExceptionsManager.handleException(error, /* isFatal */true);\n  }\n  function isLogBoxErrorMessage(message) {\n    return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n  }\n  function isMessageIgnored(message) {\n    for (var pattern of ignorePatterns) {\n      if (pattern instanceof RegExp && pattern.test(message) || typeof pattern === 'string' && message.includes(pattern)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function handleUpdate() {\n    if (updateTimeout == null) {\n      updateTimeout = setImmediate(() => {\n        updateTimeout = null;\n        var nextState = getNextState();\n        observers.forEach(_ref => {\n          var observer = _ref.observer;\n          return observer(nextState);\n        });\n      });\n    }\n  }\n  function appendNewLog(newLog) {\n    // Don't want store these logs because they trigger a\n    // state update when we add them to the store.\n    if (isMessageIgnored(newLog.message.content)) {\n      return;\n    }\n\n    // If the next log has the same category as the previous one\n    // then roll it up into the last log in the list by incrementing\n    // the count (similar to how Chrome does it).\n    var lastLog = Array.from(logs).pop();\n    if (lastLog && lastLog.category === newLog.category) {\n      lastLog.incrementCount();\n      handleUpdate();\n      return;\n    }\n    if (newLog.level === 'fatal') {\n      // If possible, to avoid jank, we don't want to open the error before\n      // it's symbolicated. To do that, we optimistically wait for\n      // symbolication for up to a second before adding the log.\n      var OPTIMISTIC_WAIT_TIME = 1000;\n      var addPendingLog = () => {\n        logs.add(newLog);\n        if (_selectedIndex < 0) {\n          setSelectedLog(logs.size - 1);\n        } else {\n          handleUpdate();\n        }\n        addPendingLog = null;\n      };\n      var optimisticTimeout = setTimeout(() => {\n        if (addPendingLog) {\n          addPendingLog();\n        }\n      }, OPTIMISTIC_WAIT_TIME);\n      newLog.symbolicate(status => {\n        if (addPendingLog && status !== 'PENDING') {\n          addPendingLog();\n          clearTimeout(optimisticTimeout);\n        } else if (status !== 'PENDING') {\n          // The log has already been added but we need to trigger a render.\n          handleUpdate();\n        }\n      });\n    } else if (newLog.level === 'syntax') {\n      logs.add(newLog);\n      setSelectedLog(logs.size - 1);\n    } else {\n      logs.add(newLog);\n      handleUpdate();\n    }\n  }\n  function addLog(log) {\n    if (log.level === 'warn' && global.__FUSEBOX_HAS_FULL_CONSOLE_SUPPORT__) {\n      // Under Fusebox, don't report warnings to LogBox.\n      showFuseboxWarningsMigrationMessageOnce();\n      return;\n    }\n    var errorForStackTrace = new Error();\n\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setImmediate(() => {\n      try {\n        var stack = (0, _parseErrorStack.default)(log.stack ?? errorForStackTrace?.stack);\n        appendNewLog(new _LogBoxLog.default({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack,\n          category: log.category,\n          componentStack: log.componentStack,\n          componentStackType: log.componentStackType || 'legacy'\n        }));\n      } catch (error) {\n        reportLogBoxError(error);\n      }\n    });\n  }\n  function addException(error) {\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setImmediate(() => {\n      try {\n        appendNewLog(new _LogBoxLog.default((0, _parseLogBoxLog.parseLogBoxException)(error)));\n      } catch (loggingError) {\n        reportLogBoxError(loggingError);\n      }\n    });\n  }\n  function symbolicateLogNow(log) {\n    log.symbolicate(() => {\n      handleUpdate();\n    });\n  }\n  function retrySymbolicateLogNow(log) {\n    log.retrySymbolicate(() => {\n      handleUpdate();\n    });\n  }\n  function symbolicateLogLazy(log) {\n    log.symbolicate();\n  }\n  function clear() {\n    if (logs.size > 0) {\n      logs = new Set();\n      setSelectedLog(-1);\n    }\n  }\n  function setSelectedLog(proposedNewIndex) {\n    var oldIndex = _selectedIndex;\n    var newIndex = proposedNewIndex;\n    var logArray = Array.from(logs);\n    var index = logArray.length - 1;\n    while (index >= 0) {\n      // The latest syntax error is selected and displayed before all other logs.\n      if (logArray[index].level === 'syntax') {\n        newIndex = index;\n        break;\n      }\n      index -= 1;\n    }\n    _selectedIndex = newIndex;\n    handleUpdate();\n    if (_NativeLogBox.default) {\n      setTimeout(() => {\n        if (oldIndex < 0 && newIndex >= 0) {\n          _NativeLogBox.default.show();\n        } else if (oldIndex >= 0 && newIndex < 0) {\n          _NativeLogBox.default.hide();\n        }\n      }, 0);\n    }\n  }\n  function clearWarnings() {\n    var newLogs = Array.from(logs).filter(log => log.level !== 'warn');\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n      handleUpdate();\n    }\n  }\n  function clearErrors() {\n    var newLogs = Array.from(logs).filter(log => log.level !== 'error' && log.level !== 'fatal');\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n    }\n  }\n  function dismiss(log) {\n    if (logs.has(log)) {\n      logs.delete(log);\n      handleUpdate();\n    }\n  }\n  function setWarningFilter(filter) {\n    warningFilter = filter;\n  }\n  function setAppInfo(info) {\n    appInfo = info;\n  }\n  function getAppInfo() {\n    return appInfo != null ? appInfo() : null;\n  }\n  function checkWarningFilter(format) {\n    return warningFilter(format);\n  }\n  function getIgnorePatterns() {\n    return Array.from(ignorePatterns);\n  }\n  function addIgnorePatterns(patterns) {\n    var existingSize = ignorePatterns.size;\n    // The same pattern may be added multiple times, but adding a new pattern\n    // can be expensive so let's find only the ones that are new.\n    patterns.forEach(pattern => {\n      if (pattern instanceof RegExp) {\n        for (var existingPattern of ignorePatterns) {\n          if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n            return;\n          }\n        }\n        ignorePatterns.add(pattern);\n      }\n      ignorePatterns.add(pattern);\n    });\n    if (ignorePatterns.size === existingSize) {\n      return;\n    }\n    // We need to recheck all of the existing logs.\n    // This allows adding an ignore pattern anywhere in the codebase.\n    // Without this, if you ignore a pattern after the a log is created,\n    // then we would keep showing the log.\n    logs = new Set(Array.from(logs).filter(log => !isMessageIgnored(log.message.content)));\n    handleUpdate();\n  }\n  function setDisabled(value) {\n    if (value === _isDisabled) {\n      return;\n    }\n    _isDisabled = value;\n    handleUpdate();\n  }\n  function isDisabled() {\n    return _isDisabled;\n  }\n  function observe(observer) {\n    var subscription = {\n      observer\n    };\n    observers.add(subscription);\n    observer(getNextState());\n    return {\n      unsubscribe() {\n        observers.delete(subscription);\n      }\n    };\n  }\n  function withSubscription(WrappedComponent) {\n    var LogBoxStateSubscription = /*#__PURE__*/function (_React$Component) {\n      function LogBoxStateSubscription() {\n        var _this;\n        (0, _classCallCheck2.default)(this, LogBoxStateSubscription);\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        _this = _callSuper(this, LogBoxStateSubscription, [...args]);\n        _this.state = {\n          logs: new Set(),\n          isDisabled: false,\n          hasError: false,\n          selectedLogIndex: -1\n        };\n        return _this;\n      }\n      (0, _inherits2.default)(LogBoxStateSubscription, _React$Component);\n      return (0, _createClass2.default)(LogBoxStateSubscription, [{\n        key: \"componentDidCatch\",\n        value: function componentDidCatch(err, errorInfo) {\n          /* $FlowFixMe[class-object-subtyping] added when improving typing for\n           * this parameters */\n          reportLogBoxError(err, errorInfo.componentStack);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (this.state.hasError) {\n            // This happens when the component failed to render, in which case we delegate to the native redbox.\n            // We can't show anyback fallback UI here, because the error may be with <View> or <Text>.\n            return null;\n          }\n          return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(WrappedComponent, {\n            logs: Array.from(this.state.logs),\n            isDisabled: this.state.isDisabled,\n            selectedLogIndex: this.state.selectedLogIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 9\n          }, this);\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          this._subscription = observe(data => {\n            this.setState(data);\n          });\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this._subscription != null) {\n            this._subscription.unsubscribe();\n          }\n        }\n      }], [{\n        key: \"getDerivedStateFromError\",\n        value: function getDerivedStateFromError() {\n          return {\n            hasError: true\n          };\n        }\n      }]);\n    }(React.Component);\n    return LogBoxStateSubscription;\n  }\n  function showFuseboxWarningsMigrationMessageOnce() {\n    if (hasShownFuseboxWarningsMigrationMessage) {\n      return;\n    }\n    hasShownFuseboxWarningsMigrationMessage = true;\n    appendNewLog(new _LogBoxLog.default({\n      level: 'warn',\n      message: {\n        content: 'Open debugger to view warnings.',\n        substitutions: []\n      },\n      isComponentError: false,\n      stack: [],\n      category: 'fusebox-warnings-migration',\n      componentStack: [],\n      onNotificationPress: () => {\n        if (_NativeDevSettings.default.openDebugger) {\n          _NativeDevSettings.default.openDebugger();\n        }\n        clearWarnings();\n      }\n    }));\n  }\n});","lineCount":421,"map":[[34,2,21,0],[34,6,21,0,"_parseErrorStack"],[34,22,21,0],[34,25,21,0,"_interopRequireDefault"],[34,47,21,0],[34,48,21,0,"_$$_REQUIRE"],[34,59,21,0],[34,60,21,0,"_dependencyMap"],[34,74,21,0],[35,2,22,0],[35,6,22,0,"_NativeDevSettings"],[35,24,22,0],[35,27,22,0,"_interopRequireDefault"],[35,49,22,0],[35,50,22,0,"_$$_REQUIRE"],[35,61,22,0],[35,62,22,0,"_dependencyMap"],[35,76,22,0],[36,2,23,0],[36,6,23,0,"_NativeLogBox"],[36,19,23,0],[36,22,23,0,"_interopRequireDefault"],[36,44,23,0],[36,45,23,0,"_$$_REQUIRE"],[36,56,23,0],[36,57,23,0,"_dependencyMap"],[36,71,23,0],[37,2,24,0],[37,6,24,0,"_LogBoxLog"],[37,16,24,0],[37,19,24,0,"_interopRequireDefault"],[37,41,24,0],[37,42,24,0,"_$$_REQUIRE"],[37,53,24,0],[37,54,24,0,"_dependencyMap"],[37,68,24,0],[38,2,25,0],[38,6,25,0,"_parseLogBoxLog"],[38,21,25,0],[38,24,25,0,"_$$_REQUIRE"],[38,35,25,0],[38,36,25,0,"_dependencyMap"],[38,50,25,0],[39,2,26,0],[39,6,26,0,"React"],[39,11,26,0],[39,14,26,0,"_interopRequireWildcard"],[39,37,26,0],[39,38,26,0,"_$$_REQUIRE"],[39,49,26,0],[39,50,26,0,"_dependencyMap"],[39,64,26,0],[40,2,26,31],[40,6,26,31,"_jsxDevRuntime"],[40,20,26,31],[40,23,26,31,"_$$_REQUIRE"],[40,34,26,31],[40,35,26,31,"_dependencyMap"],[40,49,26,31],[41,2,26,31],[41,6,26,31,"_jsxFileName"],[41,18,26,31],[42,2,1,0],[43,0,2,0],[44,0,3,0],[45,0,4,0],[46,0,5,0],[47,0,6,0],[48,0,7,0],[49,0,8,0],[50,0,9,0],[51,2,1,0],[51,11,1,0,"_getRequireWildcardCache"],[51,36,1,0,"e"],[51,37,1,0],[51,66,1,0,"WeakMap"],[51,73,1,0],[51,92,1,0,"r"],[51,93,1,0],[51,100,1,0,"WeakMap"],[51,107,1,0],[51,111,1,0,"t"],[51,112,1,0],[51,119,1,0,"WeakMap"],[51,126,1,0],[51,138,1,0,"_getRequireWildcardCache"],[51,162,1,0],[51,174,1,0,"_getRequireWildcardCache"],[51,175,1,0,"e"],[51,176,1,0],[51,187,1,0,"e"],[51,188,1,0],[51,191,1,0,"t"],[51,192,1,0],[51,195,1,0,"r"],[51,196,1,0],[51,201,1,0,"e"],[51,202,1,0],[52,2,1,0],[52,11,1,0,"_interopRequireWildcard"],[52,35,1,0,"e"],[52,36,1,0],[52,38,1,0,"r"],[52,39,1,0],[52,48,1,0,"r"],[52,49,1,0],[52,53,1,0,"e"],[52,54,1,0],[52,58,1,0,"e"],[52,59,1,0],[52,60,1,0,"__esModule"],[52,70,1,0],[52,79,1,0,"e"],[52,80,1,0],[52,95,1,0,"e"],[52,96,1,0],[52,119,1,0,"e"],[52,120,1,0],[52,145,1,0,"e"],[52,146,1,0],[52,157,1,0,"default"],[52,164,1,0],[52,166,1,0,"e"],[52,167,1,0],[52,175,1,0,"t"],[52,176,1,0],[52,179,1,0,"_getRequireWildcardCache"],[52,203,1,0],[52,204,1,0,"r"],[52,205,1,0],[52,212,1,0,"t"],[52,213,1,0],[52,217,1,0,"t"],[52,218,1,0],[52,219,1,0,"has"],[52,222,1,0],[52,223,1,0,"e"],[52,224,1,0],[52,234,1,0,"t"],[52,235,1,0],[52,236,1,0,"get"],[52,239,1,0],[52,240,1,0,"e"],[52,241,1,0],[52,248,1,0,"n"],[52,249,1,0],[52,254,1,0,"__proto__"],[52,263,1,0],[52,273,1,0,"a"],[52,274,1,0],[52,277,1,0,"Object"],[52,283,1,0],[52,284,1,0,"defineProperty"],[52,298,1,0],[52,302,1,0,"Object"],[52,308,1,0],[52,309,1,0,"getOwnPropertyDescriptor"],[52,333,1,0],[52,344,1,0,"u"],[52,345,1,0],[52,349,1,0,"e"],[52,350,1,0],[52,370,1,0,"u"],[52,371,1,0],[52,375,1,0,"Object"],[52,381,1,0],[52,382,1,0,"prototype"],[52,391,1,0],[52,392,1,0,"hasOwnProperty"],[52,406,1,0],[52,407,1,0,"call"],[52,411,1,0],[52,412,1,0,"e"],[52,413,1,0],[52,415,1,0,"u"],[52,416,1,0],[52,425,1,0,"i"],[52,426,1,0],[52,429,1,0,"a"],[52,430,1,0],[52,433,1,0,"Object"],[52,439,1,0],[52,440,1,0,"getOwnPropertyDescriptor"],[52,464,1,0],[52,465,1,0,"e"],[52,466,1,0],[52,468,1,0,"u"],[52,469,1,0],[52,479,1,0,"i"],[52,480,1,0],[52,485,1,0,"i"],[52,486,1,0],[52,487,1,0,"get"],[52,490,1,0],[52,494,1,0,"i"],[52,495,1,0],[52,496,1,0,"set"],[52,499,1,0],[52,503,1,0,"Object"],[52,509,1,0],[52,510,1,0,"defineProperty"],[52,524,1,0],[52,525,1,0,"n"],[52,526,1,0],[52,528,1,0,"u"],[52,529,1,0],[52,531,1,0,"i"],[52,532,1,0],[52,536,1,0,"n"],[52,537,1,0],[52,538,1,0,"u"],[52,539,1,0],[52,543,1,0,"e"],[52,544,1,0],[52,545,1,0,"u"],[52,546,1,0],[52,558,1,0,"n"],[52,559,1,0],[52,560,1,0,"default"],[52,567,1,0],[52,570,1,0,"e"],[52,571,1,0],[52,573,1,0,"t"],[52,574,1,0],[52,578,1,0,"t"],[52,579,1,0],[52,580,1,0,"set"],[52,583,1,0],[52,584,1,0,"e"],[52,585,1,0],[52,587,1,0,"n"],[52,588,1,0],[52,591,1,0,"n"],[52,592,1,0],[53,2,1,0],[53,11,1,0,"_callSuper"],[53,22,1,0,"t"],[53,23,1,0],[53,25,1,0,"o"],[53,26,1,0],[53,28,1,0,"e"],[53,29,1,0],[53,40,1,0,"o"],[53,41,1,0],[53,48,1,0,"_getPrototypeOf2"],[53,64,1,0],[53,65,1,0,"default"],[53,72,1,0],[53,74,1,0,"o"],[53,75,1,0],[53,82,1,0,"_possibleConstructorReturn2"],[53,109,1,0],[53,110,1,0,"default"],[53,117,1,0],[53,119,1,0,"t"],[53,120,1,0],[53,122,1,0,"_isNativeReflectConstruct"],[53,147,1,0],[53,152,1,0,"Reflect"],[53,159,1,0],[53,160,1,0,"construct"],[53,169,1,0],[53,170,1,0,"o"],[53,171,1,0],[53,173,1,0,"e"],[53,174,1,0],[53,186,1,0,"_getPrototypeOf2"],[53,202,1,0],[53,203,1,0,"default"],[53,210,1,0],[53,212,1,0,"t"],[53,213,1,0],[53,215,1,0,"constructor"],[53,226,1,0],[53,230,1,0,"o"],[53,231,1,0],[53,232,1,0,"apply"],[53,237,1,0],[53,238,1,0,"t"],[53,239,1,0],[53,241,1,0,"e"],[53,242,1,0],[54,2,1,0],[54,11,1,0,"_isNativeReflectConstruct"],[54,37,1,0],[54,51,1,0,"t"],[54,52,1,0],[54,56,1,0,"Boolean"],[54,63,1,0],[54,64,1,0,"prototype"],[54,73,1,0],[54,74,1,0,"valueOf"],[54,81,1,0],[54,82,1,0,"call"],[54,86,1,0],[54,87,1,0,"Reflect"],[54,94,1,0],[54,95,1,0,"construct"],[54,104,1,0],[54,105,1,0,"Boolean"],[54,112,1,0],[54,145,1,0,"t"],[54,146,1,0],[54,159,1,0,"_isNativeReflectConstruct"],[54,184,1,0],[54,196,1,0,"_isNativeReflectConstruct"],[54,197,1,0],[54,210,1,0,"t"],[54,211,1,0],[55,2,70,0],[55,6,70,6,"observers"],[55,15,70,47],[55,18,70,50],[55,22,70,54,"Set"],[55,25,70,57],[55,26,70,58],[55,27,70,59],[56,2,71,0],[56,6,71,6,"ignorePatterns"],[56,20,71,40],[56,23,71,43],[56,27,71,47,"Set"],[56,30,71,50],[56,31,71,51],[56,32,71,52],[57,2,72,0],[57,6,72,4,"appInfo"],[57,13,72,27],[57,16,72,30],[57,20,72,34],[58,2,73,0],[58,6,73,4,"logs"],[58,10,73,20],[58,13,73,23],[58,17,73,27,"Set"],[58,20,73,30],[58,21,73,31],[58,22,73,32],[59,2,74,0],[59,6,74,4,"updateTimeout"],[59,19,74,36],[59,22,74,39],[59,26,74,43],[60,2,75,0],[60,6,75,4,"_isDisabled"],[60,17,75,15],[60,20,75,18],[60,25,75,23],[61,2,76,0],[61,6,76,4,"_selectedIndex"],[61,20,76,18],[61,23,76,21],[61,24,76,22],[61,25,76,23],[62,2,77,0],[62,6,77,4,"hasShownFuseboxWarningsMigrationMessage"],[62,45,77,43],[62,48,77,46],[62,53,77,51],[63,2,79,0],[63,6,79,4,"warningFilter"],[63,19,79,32],[63,22,79,35],[63,31,79,35,"warningFilter"],[63,32,79,45,"format"],[63,38,79,51],[63,40,79,53],[64,4,80,2],[64,11,80,9],[65,6,81,4,"finalFormat"],[65,17,81,15],[65,19,81,17,"format"],[65,25,81,23],[66,6,82,4,"forceDialogImmediately"],[66,28,82,26],[66,30,82,28],[66,35,82,33],[67,6,83,4,"suppressDialog_LEGACY"],[67,27,83,25],[67,29,83,27],[67,33,83,31],[68,6,84,4,"suppressCompletely"],[68,24,84,22],[68,26,84,24],[68,31,84,29],[69,6,85,4,"monitorEvent"],[69,18,85,16],[69,20,85,18],[69,29,85,27],[70,6,86,4,"monitorListVersion"],[70,24,86,22],[70,26,86,24],[70,27,86,25],[71,6,87,4,"monitorSampleRate"],[71,23,87,21],[71,25,87,23],[72,4,88,2],[72,5,88,3],[73,2,89,0],[73,3,89,1],[74,2,91,0],[74,6,91,6,"LOGBOX_ERROR_MESSAGE"],[74,26,91,26],[74,29,92,2],[74,101,92,74],[75,2,94,0],[75,11,94,9,"getNextState"],[75,23,94,21,"getNextState"],[75,24,94,21],[75,26,94,24],[76,4,95,2],[76,11,95,9],[77,6,96,4,"logs"],[77,10,96,8],[78,6,97,4,"isDisabled"],[78,16,97,14],[78,18,97,16,"_isDisabled"],[78,29,97,27],[79,6,98,4,"selectedLogIndex"],[79,22,98,20],[79,24,98,22,"_selectedIndex"],[80,4,99,2],[80,5,99,3],[81,2,100,0],[82,2,102,7],[82,11,102,16,"reportLogBoxError"],[82,28,102,33,"reportLogBoxError"],[82,29,103,2,"error"],[82,34,103,22],[82,36,104,2,"componentStack"],[82,50,104,25],[82,52,105,8],[83,4,106,2],[83,8,106,8,"ExceptionsManager"],[83,25,106,25],[83,28,106,28,"require"],[83,39,106,35],[83,40,106,35,"_dependencyMap"],[83,54,106,35],[83,90,106,66],[83,91,106,67],[84,4,108,2,"error"],[84,9,108,7],[84,10,108,8,"message"],[84,17,108,15],[84,20,108,18],[84,23,108,21,"LOGBOX_ERROR_MESSAGE"],[84,43,108,41],[84,50,108,48,"error"],[84,55,108,53],[84,56,108,54,"message"],[84,63,108,61],[84,65,108,63],[85,4,109,2],[85,8,109,6,"componentStack"],[85,22,109,20],[85,26,109,24],[85,30,109,28],[85,32,109,30],[86,6,110,4,"error"],[86,11,110,9],[86,12,110,10,"componentStack"],[86,26,110,24],[86,29,110,27,"componentStack"],[86,43,110,41],[87,4,111,2],[88,4,112,2,"ExceptionsManager"],[88,21,112,19],[88,22,112,20,"handleException"],[88,37,112,35],[88,38,112,36,"error"],[88,43,112,41],[88,45,112,43],[88,58,112,57],[88,62,112,61],[88,63,112,62],[89,2,113,0],[90,2,115,7],[90,11,115,16,"isLogBoxErrorMessage"],[90,31,115,36,"isLogBoxErrorMessage"],[90,32,115,37,"message"],[90,39,115,52],[90,41,115,63],[91,4,116,2],[91,11,116,9],[91,18,116,16,"message"],[91,25,116,23],[91,30,116,28],[91,38,116,36],[91,42,116,40,"message"],[91,49,116,47],[91,50,116,48,"includes"],[91,58,116,56],[91,59,116,57,"LOGBOX_ERROR_MESSAGE"],[91,79,116,77],[91,80,116,78],[92,2,117,0],[93,2,119,7],[93,11,119,16,"isMessageIgnored"],[93,27,119,32,"isMessageIgnored"],[93,28,119,33,"message"],[93,35,119,48],[93,37,119,59],[94,4,120,2],[94,9,120,7],[94,13,120,13,"pattern"],[94,20,120,20],[94,24,120,24,"ignorePatterns"],[94,38,120,38],[94,40,120,40],[95,6,121,4],[95,10,122,7,"pattern"],[95,17,122,14],[95,29,122,26,"RegExp"],[95,35,122,32],[95,39,122,36,"pattern"],[95,46,122,43],[95,47,122,44,"test"],[95,51,122,48],[95,52,122,49,"message"],[95,59,122,56],[95,60,122,57],[95,64,123,7],[95,71,123,14,"pattern"],[95,78,123,21],[95,83,123,26],[95,91,123,34],[95,95,123,38,"message"],[95,102,123,45],[95,103,123,46,"includes"],[95,111,123,54],[95,112,123,55,"pattern"],[95,119,123,62],[95,120,123,64],[95,122,124,6],[96,8,125,6],[96,15,125,13],[96,19,125,17],[97,6,126,4],[98,4,127,2],[99,4,128,2],[99,11,128,9],[99,16,128,14],[100,2,129,0],[101,2,131,0],[101,11,131,9,"handleUpdate"],[101,23,131,21,"handleUpdate"],[101,24,131,21],[101,26,131,30],[102,4,132,2],[102,8,132,6,"updateTimeout"],[102,21,132,19],[102,25,132,23],[102,29,132,27],[102,31,132,29],[103,6,133,4,"updateTimeout"],[103,19,133,17],[103,22,133,20,"setImmediate"],[103,34,133,32],[103,35,133,33],[103,41,133,39],[104,8,134,6,"updateTimeout"],[104,21,134,19],[104,24,134,22],[104,28,134,26],[105,8,135,6],[105,12,135,12,"nextState"],[105,21,135,21],[105,24,135,24,"getNextState"],[105,36,135,36],[105,37,135,37],[105,38,135,38],[106,8,136,6,"observers"],[106,17,136,15],[106,18,136,16,"forEach"],[106,25,136,23],[106,26,136,24,"_ref"],[106,30,136,24],[107,10,136,24],[107,14,136,26,"observer"],[107,22,136,34],[107,25,136,34,"_ref"],[107,29,136,34],[107,30,136,26,"observer"],[107,38,136,34],[108,10,136,34],[108,17,136,40,"observer"],[108,25,136,48],[108,26,136,49,"nextState"],[108,35,136,58],[108,36,136,59],[109,8,136,59],[109,10,136,60],[110,6,137,4],[110,7,137,5],[110,8,137,6],[111,4,138,2],[112,2,139,0],[113,2,141,0],[113,11,141,9,"appendNewLog"],[113,23,141,21,"appendNewLog"],[113,24,141,22,"newLog"],[113,30,141,39],[113,32,141,41],[114,4,142,2],[115,4,143,2],[116,4,144,2],[116,8,144,6,"isMessageIgnored"],[116,24,144,22],[116,25,144,23,"newLog"],[116,31,144,29],[116,32,144,30,"message"],[116,39,144,37],[116,40,144,38,"content"],[116,47,144,45],[116,48,144,46],[116,50,144,48],[117,6,145,4],[118,4,146,2],[120,4,148,2],[121,4,149,2],[122,4,150,2],[123,4,151,2],[123,8,151,8,"lastLog"],[123,15,151,15],[123,18,151,18,"Array"],[123,23,151,23],[123,24,151,24,"from"],[123,28,151,28],[123,29,151,29,"logs"],[123,33,151,33],[123,34,151,34],[123,35,151,35,"pop"],[123,38,151,38],[123,39,151,39],[123,40,151,40],[124,4,152,2],[124,8,152,6,"lastLog"],[124,15,152,13],[124,19,152,17,"lastLog"],[124,26,152,24],[124,27,152,25,"category"],[124,35,152,33],[124,40,152,38,"newLog"],[124,46,152,44],[124,47,152,45,"category"],[124,55,152,53],[124,57,152,55],[125,6,153,4,"lastLog"],[125,13,153,11],[125,14,153,12,"incrementCount"],[125,28,153,26],[125,29,153,27],[125,30,153,28],[126,6,154,4,"handleUpdate"],[126,18,154,16],[126,19,154,17],[126,20,154,18],[127,6,155,4],[128,4,156,2],[129,4,158,2],[129,8,158,6,"newLog"],[129,14,158,12],[129,15,158,13,"level"],[129,20,158,18],[129,25,158,23],[129,32,158,30],[129,34,158,32],[130,6,159,4],[131,6,160,4],[132,6,161,4],[133,6,162,4],[133,10,162,10,"OPTIMISTIC_WAIT_TIME"],[133,30,162,30],[133,33,162,33],[133,37,162,37],[134,6,164,4],[134,10,164,8,"addPendingLog"],[134,23,164,34],[134,26,164,37,"addPendingLog"],[134,27,164,37],[134,32,164,43],[135,8,165,6,"logs"],[135,12,165,10],[135,13,165,11,"add"],[135,16,165,14],[135,17,165,15,"newLog"],[135,23,165,21],[135,24,165,22],[136,8,166,6],[136,12,166,10,"_selectedIndex"],[136,26,166,24],[136,29,166,27],[136,30,166,28],[136,32,166,30],[137,10,167,8,"setSelectedLog"],[137,24,167,22],[137,25,167,23,"logs"],[137,29,167,27],[137,30,167,28,"size"],[137,34,167,32],[137,37,167,35],[137,38,167,36],[137,39,167,37],[138,8,168,6],[138,9,168,7],[138,15,168,13],[139,10,169,8,"handleUpdate"],[139,22,169,20],[139,23,169,21],[139,24,169,22],[140,8,170,6],[141,8,171,6,"addPendingLog"],[141,21,171,19],[141,24,171,22],[141,28,171,26],[142,6,172,4],[142,7,172,5],[143,6,174,4],[143,10,174,10,"optimisticTimeout"],[143,27,174,27],[143,30,174,30,"setTimeout"],[143,40,174,40],[143,41,174,41],[143,47,174,47],[144,8,175,6],[144,12,175,10,"addPendingLog"],[144,25,175,23],[144,27,175,25],[145,10,176,8,"addPendingLog"],[145,23,176,21],[145,24,176,22],[145,25,176,23],[146,8,177,6],[147,6,178,4],[147,7,178,5],[147,9,178,7,"OPTIMISTIC_WAIT_TIME"],[147,29,178,27],[147,30,178,28],[148,6,180,4,"newLog"],[148,12,180,10],[148,13,180,11,"symbolicate"],[148,24,180,22],[148,25,180,23,"status"],[148,31,180,29],[148,35,180,33],[149,8,181,6],[149,12,181,10,"addPendingLog"],[149,25,181,23],[149,29,181,27,"status"],[149,35,181,33],[149,40,181,38],[149,49,181,47],[149,51,181,49],[150,10,182,8,"addPendingLog"],[150,23,182,21],[150,24,182,22],[150,25,182,23],[151,10,183,8,"clearTimeout"],[151,22,183,20],[151,23,183,21,"optimisticTimeout"],[151,40,183,38],[151,41,183,39],[152,8,184,6],[152,9,184,7],[152,15,184,13],[152,19,184,17,"status"],[152,25,184,23],[152,30,184,28],[152,39,184,37],[152,41,184,39],[153,10,185,8],[154,10,186,8,"handleUpdate"],[154,22,186,20],[154,23,186,21],[154,24,186,22],[155,8,187,6],[156,6,188,4],[156,7,188,5],[156,8,188,6],[157,4,189,2],[157,5,189,3],[157,11,189,9],[157,15,189,13,"newLog"],[157,21,189,19],[157,22,189,20,"level"],[157,27,189,25],[157,32,189,30],[157,40,189,38],[157,42,189,40],[158,6,190,4,"logs"],[158,10,190,8],[158,11,190,9,"add"],[158,14,190,12],[158,15,190,13,"newLog"],[158,21,190,19],[158,22,190,20],[159,6,191,4,"setSelectedLog"],[159,20,191,18],[159,21,191,19,"logs"],[159,25,191,23],[159,26,191,24,"size"],[159,30,191,28],[159,33,191,31],[159,34,191,32],[159,35,191,33],[160,4,192,2],[160,5,192,3],[160,11,192,9],[161,6,193,4,"logs"],[161,10,193,8],[161,11,193,9,"add"],[161,14,193,12],[161,15,193,13,"newLog"],[161,21,193,19],[161,22,193,20],[162,6,194,4,"handleUpdate"],[162,18,194,16],[162,19,194,17],[162,20,194,18],[163,4,195,2],[164,2,196,0],[165,2,198,7],[165,11,198,16,"addLog"],[165,17,198,22,"addLog"],[165,18,198,23,"log"],[165,21,198,35],[165,23,198,43],[166,4,199,2],[166,8,199,6,"log"],[166,11,199,9],[166,12,199,10,"level"],[166,17,199,15],[166,22,199,20],[166,28,199,26],[166,32,199,30,"global"],[166,38,199,36],[166,39,199,37,"__FUSEBOX_HAS_FULL_CONSOLE_SUPPORT__"],[166,75,199,73],[166,77,199,75],[167,6,200,4],[168,6,201,4,"showFuseboxWarningsMigrationMessageOnce"],[168,45,201,43],[168,46,201,44],[168,47,201,45],[169,6,202,4],[170,4,203,2],[171,4,204,2],[171,8,204,8,"errorForStackTrace"],[171,26,204,26],[171,29,204,29],[171,33,204,33,"Error"],[171,38,204,38],[171,39,204,39],[171,40,204,40],[173,4,206,2],[174,4,207,2],[175,4,208,2,"setImmediate"],[175,16,208,14],[175,17,208,15],[175,23,208,21],[176,6,209,4],[176,10,209,8],[177,8,210,6],[177,12,210,12,"stack"],[177,17,210,17],[177,20,210,20],[177,24,210,20,"parseErrorStack"],[177,48,210,35],[177,50,210,36,"log"],[177,53,210,39],[177,54,210,40,"stack"],[177,59,210,45],[177,63,210,49,"errorForStackTrace"],[177,81,210,67],[177,83,210,69,"stack"],[177,88,210,74],[177,89,210,75],[178,8,212,6,"appendNewLog"],[178,20,212,18],[178,21,213,8],[178,25,213,12,"LogBoxLog"],[178,43,213,21],[178,44,213,22],[179,10,214,10,"level"],[179,15,214,15],[179,17,214,17,"log"],[179,20,214,20],[179,21,214,21,"level"],[179,26,214,26],[180,10,215,10,"message"],[180,17,215,17],[180,19,215,19,"log"],[180,22,215,22],[180,23,215,23,"message"],[180,30,215,30],[181,10,216,10,"isComponentError"],[181,26,216,26],[181,28,216,28],[181,33,216,33],[182,10,217,10,"stack"],[182,15,217,15],[183,10,218,10,"category"],[183,18,218,18],[183,20,218,20,"log"],[183,23,218,23],[183,24,218,24,"category"],[183,32,218,32],[184,10,219,10,"componentStack"],[184,24,219,24],[184,26,219,26,"log"],[184,29,219,29],[184,30,219,30,"componentStack"],[184,44,219,44],[185,10,220,10,"componentStackType"],[185,28,220,28],[185,30,220,30,"log"],[185,33,220,33],[185,34,220,34,"componentStackType"],[185,52,220,52],[185,56,220,56],[186,8,221,8],[186,9,221,9],[186,10,222,6],[186,11,222,7],[187,6,223,4],[187,7,223,5],[187,8,223,6],[187,15,223,13,"error"],[187,20,223,18],[187,22,223,20],[188,8,224,6,"reportLogBoxError"],[188,25,224,23],[188,26,224,24,"error"],[188,31,224,29],[188,32,224,30],[189,6,225,4],[190,4,226,2],[190,5,226,3],[190,6,226,4],[191,2,227,0],[192,2,229,7],[192,11,229,16,"addException"],[192,23,229,28,"addException"],[192,24,229,29,"error"],[192,29,229,57],[192,31,229,65],[193,4,230,2],[194,4,231,2],[195,4,232,2,"setImmediate"],[195,16,232,14],[195,17,232,15],[195,23,232,21],[196,6,233,4],[196,10,233,8],[197,8,234,6,"appendNewLog"],[197,20,234,18],[197,21,234,19],[197,25,234,23,"LogBoxLog"],[197,43,234,32],[197,44,234,33],[197,48,234,33,"parseLogBoxException"],[197,84,234,53],[197,86,234,54,"error"],[197,91,234,59],[197,92,234,60],[197,93,234,61],[197,94,234,62],[198,6,235,4],[198,7,235,5],[198,8,235,6],[198,15,235,13,"loggingError"],[198,27,235,25],[198,29,235,27],[199,8,236,6,"reportLogBoxError"],[199,25,236,23],[199,26,236,24,"loggingError"],[199,38,236,36],[199,39,236,37],[200,6,237,4],[201,4,238,2],[201,5,238,3],[201,6,238,4],[202,2,239,0],[203,2,241,7],[203,11,241,16,"symbolicateLogNow"],[203,28,241,33,"symbolicateLogNow"],[203,29,241,34,"log"],[203,32,241,48],[203,34,241,50],[204,4,242,2,"log"],[204,7,242,5],[204,8,242,6,"symbolicate"],[204,19,242,17],[204,20,242,18],[204,26,242,24],[205,6,243,4,"handleUpdate"],[205,18,243,16],[205,19,243,17],[205,20,243,18],[206,4,244,2],[206,5,244,3],[206,6,244,4],[207,2,245,0],[208,2,247,7],[208,11,247,16,"retrySymbolicateLogNow"],[208,33,247,38,"retrySymbolicateLogNow"],[208,34,247,39,"log"],[208,37,247,53],[208,39,247,55],[209,4,248,2,"log"],[209,7,248,5],[209,8,248,6,"retrySymbolicate"],[209,24,248,22],[209,25,248,23],[209,31,248,29],[210,6,249,4,"handleUpdate"],[210,18,249,16],[210,19,249,17],[210,20,249,18],[211,4,250,2],[211,5,250,3],[211,6,250,4],[212,2,251,0],[213,2,253,7],[213,11,253,16,"symbolicateLogLazy"],[213,29,253,34,"symbolicateLogLazy"],[213,30,253,35,"log"],[213,33,253,49],[213,35,253,51],[214,4,254,2,"log"],[214,7,254,5],[214,8,254,6,"symbolicate"],[214,19,254,17],[214,20,254,18],[214,21,254,19],[215,2,255,0],[216,2,257,7],[216,11,257,16,"clear"],[216,16,257,21,"clear"],[216,17,257,21],[216,19,257,30],[217,4,258,2],[217,8,258,6,"logs"],[217,12,258,10],[217,13,258,11,"size"],[217,17,258,15],[217,20,258,18],[217,21,258,19],[217,23,258,21],[218,6,259,4,"logs"],[218,10,259,8],[218,13,259,11],[218,17,259,15,"Set"],[218,20,259,18],[218,21,259,19],[218,22,259,20],[219,6,260,4,"setSelectedLog"],[219,20,260,18],[219,21,260,19],[219,22,260,20],[219,23,260,21],[219,24,260,22],[220,4,261,2],[221,2,262,0],[222,2,264,7],[222,11,264,16,"setSelectedLog"],[222,25,264,30,"setSelectedLog"],[222,26,264,31,"proposedNewIndex"],[222,42,264,55],[222,44,264,63],[223,4,265,2],[223,8,265,8,"oldIndex"],[223,16,265,16],[223,19,265,19,"_selectedIndex"],[223,33,265,33],[224,4,266,2],[224,8,266,6,"newIndex"],[224,16,266,14],[224,19,266,17,"proposedNewIndex"],[224,35,266,33],[225,4,268,2],[225,8,268,8,"logArray"],[225,16,268,16],[225,19,268,19,"Array"],[225,24,268,24],[225,25,268,25,"from"],[225,29,268,29],[225,30,268,30,"logs"],[225,34,268,34],[225,35,268,35],[226,4,269,2],[226,8,269,6,"index"],[226,13,269,11],[226,16,269,14,"logArray"],[226,24,269,22],[226,25,269,23,"length"],[226,31,269,29],[226,34,269,32],[226,35,269,33],[227,4,270,2],[227,11,270,9,"index"],[227,16,270,14],[227,20,270,18],[227,21,270,19],[227,23,270,21],[228,6,271,4],[229,6,272,4],[229,10,272,8,"logArray"],[229,18,272,16],[229,19,272,17,"index"],[229,24,272,22],[229,25,272,23],[229,26,272,24,"level"],[229,31,272,29],[229,36,272,34],[229,44,272,42],[229,46,272,44],[230,8,273,6,"newIndex"],[230,16,273,14],[230,19,273,17,"index"],[230,24,273,22],[231,8,274,6],[232,6,275,4],[233,6,276,4,"index"],[233,11,276,9],[233,15,276,13],[233,16,276,14],[234,4,277,2],[235,4,278,2,"_selectedIndex"],[235,18,278,16],[235,21,278,19,"newIndex"],[235,29,278,27],[236,4,279,2,"handleUpdate"],[236,16,279,14],[236,17,279,15],[236,18,279,16],[237,4,280,2],[237,8,280,6,"NativeLogBox"],[237,29,280,18],[237,31,280,20],[238,6,281,4,"setTimeout"],[238,16,281,14],[238,17,281,15],[238,23,281,21],[239,8,282,6],[239,12,282,10,"oldIndex"],[239,20,282,18],[239,23,282,21],[239,24,282,22],[239,28,282,26,"newIndex"],[239,36,282,34],[239,40,282,38],[239,41,282,39],[239,43,282,41],[240,10,283,8,"NativeLogBox"],[240,31,283,20],[240,32,283,21,"show"],[240,36,283,25],[240,37,283,26],[240,38,283,27],[241,8,284,6],[241,9,284,7],[241,15,284,13],[241,19,284,17,"oldIndex"],[241,27,284,25],[241,31,284,29],[241,32,284,30],[241,36,284,34,"newIndex"],[241,44,284,42],[241,47,284,45],[241,48,284,46],[241,50,284,48],[242,10,285,8,"NativeLogBox"],[242,31,285,20],[242,32,285,21,"hide"],[242,36,285,25],[242,37,285,26],[242,38,285,27],[243,8,286,6],[244,6,287,4],[244,7,287,5],[244,9,287,7],[244,10,287,8],[244,11,287,9],[245,4,288,2],[246,2,289,0],[247,2,291,7],[247,11,291,16,"clearWarnings"],[247,24,291,29,"clearWarnings"],[247,25,291,29],[247,27,291,38],[248,4,292,2],[248,8,292,8,"newLogs"],[248,15,292,15],[248,18,292,18,"Array"],[248,23,292,23],[248,24,292,24,"from"],[248,28,292,28],[248,29,292,29,"logs"],[248,33,292,33],[248,34,292,34],[248,35,292,35,"filter"],[248,41,292,41],[248,42,292,42,"log"],[248,45,292,45],[248,49,292,49,"log"],[248,52,292,52],[248,53,292,53,"level"],[248,58,292,58],[248,63,292,63],[248,69,292,69],[248,70,292,70],[249,4,293,2],[249,8,293,6,"newLogs"],[249,15,293,13],[249,16,293,14,"length"],[249,22,293,20],[249,27,293,25,"logs"],[249,31,293,29],[249,32,293,30,"size"],[249,36,293,34],[249,38,293,36],[250,6,294,4,"logs"],[250,10,294,8],[250,13,294,11],[250,17,294,15,"Set"],[250,20,294,18],[250,21,294,19,"newLogs"],[250,28,294,26],[250,29,294,27],[251,6,295,4,"setSelectedLog"],[251,20,295,18],[251,21,295,19],[251,22,295,20],[251,23,295,21],[251,24,295,22],[252,6,296,4,"handleUpdate"],[252,18,296,16],[252,19,296,17],[252,20,296,18],[253,4,297,2],[254,2,298,0],[255,2,300,7],[255,11,300,16,"clearErrors"],[255,22,300,27,"clearErrors"],[255,23,300,27],[255,25,300,36],[256,4,301,2],[256,8,301,8,"newLogs"],[256,15,301,15],[256,18,301,18,"Array"],[256,23,301,23],[256,24,301,24,"from"],[256,28,301,28],[256,29,301,29,"logs"],[256,33,301,33],[256,34,301,34],[256,35,301,35,"filter"],[256,41,301,41],[256,42,302,4,"log"],[256,45,302,7],[256,49,302,11,"log"],[256,52,302,14],[256,53,302,15,"level"],[256,58,302,20],[256,63,302,25],[256,70,302,32],[256,74,302,36,"log"],[256,77,302,39],[256,78,302,40,"level"],[256,83,302,45],[256,88,302,50],[256,95,303,2],[256,96,303,3],[257,4,304,2],[257,8,304,6,"newLogs"],[257,15,304,13],[257,16,304,14,"length"],[257,22,304,20],[257,27,304,25,"logs"],[257,31,304,29],[257,32,304,30,"size"],[257,36,304,34],[257,38,304,36],[258,6,305,4,"logs"],[258,10,305,8],[258,13,305,11],[258,17,305,15,"Set"],[258,20,305,18],[258,21,305,19,"newLogs"],[258,28,305,26],[258,29,305,27],[259,6,306,4,"setSelectedLog"],[259,20,306,18],[259,21,306,19],[259,22,306,20],[259,23,306,21],[259,24,306,22],[260,4,307,2],[261,2,308,0],[262,2,310,7],[262,11,310,16,"dismiss"],[262,18,310,23,"dismiss"],[262,19,310,24,"log"],[262,22,310,38],[262,24,310,46],[263,4,311,2],[263,8,311,6,"logs"],[263,12,311,10],[263,13,311,11,"has"],[263,16,311,14],[263,17,311,15,"log"],[263,20,311,18],[263,21,311,19],[263,23,311,21],[264,6,312,4,"logs"],[264,10,312,8],[264,11,312,9,"delete"],[264,17,312,15],[264,18,312,16,"log"],[264,21,312,19],[264,22,312,20],[265,6,313,4,"handleUpdate"],[265,18,313,16],[265,19,313,17],[265,20,313,18],[266,4,314,2],[267,2,315,0],[268,2,317,7],[268,11,317,16,"setWarningFilter"],[268,27,317,32,"setWarningFilter"],[268,28,317,33,"filter"],[268,34,317,54],[268,36,317,62],[269,4,318,2,"warningFilter"],[269,17,318,15],[269,20,318,18,"filter"],[269,26,318,24],[270,2,319,0],[271,2,321,7],[271,11,321,16,"setAppInfo"],[271,21,321,26,"setAppInfo"],[271,22,321,27,"info"],[271,26,321,46],[271,28,321,54],[272,4,322,2,"appInfo"],[272,11,322,9],[272,14,322,12,"info"],[272,18,322,16],[273,2,323,0],[274,2,325,7],[274,11,325,16,"getAppInfo"],[274,21,325,26,"getAppInfo"],[274,22,325,26],[274,24,325,39],[275,4,326,2],[275,11,326,9,"appInfo"],[275,18,326,16],[275,22,326,20],[275,26,326,24],[275,29,326,27,"appInfo"],[275,36,326,34],[275,37,326,35],[275,38,326,36],[275,41,326,39],[275,45,326,43],[276,2,327,0],[277,2,329,7],[277,11,329,16,"checkWarningFilter"],[277,29,329,34,"checkWarningFilter"],[277,30,329,35,"format"],[277,36,329,49],[277,38,329,64],[278,4,330,2],[278,11,330,9,"warningFilter"],[278,24,330,22],[278,25,330,23,"format"],[278,31,330,29],[278,32,330,30],[279,2,331,0],[280,2,333,7],[280,11,333,16,"getIgnorePatterns"],[280,28,333,33,"getIgnorePatterns"],[280,29,333,33],[280,31,333,67],[281,4,334,2],[281,11,334,9,"Array"],[281,16,334,14],[281,17,334,15,"from"],[281,21,334,19],[281,22,334,20,"ignorePatterns"],[281,36,334,34],[281,37,334,35],[282,2,335,0],[283,2,337,7],[283,11,337,16,"addIgnorePatterns"],[283,28,337,33,"addIgnorePatterns"],[283,29,338,2,"patterns"],[283,37,338,41],[283,39,339,8],[284,4,340,2],[284,8,340,8,"existingSize"],[284,20,340,20],[284,23,340,23,"ignorePatterns"],[284,37,340,37],[284,38,340,38,"size"],[284,42,340,42],[285,4,341,2],[286,4,342,2],[287,4,343,2,"patterns"],[287,12,343,10],[287,13,343,11,"forEach"],[287,20,343,18],[287,21,343,20,"pattern"],[287,28,343,42],[287,32,343,47],[288,6,344,4],[288,10,344,8,"pattern"],[288,17,344,15],[288,29,344,27,"RegExp"],[288,35,344,33],[288,37,344,35],[289,8,345,6],[289,13,345,11],[289,17,345,17,"existingPattern"],[289,32,345,32],[289,36,345,36,"ignorePatterns"],[289,50,345,50],[289,52,345,52],[290,10,346,8],[290,14,347,10,"existingPattern"],[290,29,347,25],[290,41,347,37,"RegExp"],[290,47,347,43],[290,51,348,10,"existingPattern"],[290,66,348,25],[290,67,348,26,"toString"],[290,75,348,34],[290,76,348,35],[290,77,348,36],[290,82,348,41,"pattern"],[290,89,348,48],[290,90,348,49,"toString"],[290,98,348,57],[290,99,348,58],[290,100,348,59],[290,102,349,10],[291,12,350,10],[292,10,351,8],[293,8,352,6],[294,8,353,6,"ignorePatterns"],[294,22,353,20],[294,23,353,21,"add"],[294,26,353,24],[294,27,353,25,"pattern"],[294,34,353,32],[294,35,353,33],[295,6,354,4],[296,6,355,4,"ignorePatterns"],[296,20,355,18],[296,21,355,19,"add"],[296,24,355,22],[296,25,355,23,"pattern"],[296,32,355,30],[296,33,355,31],[297,4,356,2],[297,5,356,3],[297,6,356,4],[298,4,357,2],[298,8,357,6,"ignorePatterns"],[298,22,357,20],[298,23,357,21,"size"],[298,27,357,25],[298,32,357,30,"existingSize"],[298,44,357,42],[298,46,357,44],[299,6,358,4],[300,4,359,2],[301,4,360,2],[302,4,361,2],[303,4,362,2],[304,4,363,2],[305,4,364,2,"logs"],[305,8,364,6],[305,11,364,9],[305,15,364,13,"Set"],[305,18,364,16],[305,19,365,4,"Array"],[305,24,365,9],[305,25,365,10,"from"],[305,29,365,14],[305,30,365,15,"logs"],[305,34,365,19],[305,35,365,20],[305,36,365,21,"filter"],[305,42,365,27],[305,43,365,28,"log"],[305,46,365,31],[305,50,365,35],[305,51,365,36,"isMessageIgnored"],[305,67,365,52],[305,68,365,53,"log"],[305,71,365,56],[305,72,365,57,"message"],[305,79,365,64],[305,80,365,65,"content"],[305,87,365,72],[305,88,365,73],[305,89,366,2],[305,90,366,3],[306,4,367,2,"handleUpdate"],[306,16,367,14],[306,17,367,15],[306,18,367,16],[307,2,368,0],[308,2,370,7],[308,11,370,16,"setDisabled"],[308,22,370,27,"setDisabled"],[308,23,370,28,"value"],[308,28,370,42],[308,30,370,50],[309,4,371,2],[309,8,371,6,"value"],[309,13,371,11],[309,18,371,16,"_isDisabled"],[309,29,371,27],[309,31,371,29],[310,6,372,4],[311,4,373,2],[312,4,374,2,"_isDisabled"],[312,15,374,13],[312,18,374,16,"value"],[312,23,374,21],[313,4,375,2,"handleUpdate"],[313,16,375,14],[313,17,375,15],[313,18,375,16],[314,2,376,0],[315,2,378,7],[315,11,378,16,"isDisabled"],[315,21,378,26,"isDisabled"],[315,22,378,26],[315,24,378,38],[316,4,379,2],[316,11,379,9,"_isDisabled"],[316,22,379,20],[317,2,380,0],[318,2,382,7],[318,11,382,16,"observe"],[318,18,382,23,"observe"],[318,19,382,24,"observer"],[318,27,382,42],[318,29,382,58],[319,4,383,2],[319,8,383,8,"subscription"],[319,20,383,20],[319,23,383,23],[320,6,383,24,"observer"],[321,4,383,32],[321,5,383,33],[322,4,384,2,"observers"],[322,13,384,11],[322,14,384,12,"add"],[322,17,384,15],[322,18,384,16,"subscription"],[322,30,384,28],[322,31,384,29],[323,4,386,2,"observer"],[323,12,386,10],[323,13,386,11,"getNextState"],[323,25,386,23],[323,26,386,24],[323,27,386,25],[323,28,386,26],[324,4,388,2],[324,11,388,9],[325,6,389,4,"unsubscribe"],[325,17,389,15,"unsubscribe"],[325,18,389,15],[325,20,389,24],[326,8,390,6,"observers"],[326,17,390,15],[326,18,390,16,"delete"],[326,24,390,22],[326,25,390,23,"subscription"],[326,37,390,35],[326,38,390,36],[327,6,391,4],[328,4,392,2],[328,5,392,3],[329,2,393,0],[330,2,411,7],[330,11,411,16,"withSubscription"],[330,27,411,32,"withSubscription"],[330,28,412,2,"WrappedComponent"],[330,44,412,39],[330,46,413,33],[331,4,413,33],[331,8,414,8,"LogBoxStateSubscription"],[331,31,414,31],[331,57,414,31,"_React$Component"],[331,73,414,31],[332,6,414,31],[332,15,414,31,"LogBoxStateSubscription"],[332,39,414,31],[333,8,414,31],[333,12,414,31,"_this"],[333,17,414,31],[334,8,414,31],[334,12,414,31,"_classCallCheck2"],[334,28,414,31],[334,29,414,31,"default"],[334,36,414,31],[334,44,414,31,"LogBoxStateSubscription"],[334,67,414,31],[335,8,414,31],[335,17,414,31,"_len"],[335,21,414,31],[335,24,414,31,"arguments"],[335,33,414,31],[335,34,414,31,"length"],[335,40,414,31],[335,42,414,31,"args"],[335,46,414,31],[335,53,414,31,"Array"],[335,58,414,31],[335,59,414,31,"_len"],[335,63,414,31],[335,66,414,31,"_key"],[335,70,414,31],[335,76,414,31,"_key"],[335,80,414,31],[335,83,414,31,"_len"],[335,87,414,31],[335,89,414,31,"_key"],[335,93,414,31],[336,10,414,31,"args"],[336,14,414,31],[336,15,414,31,"_key"],[336,19,414,31],[336,23,414,31,"arguments"],[336,32,414,31],[336,33,414,31,"_key"],[336,37,414,31],[337,8,414,31],[338,8,414,31,"_this"],[338,13,414,31],[338,16,414,31,"_callSuper"],[338,26,414,31],[338,33,414,31,"LogBoxStateSubscription"],[338,56,414,31],[338,62,414,31,"args"],[338,66,414,31],[339,8,414,31,"_this"],[339,13,414,31],[339,14,427,4,"state"],[339,19,427,9],[339,22,427,19],[340,10,428,6,"logs"],[340,14,428,10],[340,16,428,12],[340,20,428,16,"Set"],[340,23,428,19],[340,24,428,20],[340,25,428,21],[341,10,429,6,"isDisabled"],[341,20,429,16],[341,22,429,18],[341,27,429,23],[342,10,430,6,"hasError"],[342,18,430,14],[342,20,430,16],[342,25,430,21],[343,10,431,6,"selectedLogIndex"],[343,26,431,22],[343,28,431,24],[343,29,431,25],[344,8,432,4],[344,9,432,5],[345,8,432,5],[345,15,432,5,"_this"],[345,20,432,5],[346,6,432,5],[347,6,432,5],[347,10,432,5,"_inherits2"],[347,20,432,5],[347,21,432,5,"default"],[347,28,432,5],[347,30,432,5,"LogBoxStateSubscription"],[347,53,432,5],[347,55,432,5,"_React$Component"],[347,71,432,5],[348,6,432,5],[348,17,432,5,"_createClass2"],[348,30,432,5],[348,31,432,5,"default"],[348,38,432,5],[348,40,432,5,"LogBoxStateSubscription"],[348,63,432,5],[349,8,432,5,"key"],[349,11,432,5],[350,8,432,5,"value"],[350,13,432,5],[350,15,419,4],[350,24,419,4,"componentDidCatch"],[350,41,419,21,"componentDidCatch"],[350,42,419,22,"err"],[350,45,419,32],[350,47,419,34,"errorInfo"],[350,56,419,74],[350,58,419,76],[351,10,420,6],[352,0,421,0],[353,10,422,6,"reportLogBoxError"],[353,27,422,23],[353,28,422,24,"err"],[353,31,422,27],[353,33,422,29,"errorInfo"],[353,42,422,38],[353,43,422,39,"componentStack"],[353,57,422,53],[353,58,422,54],[354,8,423,4],[355,6,423,5],[356,8,423,5,"key"],[356,11,423,5],[357,8,423,5,"value"],[357,13,423,5],[357,15,434,4],[357,24,434,4,"render"],[357,30,434,10,"render"],[357,31,434,10],[357,33,434,25],[358,10,435,6],[358,14,435,10],[358,18,435,14],[358,19,435,15,"state"],[358,24,435,20],[358,25,435,21,"hasError"],[358,33,435,29],[358,35,435,31],[359,12,436,8],[360,12,437,8],[361,12,438,8],[361,19,438,15],[361,23,438,19],[362,10,439,6],[363,10,441,6],[363,30,442,8],[363,34,442,8,"_jsxDevRuntime"],[363,48,442,8],[363,49,442,8,"jsxDEV"],[363,55,442,8],[363,57,442,9,"WrappedComponent"],[363,73,442,25],[364,12,443,10,"logs"],[364,16,443,14],[364,18,443,16,"Array"],[364,23,443,21],[364,24,443,22,"from"],[364,28,443,26],[364,29,443,27],[364,33,443,31],[364,34,443,32,"state"],[364,39,443,37],[364,40,443,38,"logs"],[364,44,443,42],[364,45,443,44],[365,12,444,10,"isDisabled"],[365,22,444,20],[365,24,444,22],[365,28,444,26],[365,29,444,27,"state"],[365,34,444,32],[365,35,444,33,"isDisabled"],[365,45,444,44],[366,12,445,10,"selectedLogIndex"],[366,28,445,26],[366,30,445,28],[366,34,445,32],[366,35,445,33,"state"],[366,40,445,38],[366,41,445,39,"selectedLogIndex"],[367,10,445,56],[368,12,445,56,"fileName"],[368,20,445,56],[368,22,445,56,"_jsxFileName"],[368,34,445,56],[369,12,445,56,"lineNumber"],[369,22,445,56],[370,12,445,56,"columnNumber"],[370,24,445,56],[371,10,445,56],[371,17,446,9],[371,18,446,10],[372,8,448,4],[373,6,448,5],[374,8,448,5,"key"],[374,11,448,5],[375,8,448,5,"value"],[375,13,448,5],[375,15,450,4],[375,24,450,4,"componentDidMount"],[375,41,450,21,"componentDidMount"],[375,42,450,21],[375,44,450,30],[376,10,451,6],[376,14,451,10],[376,15,451,11,"_subscription"],[376,28,451,24],[376,31,451,27,"observe"],[376,38,451,34],[376,39,451,35,"data"],[376,43,451,39],[376,47,451,43],[377,12,452,8],[377,16,452,12],[377,17,452,13,"setState"],[377,25,452,21],[377,26,452,22,"data"],[377,30,452,26],[377,31,452,27],[378,10,453,6],[378,11,453,7],[378,12,453,8],[379,8,454,4],[380,6,454,5],[381,8,454,5,"key"],[381,11,454,5],[382,8,454,5,"value"],[382,13,454,5],[382,15,456,4],[382,24,456,4,"componentWillUnmount"],[382,44,456,24,"componentWillUnmount"],[382,45,456,24],[382,47,456,33],[383,10,457,6],[383,14,457,10],[383,18,457,14],[383,19,457,15,"_subscription"],[383,32,457,28],[383,36,457,32],[383,40,457,36],[383,42,457,38],[384,12,458,8],[384,16,458,12],[384,17,458,13,"_subscription"],[384,30,458,26],[384,31,458,27,"unsubscribe"],[384,42,458,38],[384,43,458,39],[384,44,458,40],[385,10,459,6],[386,8,460,4],[387,6,460,5],[388,8,460,5,"key"],[388,11,460,5],[389,8,460,5,"value"],[389,13,460,5],[389,15,415,4],[389,24,415,11,"getDerivedStateFromError"],[389,48,415,35,"getDerivedStateFromError"],[389,49,415,35],[389,51,415,59],[390,10,416,6],[390,17,416,13],[391,12,416,14,"hasError"],[391,20,416,22],[391,22,416,24],[392,10,416,28],[392,11,416,29],[393,8,417,4],[394,6,417,5],[395,4,417,5],[395,6,414,40,"React"],[395,11,414,45],[395,12,414,46,"Component"],[395,21,414,55],[396,4,463,2],[396,11,463,9,"LogBoxStateSubscription"],[396,34,463,32],[397,2,464,0],[398,2,466,0],[398,11,466,9,"showFuseboxWarningsMigrationMessageOnce"],[398,50,466,48,"showFuseboxWarningsMigrationMessageOnce"],[398,51,466,48],[398,53,466,51],[399,4,467,2],[399,8,467,6,"hasShownFuseboxWarningsMigrationMessage"],[399,47,467,45],[399,49,467,47],[400,6,468,4],[401,4,469,2],[402,4,470,2,"hasShownFuseboxWarningsMigrationMessage"],[402,43,470,41],[402,46,470,44],[402,50,470,48],[403,4,471,2,"appendNewLog"],[403,16,471,14],[403,17,472,4],[403,21,472,8,"LogBoxLog"],[403,39,472,17],[403,40,472,18],[404,6,473,6,"level"],[404,11,473,11],[404,13,473,13],[404,19,473,19],[405,6,474,6,"message"],[405,13,474,13],[405,15,474,15],[406,8,475,8,"content"],[406,15,475,15],[406,17,475,17],[406,50,475,50],[407,8,476,8,"substitutions"],[407,21,476,21],[407,23,476,23],[408,6,477,6],[408,7,477,7],[409,6,478,6,"isComponentError"],[409,22,478,22],[409,24,478,24],[409,29,478,29],[410,6,479,6,"stack"],[410,11,479,11],[410,13,479,13],[410,15,479,15],[411,6,480,6,"category"],[411,14,480,14],[411,16,480,16],[411,44,480,44],[412,6,481,6,"componentStack"],[412,20,481,20],[412,22,481,22],[412,24,481,24],[413,6,482,6,"onNotificationPress"],[413,25,482,25],[413,27,482,27,"onNotificationPress"],[413,28,482,27],[413,33,482,33],[414,8,483,8],[414,12,483,12,"NativeDevSettings"],[414,38,483,29],[414,39,483,30,"openDebugger"],[414,51,483,42],[414,53,483,44],[415,10,484,10,"NativeDevSettings"],[415,36,484,27],[415,37,484,28,"openDebugger"],[415,49,484,40],[415,50,484,41],[415,51,484,42],[416,8,485,8],[417,8,486,8,"clearWarnings"],[417,21,486,21],[417,22,486,22],[417,23,486,23],[418,6,487,6],[419,4,488,4],[419,5,488,5],[419,6,489,2],[419,7,489,3],[420,2,490,0],[421,0,490,1],[421,3]],"functionMap":{"names":["<global>","warningFilter","getNextState","reportLogBoxError","isLogBoxErrorMessage","isMessageIgnored","handleUpdate","setImmediate$argument_0","observers.forEach$argument_0","appendNewLog","addPendingLog","setTimeout$argument_0","newLog.symbolicate$argument_0","addLog","addException","symbolicateLogNow","log.symbolicate$argument_0","retrySymbolicateLogNow","log.retrySymbolicate$argument_0","symbolicateLogLazy","clear","setSelectedLog","clearWarnings","Array.from.filter$argument_0","clearErrors","dismiss","setWarningFilter","setAppInfo","getAppInfo","checkWarningFilter","getIgnorePatterns","addIgnorePatterns","patterns.forEach$argument_0","setDisabled","isDisabled","observe","unsubscribe","withSubscription","LogBoxStateSubscription","LogBoxStateSubscription.getDerivedStateFromError","LogBoxStateSubscription#componentDidCatch","LogBoxStateSubscription#render","LogBoxStateSubscription#componentDidMount","observe$argument_0","LogBoxStateSubscription#componentWillUnmount","showFuseboxWarningsMigrationMessageOnce","LogBoxLog$argument_0.onNotificationPress"],"mappings":"AAA;mCC8E;CDU;AEK;CFM;OGE;CHW;OIE;CJE;OKE;CLU;AME;iCCE;wBCG,mCD;KDC;CNE;ASE;qCCuB;KDQ;yCEE;KFI;uBGE;KHQ;CTQ;OaE;eNU;GMkB;CbC;OcE;ePG;GOM;CdC;OeE;kBCC;GDE;CfC;OiBE;uBCC;GDE;CjBC;OmBE;CnBE;OoBE;CpBK;OqBE;eViB;KUM;CrBE;OsBE;0CCC,2BD;CtBM;OwBE;IDE,qDC;CxBM;OyBE;CzBK;O0BE;C1BE;O2BE;C3BE;O4BE;C5BE;O6BE;C7BE;O8BE;C9BE;O+BE;mBCM;GDa;4BRS,6CQ;C/BG;OiCE;CjCM;OkCE;ClCE;OmCE;ICO;KDE;CnCE;OqCkB;ECG;ICC;KDE;IEE;KFI;IGW;KHc;IIE;mCCC;ODE;KJC;IME;KNI;GDC;CrCG;A6CE;2BCgB;ODK;C7CG"}},"type":"js/module"}]}