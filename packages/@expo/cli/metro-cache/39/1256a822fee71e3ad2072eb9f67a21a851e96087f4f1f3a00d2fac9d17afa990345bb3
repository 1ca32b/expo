{"dependencies":[{"name":"../../src/private/featureflags/ReactNativeFeatureFlags","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":32,"index":275},"end":{"line":13,"column":97,"index":340}}],"key":"On9He5TjYQGJzGlPyyzDdz1kZUA="}},{"name":"../../src/private/featureflags/specs/NativeReactNativeFeatureFlags","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":2,"index":382},"end":{"line":15,"column":79,"index":459}}],"key":"TyXJZEr6SkTH4D7XrCGdLeoGolk="}},{"name":"../Utilities/PolyfillFunctions","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":25,"index":494},"end":{"line":16,"column":66,"index":535}}],"key":"bSgRQQ9QDEdIjWyT7jUaxVhiO2E="}},{"name":"./Timers/JSTimers","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":41,"column":31,"index":1327},"end":{"line":41,"column":59,"index":1355}},{"start":{"line":115,"column":12,"index":3960},"end":{"line":115,"column":40,"index":3988}},{"start":{"line":119,"column":12,"index":4079},"end":{"line":119,"column":40,"index":4107}}],"key":"a0GoTmqg1bAg640TeEIna+fZ03o="}},{"name":"../../src/private/webapis/idlecallbacks/specs/NativeIdleCallbacks","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":60,"column":6,"index":2026},"end":{"line":60,"column":82,"index":2102}},{"start":{"line":67,"column":6,"index":2207},"end":{"line":67,"column":82,"index":2283}}],"key":"TpinSbG1RtybWPMCs8UJX1VCh0k="}},{"name":"../../src/private/webapis/microtasks/specs/NativeMicrotasks","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":88,"column":6,"index":3030},"end":{"line":88,"column":76,"index":3100}}],"key":"j5W2TVS4QeJAlRApFSJBMfgGdUI="}},{"name":"./Timers/immediateShim","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":96,"column":10,"index":3286},"end":{"line":96,"column":43,"index":3319}},{"start":{"line":100,"column":10,"index":3389},"end":{"line":100,"column":43,"index":3422}}],"key":"infNW9HnCA6t8g5WDfTdVb5aqnI="}},{"name":"./Timers/queueMicrotask.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":106,"column":10,"index":3583},"end":{"line":106,"column":47,"index":3620}}],"key":"40FeuJu+ZlwI8O7+B7D+Aw1HoaU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  var ReactNativeFeatureFlags = _$$_REQUIRE(_dependencyMap[0], \"../../src/private/featureflags/ReactNativeFeatureFlags\");\n  var NativeReactNativeFeatureFlags = _$$_REQUIRE(_dependencyMap[1], \"../../src/private/featureflags/specs/NativeReactNativeFeatureFlags\").default;\n  var _require = _$$_REQUIRE(_dependencyMap[2], \"../Utilities/PolyfillFunctions\"),\n    polyfillGlobal = _require.polyfillGlobal;\n  if (__DEV__) {\n    if (typeof global.Promise !== 'function') {\n      console.error('Promise should exist before setting up timers.');\n    }\n  }\n\n  // In bridgeless mode, timers are host functions installed from cpp.\n  if (global.RN$Bridgeless !== true) {\n    /**\n     * Set up timers.\n     * You can use this module directly, or just require InitializeCore.\n     */\n    var defineLazyTimer = name => {\n      polyfillGlobal(name, () => _$$_REQUIRE(_dependencyMap[3], \"./Timers/JSTimers\")[name]);\n    };\n    defineLazyTimer('setTimeout');\n    defineLazyTimer('clearTimeout');\n    defineLazyTimer('setInterval');\n    defineLazyTimer('clearInterval');\n    defineLazyTimer('requestAnimationFrame');\n    defineLazyTimer('cancelAnimationFrame');\n    defineLazyTimer('requestIdleCallback');\n    defineLazyTimer('cancelIdleCallback');\n  } else if (\n  // TODO remove this condition when bridgeless == modern scheduler everywhere.\n  NativeReactNativeFeatureFlags != null &&\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- false positive due to `use` prefix\n  ReactNativeFeatureFlags.useModernRuntimeScheduler()) {\n    polyfillGlobal('requestIdleCallback', () => _$$_REQUIRE(_dependencyMap[4], \"../../src/private/webapis/idlecallbacks/specs/NativeIdleCallbacks\").default.requestIdleCallback);\n    polyfillGlobal('cancelIdleCallback', () => _$$_REQUIRE(_dependencyMap[4], \"../../src/private/webapis/idlecallbacks/specs/NativeIdleCallbacks\").default.cancelIdleCallback);\n  }\n\n  // We need to check if the native module is available before accessing the\n  // feature flag, because otherwise the API would throw an error in the legacy\n  // architecture in OSS, where the native module isn't available.\n  if (NativeReactNativeFeatureFlags != null && ReactNativeFeatureFlags.enableMicrotasks()) {\n    // This is the flag that tells React to use `queueMicrotask` to batch state\n    // updates, instead of using the scheduler to schedule a regular task.\n    // We use a global variable because we don't currently have any other\n    // mechanism to pass feature flags from RN to React in OSS.\n    global.RN$enableMicrotasksInReact = true;\n    polyfillGlobal('queueMicrotask', () => _$$_REQUIRE(_dependencyMap[5], \"../../src/private/webapis/microtasks/specs/NativeMicrotasks\").default.queueMicrotask);\n\n    // We shim the immediate APIs via `queueMicrotask` to maintain the backward\n    // compatibility.\n    polyfillGlobal('setImmediate', () => _$$_REQUIRE(_dependencyMap[6], \"./Timers/immediateShim\").setImmediate);\n    polyfillGlobal('clearImmediate', () => _$$_REQUIRE(_dependencyMap[6], \"./Timers/immediateShim\").clearImmediate);\n  } else {\n    // Polyfill it with promise (regardless it's polyfilled or native) otherwise.\n    polyfillGlobal('queueMicrotask', () => _$$_REQUIRE(_dependencyMap[7], \"./Timers/queueMicrotask.js\").default);\n\n    // When promise was polyfilled hence is queued to the RN microtask queue,\n    // we polyfill the immediate APIs as aliases to the ReactNativeMicrotask APIs.\n    // Note that in bridgeless mode, immediate APIs are installed from cpp.\n    if (global.RN$Bridgeless !== true) {\n      polyfillGlobal('setImmediate', () => _$$_REQUIRE(_dependencyMap[3], \"./Timers/JSTimers\").queueReactNativeMicrotask);\n      polyfillGlobal('clearImmediate', () => _$$_REQUIRE(_dependencyMap[3], \"./Timers/JSTimers\").clearReactNativeMicrotask);\n    }\n  }\n});","lineCount":77,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,13,0],[14,6,13,6,"ReactNativeFeatureFlags"],[14,29,13,29],[14,32,13,32,"require"],[14,43,13,39],[14,44,13,39,"_dependencyMap"],[14,58,13,39],[14,119,13,96],[14,120,13,97],[15,2,14,0],[15,6,14,6,"NativeReactNativeFeatureFlags"],[15,35,14,35],[15,38,15,2,"require"],[15,49,15,9],[15,50,15,9,"_dependencyMap"],[15,64,15,9],[15,137,15,78],[15,138,15,79],[15,139,15,80,"default"],[15,146,15,87],[16,2,16,0],[16,6,16,0,"_require"],[16,14,16,0],[16,17,16,25,"require"],[16,28,16,32],[16,29,16,32,"_dependencyMap"],[16,43,16,32],[16,80,16,65],[16,81,16,66],[17,4,16,7,"polyfillGlobal"],[17,18,16,21],[17,21,16,21,"_require"],[17,29,16,21],[17,30,16,7,"polyfillGlobal"],[17,44,16,21],[18,2,18,0],[18,6,18,4,"__DEV__"],[18,13,18,11],[18,15,18,13],[19,4,19,2],[19,8,19,6],[19,15,19,13,"global"],[19,21,19,19],[19,22,19,20,"Promise"],[19,29,19,27],[19,34,19,32],[19,44,19,42],[19,46,19,44],[20,6,20,4,"console"],[20,13,20,11],[20,14,20,12,"error"],[20,19,20,17],[20,20,20,18],[20,68,20,66],[20,69,20,67],[21,4,21,2],[22,2,22,0],[24,2,24,0],[25,2,25,0],[25,6,25,4,"global"],[25,12,25,10],[25,13,25,11,"RN$Bridgeless"],[25,26,25,24],[25,31,25,29],[25,35,25,33],[25,37,25,35],[26,4,26,2],[27,0,27,0],[28,0,28,0],[29,0,29,0],[30,4,30,2],[30,8,30,8,"defineLazyTimer"],[30,23,30,23],[30,26,31,4,"name"],[30,30,39,39],[30,34,40,7],[31,6,41,4,"polyfillGlobal"],[31,20,41,18],[31,21,41,19,"name"],[31,25,41,23],[31,27,41,25],[31,33,41,31,"require"],[31,44,41,38],[31,45,41,38,"_dependencyMap"],[31,59,41,38],[31,83,41,58],[31,84,41,59],[31,85,41,60,"name"],[31,89,41,64],[31,90,41,65],[31,91,41,66],[32,4,42,2],[32,5,42,3],[33,4,43,2,"defineLazyTimer"],[33,19,43,17],[33,20,43,18],[33,32,43,30],[33,33,43,31],[34,4,44,2,"defineLazyTimer"],[34,19,44,17],[34,20,44,18],[34,34,44,32],[34,35,44,33],[35,4,45,2,"defineLazyTimer"],[35,19,45,17],[35,20,45,18],[35,33,45,31],[35,34,45,32],[36,4,46,2,"defineLazyTimer"],[36,19,46,17],[36,20,46,18],[36,35,46,33],[36,36,46,34],[37,4,47,2,"defineLazyTimer"],[37,19,47,17],[37,20,47,18],[37,43,47,41],[37,44,47,42],[38,4,48,2,"defineLazyTimer"],[38,19,48,17],[38,20,48,18],[38,42,48,40],[38,43,48,41],[39,4,49,2,"defineLazyTimer"],[39,19,49,17],[39,20,49,18],[39,41,49,39],[39,42,49,40],[40,4,50,2,"defineLazyTimer"],[40,19,50,17],[40,20,50,18],[40,40,50,38],[40,41,50,39],[41,2,51,0],[41,3,51,1],[41,9,51,7],[42,2,52,2],[43,2,53,2,"NativeReactNativeFeatureFlags"],[43,31,53,31],[43,35,53,35],[43,39,53,39],[44,2,54,2],[45,2,55,2,"ReactNativeFeatureFlags"],[45,25,55,25],[45,26,55,26,"useModernRuntimeScheduler"],[45,51,55,51],[45,52,55,52],[45,53,55,53],[45,55,56,2],[46,4,57,2,"polyfillGlobal"],[46,18,57,16],[46,19,58,4],[46,40,58,25],[46,42,59,4],[46,48,60,6,"require"],[46,59,60,13],[46,60,60,13,"_dependencyMap"],[46,74,60,13],[46,146,60,81],[46,147,60,82],[46,148,61,9,"default"],[46,155,61,16],[46,156,61,17,"requestIdleCallback"],[46,175,62,2],[46,176,62,3],[47,4,64,2,"polyfillGlobal"],[47,18,64,16],[47,19,65,4],[47,39,65,24],[47,41,66,4],[47,47,67,6,"require"],[47,58,67,13],[47,59,67,13,"_dependencyMap"],[47,73,67,13],[47,145,67,81],[47,146,67,82],[47,147,68,9,"default"],[47,154,68,16],[47,155,68,17,"cancelIdleCallback"],[47,173,69,2],[47,174,69,3],[48,2,70,0],[50,2,72,0],[51,2,73,0],[52,2,74,0],[53,2,75,0],[53,6,76,2,"NativeReactNativeFeatureFlags"],[53,35,76,31],[53,39,76,35],[53,43,76,39],[53,47,77,2,"ReactNativeFeatureFlags"],[53,70,77,25],[53,71,77,26,"enableMicrotasks"],[53,87,77,42],[53,88,77,43],[53,89,77,44],[53,91,78,2],[54,4,79,2],[55,4,80,2],[56,4,81,2],[57,4,82,2],[58,4,83,2,"global"],[58,10,83,8],[58,11,83,9,"RN$enableMicrotasksInReact"],[58,37,83,35],[58,40,83,38],[58,44,83,42],[59,4,85,2,"polyfillGlobal"],[59,18,85,16],[59,19,86,4],[59,35,86,20],[59,37,87,4],[59,43,88,6,"require"],[59,54,88,13],[59,55,88,13,"_dependencyMap"],[59,69,88,13],[59,135,88,75],[59,136,88,76],[59,137,89,9,"default"],[59,144,89,16],[59,145,89,17,"queueMicrotask"],[59,159,90,2],[59,160,90,3],[61,4,92,2],[62,4,93,2],[63,4,94,2,"polyfillGlobal"],[63,18,94,16],[63,19,95,4],[63,33,95,18],[63,35,96,4],[63,41,96,10,"require"],[63,52,96,17],[63,53,96,17,"_dependencyMap"],[63,67,96,17],[63,96,96,42],[63,97,96,43],[63,98,96,44,"setImmediate"],[63,110,97,2],[63,111,97,3],[64,4,98,2,"polyfillGlobal"],[64,18,98,16],[64,19,99,4],[64,35,99,20],[64,37,100,4],[64,43,100,10,"require"],[64,54,100,17],[64,55,100,17,"_dependencyMap"],[64,69,100,17],[64,98,100,42],[64,99,100,43],[64,100,100,44,"clearImmediate"],[64,114,101,2],[64,115,101,3],[65,2,102,0],[65,3,102,1],[65,9,102,7],[66,4,103,2],[67,4,104,2,"polyfillGlobal"],[67,18,104,16],[67,19,105,4],[67,35,105,20],[67,37,106,4],[67,43,106,10,"require"],[67,54,106,17],[67,55,106,17,"_dependencyMap"],[67,69,106,17],[67,102,106,46],[67,103,106,47],[67,104,106,48,"default"],[67,111,107,2],[67,112,107,3],[69,4,109,2],[70,4,110,2],[71,4,111,2],[72,4,112,2],[72,8,112,6,"global"],[72,14,112,12],[72,15,112,13,"RN$Bridgeless"],[72,28,112,26],[72,33,112,31],[72,37,112,35],[72,39,112,37],[73,6,113,4,"polyfillGlobal"],[73,20,113,18],[73,21,114,6],[73,35,114,20],[73,37,115,6],[73,43,115,12,"require"],[73,54,115,19],[73,55,115,19,"_dependencyMap"],[73,69,115,19],[73,93,115,39],[73,94,115,40],[73,95,115,41,"queueReactNativeMicrotask"],[73,120,116,4],[73,121,116,5],[74,6,117,4,"polyfillGlobal"],[74,20,117,18],[74,21,118,6],[74,37,118,22],[74,39,119,6],[74,45,119,12,"require"],[74,56,119,19],[74,57,119,19,"_dependencyMap"],[74,71,119,19],[74,95,119,39],[74,96,119,40],[74,97,119,41,"clearReactNativeMicrotask"],[74,122,120,4],[74,123,120,5],[75,4,121,2],[76,2,122,0],[77,0,122,1],[77,3]],"functionMap":{"names":["<global>","defineLazyTimer","polyfillGlobal$argument_1"],"mappings":"AAA;0BC6B;yBCW,wCD;GDC;IEiB;oCFE;IEK;mCFE;IEmB;+BFE;IEO,oDF;IEI,sDF;IEM,mDF;MES,4DF;MEI,4DF"}},"type":"js/module"}]}