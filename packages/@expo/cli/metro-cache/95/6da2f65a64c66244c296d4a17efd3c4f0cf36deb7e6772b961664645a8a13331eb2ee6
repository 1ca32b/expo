{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":129,"column":0,"index":4715}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":129,"column":0,"index":4715}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":129,"column":0,"index":4715}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"../EventEmitter/NativeEventEmitter","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":0,"index":228},"end":{"line":11,"column":68,"index":296}}],"key":"FxUYVDH3eq4FUmUOIfY0RLK75tc="}},{"name":"../Utilities/logError","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":0,"index":297},"end":{"line":12,"column":45,"index":342}}],"key":"9QQI3ZNrzhD8jtBw9PeEcnYvcnQ="}},{"name":"../Utilities/Platform","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":0,"index":343},"end":{"line":13,"column":45,"index":388}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"./NativeAppState","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":0,"index":460},"end":{"line":15,"column":46,"index":506}}],"key":"oIltyBLtD/SjzawiiRgPLBrfczc="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../EventEmitter/NativeEventEmitter\"));\n  var _logError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../Utilities/logError\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../Utilities/Platform\"));\n  var _NativeAppState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./NativeAppState\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n  /**\n   * `AppState` can tell you if the app is in the foreground or background,\n   * and notify you when the state changes.\n   *\n   * See https://reactnative.dev/docs/appstate\n   */\n  var AppState = /*#__PURE__*/function () {\n    function AppState() {\n      (0, _classCallCheck2.default)(this, AppState);\n      this.currentState = null;\n      if (_NativeAppState.default == null) {\n        this.isAvailable = false;\n      } else {\n        this.isAvailable = true;\n        var emitter = new _NativeEventEmitter.default(\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\n        _Platform.default.OS !== 'ios' ? null : _NativeAppState.default);\n        this._emitter = emitter;\n        this.currentState = _NativeAppState.default.getConstants().initialAppState;\n        var eventUpdated = false;\n\n        // TODO: this is a terrible solution - in order to ensure `currentState`\n        // prop is up to date, we have to register an observer that updates it\n        // whenever the state changes, even if nobody cares. We should just\n        // deprecate the `currentState` property and get rid of this.\n        emitter.addListener('appStateDidChange', appStateData => {\n          eventUpdated = true;\n          this.currentState = appStateData.app_state;\n        });\n\n        // TODO: see above - this request just populates the value of `currentState`\n        // when the module is first initialized. Would be better to get rid of the\n        // prop and expose `getCurrentAppState` method directly.\n        // $FlowExpectedError[incompatible-call]\n        _NativeAppState.default.getCurrentAppState(appStateData => {\n          // It's possible that the state will have changed here & listeners need to be notified\n          if (!eventUpdated && this.currentState !== appStateData.app_state) {\n            this.currentState = appStateData.app_state;\n            // $FlowFixMe[incompatible-call]\n            emitter.emit('appStateDidChange', appStateData);\n          }\n        }, _logError.default);\n      }\n    }\n\n    /**\n     * Add a handler to AppState changes by listening to the `change` event type\n     * and providing the handler.\n     *\n     * See https://reactnative.dev/docs/appstate#addeventlistener\n     */\n    return (0, _createClass2.default)(AppState, [{\n      key: \"addEventListener\",\n      value: function addEventListener(type, handler) {\n        var emitter = this._emitter;\n        if (emitter == null) {\n          throw new Error('Cannot use AppState when `isAvailable` is false.');\n        }\n        switch (type) {\n          case 'change':\n            // $FlowIssue[invalid-tuple-arity] Flow cannot refine handler based on the event type\n            var changeHandler = handler;\n            return emitter.addListener('appStateDidChange', appStateData => {\n              changeHandler(appStateData.app_state);\n            });\n          case 'memoryWarning':\n            // $FlowIssue[invalid-tuple-arity] Flow cannot refine handler based on the event type\n            var memoryWarningHandler = handler;\n            return emitter.addListener('memoryWarning', memoryWarningHandler);\n          case 'blur':\n          case 'focus':\n            // $FlowIssue[invalid-tuple-arity] Flow cannot refine handler based on the event type\n            var focusOrBlurHandler = handler;\n            return emitter.addListener('appStateFocusChange', hasFocus => {\n              if (type === 'blur' && !hasFocus) {\n                focusOrBlurHandler();\n              }\n              if (type === 'focus' && hasFocus) {\n                focusOrBlurHandler();\n              }\n            });\n        }\n        throw new Error('Trying to subscribe to unknown event: ' + type);\n      }\n    }]);\n  }();\n  module.exports = new AppState();\n});","lineCount":106,"map":[[5,2,11,0],[5,6,11,0,"_NativeEventEmitter"],[5,25,11,0],[5,28,11,0,"_interopRequireDefault"],[5,50,11,0],[5,51,11,0,"_$$_REQUIRE"],[5,62,11,0],[5,63,11,0,"_dependencyMap"],[5,77,11,0],[6,2,12,0],[6,6,12,0,"_logError"],[6,15,12,0],[6,18,12,0,"_interopRequireDefault"],[6,40,12,0],[6,41,12,0,"_$$_REQUIRE"],[6,52,12,0],[6,53,12,0,"_dependencyMap"],[6,67,12,0],[7,2,13,0],[7,6,13,0,"_Platform"],[7,15,13,0],[7,18,13,0,"_interopRequireDefault"],[7,40,13,0],[7,41,13,0,"_$$_REQUIRE"],[7,52,13,0],[7,53,13,0,"_dependencyMap"],[7,67,13,0],[8,2,15,0],[8,6,15,0,"_NativeAppState"],[8,21,15,0],[8,24,15,0,"_interopRequireDefault"],[8,46,15,0],[8,47,15,0,"_$$_REQUIRE"],[8,58,15,0],[8,59,15,0,"_dependencyMap"],[8,73,15,0],[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[16,0,8,0],[17,0,9,0],[18,2,32,0],[19,0,33,0],[20,0,34,0],[21,0,35,0],[22,0,36,0],[23,0,37,0],[24,2,32,0],[24,6,38,6,"AppState"],[24,14,38,14],[25,4,44,2],[25,13,44,2,"AppState"],[25,22,44,2],[25,24,44,16],[26,6,44,16],[26,10,44,16,"_classCallCheck2"],[26,26,44,16],[26,27,44,16,"default"],[26,34,44,16],[26,42,44,16,"AppState"],[26,50,44,16],[27,6,44,16],[27,11,39,2,"currentState"],[27,23,39,14],[27,26,39,26],[27,30,39,30],[28,6,45,4],[28,10,45,8,"NativeAppState"],[28,33,45,22],[28,37,45,26],[28,41,45,30],[28,43,45,32],[29,8,46,6],[29,12,46,10],[29,13,46,11,"isAvailable"],[29,24,46,22],[29,27,46,25],[29,32,46,30],[30,6,47,4],[30,7,47,5],[30,13,47,11],[31,8,48,6],[31,12,48,10],[31,13,48,11,"isAvailable"],[31,24,48,22],[31,27,48,25],[31,31,48,29],[32,8,50,6],[32,12,50,12,"emitter"],[32,19,50,71],[32,22,51,8],[32,26,51,12,"NativeEventEmitter"],[32,53,51,30],[33,8,52,10],[34,8,53,10],[35,8,54,10,"Platform"],[35,25,54,18],[35,26,54,19,"OS"],[35,28,54,21],[35,33,54,26],[35,38,54,31],[35,41,54,34],[35,45,54,38],[35,48,54,41,"NativeAppState"],[35,71,55,8],[35,72,55,9],[36,8,56,6],[36,12,56,10],[36,13,56,11,"_emitter"],[36,21,56,19],[36,24,56,22,"emitter"],[36,31,56,29],[37,8,58,6],[37,12,58,10],[37,13,58,11,"currentState"],[37,25,58,23],[37,28,58,26,"NativeAppState"],[37,51,58,40],[37,52,58,41,"getConstants"],[37,64,58,53],[37,65,58,54],[37,66,58,55],[37,67,58,56,"initialAppState"],[37,82,58,71],[38,8,60,6],[38,12,60,10,"eventUpdated"],[38,24,60,22],[38,27,60,25],[38,32,60,30],[40,8,62,6],[41,8,63,6],[42,8,64,6],[43,8,65,6],[44,8,66,6,"emitter"],[44,15,66,13],[44,16,66,14,"addListener"],[44,27,66,25],[44,28,66,26],[44,47,66,45],[44,49,66,47,"appStateData"],[44,61,66,59],[44,65,66,63],[45,10,67,8,"eventUpdated"],[45,22,67,20],[45,25,67,23],[45,29,67,27],[46,10,68,8],[46,14,68,12],[46,15,68,13,"currentState"],[46,27,68,25],[46,30,68,28,"appStateData"],[46,42,68,40],[46,43,68,41,"app_state"],[46,52,68,50],[47,8,69,6],[47,9,69,7],[47,10,69,8],[49,8,71,6],[50,8,72,6],[51,8,73,6],[52,8,74,6],[53,8,75,6,"NativeAppState"],[53,31,75,20],[53,32,75,21,"getCurrentAppState"],[53,50,75,39],[53,51,75,40,"appStateData"],[53,63,75,52],[53,67,75,56],[54,10,76,8],[55,10,77,8],[55,14,77,12],[55,15,77,13,"eventUpdated"],[55,27,77,25],[55,31,77,29],[55,35,77,33],[55,36,77,34,"currentState"],[55,48,77,46],[55,53,77,51,"appStateData"],[55,65,77,63],[55,66,77,64,"app_state"],[55,75,77,73],[55,77,77,75],[56,12,78,10],[56,16,78,14],[56,17,78,15,"currentState"],[56,29,78,27],[56,32,78,30,"appStateData"],[56,44,78,42],[56,45,78,43,"app_state"],[56,54,78,52],[57,12,79,10],[58,12,80,10,"emitter"],[58,19,80,17],[58,20,80,18,"emit"],[58,24,80,22],[58,25,80,23],[58,44,80,42],[58,46,80,44,"appStateData"],[58,58,80,56],[58,59,80,57],[59,10,81,8],[60,8,82,6],[60,9,82,7],[60,11,82,9,"logError"],[60,28,82,17],[60,29,82,18],[61,6,83,4],[62,4,84,2],[64,4,86,2],[65,0,87,0],[66,0,88,0],[67,0,89,0],[68,0,90,0],[69,0,91,0],[70,4,86,2],[70,15,86,2,"_createClass2"],[70,28,86,2],[70,29,86,2,"default"],[70,36,86,2],[70,38,86,2,"AppState"],[70,46,86,2],[71,6,86,2,"key"],[71,9,86,2],[72,6,86,2,"value"],[72,11,86,2],[72,13,92,2],[72,22,92,2,"addEventListener"],[72,38,92,18,"addEventListener"],[72,39,93,4,"type"],[72,43,93,11],[72,45,94,4,"handler"],[72,52,94,67],[72,54,95,23],[73,8,96,4],[73,12,96,10,"emitter"],[73,19,96,17],[73,22,96,20],[73,26,96,24],[73,27,96,25,"_emitter"],[73,35,96,33],[74,8,97,4],[74,12,97,8,"emitter"],[74,19,97,15],[74,23,97,19],[74,27,97,23],[74,29,97,25],[75,10,98,6],[75,16,98,12],[75,20,98,16,"Error"],[75,25,98,21],[75,26,98,22],[75,76,98,72],[75,77,98,73],[76,8,99,4],[77,8,100,4],[77,16,100,12,"type"],[77,20,100,16],[78,10,101,6],[78,15,101,11],[78,23,101,19],[79,12,102,8],[80,12,103,8],[80,16,103,14,"changeHandler"],[80,29,103,51],[80,32,103,54,"handler"],[80,39,103,61],[81,12,104,8],[81,19,104,15,"emitter"],[81,26,104,22],[81,27,104,23,"addListener"],[81,38,104,34],[81,39,104,35],[81,58,104,54],[81,60,104,56,"appStateData"],[81,72,104,68],[81,76,104,72],[82,14,105,10,"changeHandler"],[82,27,105,23],[82,28,105,24,"appStateData"],[82,40,105,36],[82,41,105,37,"app_state"],[82,50,105,46],[82,51,105,47],[83,12,106,8],[83,13,106,9],[83,14,106,10],[84,10,107,6],[84,15,107,11],[84,30,107,26],[85,12,108,8],[86,12,109,8],[86,16,109,14,"memoryWarningHandler"],[86,36,109,46],[86,39,109,49,"handler"],[86,46,109,56],[87,12,110,8],[87,19,110,15,"emitter"],[87,26,110,22],[87,27,110,23,"addListener"],[87,38,110,34],[87,39,110,35],[87,54,110,50],[87,56,110,52,"memoryWarningHandler"],[87,76,110,72],[87,77,110,73],[88,10,111,6],[88,15,111,11],[88,21,111,17],[89,10,112,6],[89,15,112,11],[89,22,112,18],[90,12,113,8],[91,12,114,8],[91,16,114,14,"focusOrBlurHandler"],[91,34,114,44],[91,37,114,47,"handler"],[91,44,114,54],[92,12,115,8],[92,19,115,15,"emitter"],[92,26,115,22],[92,27,115,23,"addListener"],[92,38,115,34],[92,39,115,35],[92,60,115,56],[92,62,115,58,"hasFocus"],[92,70,115,66],[92,74,115,70],[93,14,116,10],[93,18,116,14,"type"],[93,22,116,18],[93,27,116,23],[93,33,116,29],[93,37,116,33],[93,38,116,34,"hasFocus"],[93,46,116,42],[93,48,116,44],[94,16,117,12,"focusOrBlurHandler"],[94,34,117,30],[94,35,117,31],[94,36,117,32],[95,14,118,10],[96,14,119,10],[96,18,119,14,"type"],[96,22,119,18],[96,27,119,23],[96,34,119,30],[96,38,119,34,"hasFocus"],[96,46,119,42],[96,48,119,44],[97,16,120,12,"focusOrBlurHandler"],[97,34,120,30],[97,35,120,31],[97,36,120,32],[98,14,121,10],[99,12,122,8],[99,13,122,9],[99,14,122,10],[100,8,123,4],[101,8,124,4],[101,14,124,10],[101,18,124,14,"Error"],[101,23,124,19],[101,24,124,20],[101,64,124,60],[101,67,124,63,"type"],[101,71,124,67],[101,72,124,68],[102,6,125,2],[103,4,125,3],[104,2,125,3],[105,2,128,0,"module"],[105,8,128,6],[105,9,128,7,"exports"],[105,16,128,14],[105,19,128,18],[105,23,128,22,"AppState"],[105,31,128,30],[105,32,128,31],[105,33,128,43],[106,0,128,44],[106,3]],"functionMap":{"names":["<global>","AppState","constructor","emitter.addListener$argument_1","NativeAppState.getCurrentAppState$argument_0","addEventListener"],"mappings":"AAA;ACqC;ECM;+CCsB;ODG;wCEM;OFO;GDE;EIQ;wDFY;SEE;0DFS;SEO;GJG;CDC"}},"type":"js/module"}]}