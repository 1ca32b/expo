{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":83,"column":0,"index":2240}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"./PerformanceEntry","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":17,"column":0,"index":393},"end":{"line":17,"column":52,"index":445}}],"key":"limm2T+T1Tv0g3goGjXkwAZT0/A="}},{"name":"./PerformanceEventTiming","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":18,"column":0,"index":446},"end":{"line":18,"column":62,"index":508}}],"key":"JgH87HqTtba/7D9cnIh1vqbgoIs="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.RawPerformanceEntryTypeValues = void 0;\n  exports.performanceEntryTypeToRaw = performanceEntryTypeToRaw;\n  exports.rawToPerformanceEntry = rawToPerformanceEntry;\n  exports.rawToPerformanceEntryType = rawToPerformanceEntryType;\n  var _PerformanceEntry = _$$_REQUIRE(_dependencyMap[1], \"./PerformanceEntry\");\n  var _PerformanceEventTiming = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./PerformanceEventTiming\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  var RawPerformanceEntryTypeValues = exports.RawPerformanceEntryTypeValues = {\n    MARK: 1,\n    MEASURE: 2,\n    EVENT: 3\n  };\n  function rawToPerformanceEntry(entry) {\n    if (entry.entryType === RawPerformanceEntryTypeValues.EVENT) {\n      return new _PerformanceEventTiming.default({\n        name: entry.name,\n        startTime: entry.startTime,\n        duration: entry.duration,\n        processingStart: entry.processingStart,\n        processingEnd: entry.processingEnd,\n        interactionId: entry.interactionId\n      });\n    } else {\n      return new _PerformanceEntry.PerformanceEntry({\n        name: entry.name,\n        entryType: rawToPerformanceEntryType(entry.entryType),\n        startTime: entry.startTime,\n        duration: entry.duration\n      });\n    }\n  }\n  function rawToPerformanceEntryType(type) {\n    switch (type) {\n      case RawPerformanceEntryTypeValues.MARK:\n        return 'mark';\n      case RawPerformanceEntryTypeValues.MEASURE:\n        return 'measure';\n      case RawPerformanceEntryTypeValues.EVENT:\n        return 'event';\n      default:\n        throw new TypeError(`rawToPerformanceEntryType: unexpected performance entry type received: ${type}`);\n    }\n  }\n  function performanceEntryTypeToRaw(type) {\n    switch (type) {\n      case 'mark':\n        return RawPerformanceEntryTypeValues.MARK;\n      case 'measure':\n        return RawPerformanceEntryTypeValues.MEASURE;\n      case 'event':\n        return RawPerformanceEntryTypeValues.EVENT;\n      default:\n        // Verify exhaustive check with Flow\n        type;\n        throw new TypeError(`performanceEntryTypeToRaw: unexpected performance entry type received: ${type}`);\n    }\n  }\n});","lineCount":72,"map":[[10,2,17,0],[10,6,17,0,"_PerformanceEntry"],[10,23,17,0],[10,26,17,0,"_$$_REQUIRE"],[10,37,17,0],[10,38,17,0,"_dependencyMap"],[10,52,17,0],[11,2,18,0],[11,6,18,0,"_PerformanceEventTiming"],[11,29,18,0],[11,32,18,0,"_interopRequireDefault"],[11,54,18,0],[11,55,18,0,"_$$_REQUIRE"],[11,66,18,0],[11,67,18,0,"_dependencyMap"],[11,81,18,0],[12,2,1,0],[13,0,2,0],[14,0,3,0],[15,0,4,0],[16,0,5,0],[17,0,6,0],[18,0,7,0],[19,0,8,0],[20,0,9,0],[22,2,20,7],[22,6,20,13,"RawPerformanceEntryTypeValues"],[22,35,20,42],[22,38,20,42,"exports"],[22,45,20,42],[22,46,20,42,"RawPerformanceEntryTypeValues"],[22,75,20,42],[22,78,20,45],[23,4,21,2,"MARK"],[23,8,21,6],[23,10,21,8],[23,11,21,9],[24,4,22,2,"MEASURE"],[24,11,22,9],[24,13,22,11],[24,14,22,12],[25,4,23,2,"EVENT"],[25,9,23,7],[25,11,23,9],[26,2,24,0],[26,3,24,1],[27,2,26,7],[27,11,26,16,"rawToPerformanceEntry"],[27,32,26,37,"rawToPerformanceEntry"],[27,33,27,2,"entry"],[27,38,27,28],[27,40,28,20],[28,4,29,2],[28,8,29,6,"entry"],[28,13,29,11],[28,14,29,12,"entryType"],[28,23,29,21],[28,28,29,26,"RawPerformanceEntryTypeValues"],[28,57,29,55],[28,58,29,56,"EVENT"],[28,63,29,61],[28,65,29,63],[29,6,30,4],[29,13,30,11],[29,17,30,15,"PerformanceEventTiming"],[29,48,30,37],[29,49,30,38],[30,8,31,6,"name"],[30,12,31,10],[30,14,31,12,"entry"],[30,19,31,17],[30,20,31,18,"name"],[30,24,31,22],[31,8,32,6,"startTime"],[31,17,32,15],[31,19,32,17,"entry"],[31,24,32,22],[31,25,32,23,"startTime"],[31,34,32,32],[32,8,33,6,"duration"],[32,16,33,14],[32,18,33,16,"entry"],[32,23,33,21],[32,24,33,22,"duration"],[32,32,33,30],[33,8,34,6,"processingStart"],[33,23,34,21],[33,25,34,23,"entry"],[33,30,34,28],[33,31,34,29,"processingStart"],[33,46,34,44],[34,8,35,6,"processingEnd"],[34,21,35,19],[34,23,35,21,"entry"],[34,28,35,26],[34,29,35,27,"processingEnd"],[34,42,35,40],[35,8,36,6,"interactionId"],[35,21,36,19],[35,23,36,21,"entry"],[35,28,36,26],[35,29,36,27,"interactionId"],[36,6,37,4],[36,7,37,5],[36,8,37,6],[37,4,38,2],[37,5,38,3],[37,11,38,9],[38,6,39,4],[38,13,39,11],[38,17,39,15,"PerformanceEntry"],[38,51,39,31],[38,52,39,32],[39,8,40,6,"name"],[39,12,40,10],[39,14,40,12,"entry"],[39,19,40,17],[39,20,40,18,"name"],[39,24,40,22],[40,8,41,6,"entryType"],[40,17,41,15],[40,19,41,17,"rawToPerformanceEntryType"],[40,44,41,42],[40,45,41,43,"entry"],[40,50,41,48],[40,51,41,49,"entryType"],[40,60,41,58],[40,61,41,59],[41,8,42,6,"startTime"],[41,17,42,15],[41,19,42,17,"entry"],[41,24,42,22],[41,25,42,23,"startTime"],[41,34,42,32],[42,8,43,6,"duration"],[42,16,43,14],[42,18,43,16,"entry"],[42,23,43,21],[42,24,43,22,"duration"],[43,6,44,4],[43,7,44,5],[43,8,44,6],[44,4,45,2],[45,2,46,0],[46,2,48,7],[46,11,48,16,"rawToPerformanceEntryType"],[46,36,48,41,"rawToPerformanceEntryType"],[46,37,49,2,"type"],[46,41,49,31],[46,43,50,24],[47,4,51,2],[47,12,51,10,"type"],[47,16,51,14],[48,6,52,4],[48,11,52,9,"RawPerformanceEntryTypeValues"],[48,40,52,38],[48,41,52,39,"MARK"],[48,45,52,43],[49,8,53,6],[49,15,53,13],[49,21,53,19],[50,6,54,4],[50,11,54,9,"RawPerformanceEntryTypeValues"],[50,40,54,38],[50,41,54,39,"MEASURE"],[50,48,54,46],[51,8,55,6],[51,15,55,13],[51,24,55,22],[52,6,56,4],[52,11,56,9,"RawPerformanceEntryTypeValues"],[52,40,56,38],[52,41,56,39,"EVENT"],[52,46,56,44],[53,8,57,6],[53,15,57,13],[53,22,57,20],[54,6,58,4],[55,8,59,6],[55,14,59,12],[55,18,59,16,"TypeError"],[55,27,59,25],[55,28,60,8],[55,102,60,82,"type"],[55,106,60,86],[55,108,61,6],[55,109,61,7],[56,4,62,2],[57,2,63,0],[58,2,65,7],[58,11,65,16,"performanceEntryTypeToRaw"],[58,36,65,41,"performanceEntryTypeToRaw"],[58,37,66,2,"type"],[58,41,66,28],[58,43,67,27],[59,4,68,2],[59,12,68,10,"type"],[59,16,68,14],[60,6,69,4],[60,11,69,9],[60,17,69,15],[61,8,70,6],[61,15,70,13,"RawPerformanceEntryTypeValues"],[61,44,70,42],[61,45,70,43,"MARK"],[61,49,70,47],[62,6,71,4],[62,11,71,9],[62,20,71,18],[63,8,72,6],[63,15,72,13,"RawPerformanceEntryTypeValues"],[63,44,72,42],[63,45,72,43,"MEASURE"],[63,52,72,50],[64,6,73,4],[64,11,73,9],[64,18,73,16],[65,8,74,6],[65,15,74,13,"RawPerformanceEntryTypeValues"],[65,44,74,42],[65,45,74,43,"EVENT"],[65,50,74,48],[66,6,75,4],[67,8,76,6],[68,8,77,7,"type"],[68,12,77,11],[69,8,78,6],[69,14,78,12],[69,18,78,16,"TypeError"],[69,27,78,25],[69,28,79,8],[69,102,79,82,"type"],[69,106,79,86],[69,108,80,6],[69,109,80,7],[70,4,81,2],[71,2,82,0],[72,0,82,1],[72,3]],"functionMap":{"names":["<global>","rawToPerformanceEntry","rawToPerformanceEntryType","performanceEntryTypeToRaw"],"mappings":"AAA;OCyB;CDoB;OEE;CFe;OGE;CHiB"}},"type":"js/module"}]}