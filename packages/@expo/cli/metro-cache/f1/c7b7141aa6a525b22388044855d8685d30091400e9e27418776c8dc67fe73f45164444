{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":258,"column":0,"index":7150}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":258,"column":0,"index":7150}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":258,"column":0,"index":7150}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"./LogBoxSymbolication","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":20,"column":0,"index":390},"end":{"line":20,"column":61,"index":451}}],"key":"FRYs8b/TcYb52f7GsizAy66txAY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var LogBoxSymbolication = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"./LogBoxSymbolication\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  // TODO: once component stacks are fully supported, we can refactor\n  // ComponentStack to just be Stack and remove these conversions fns.\n  function convertComponentStateToStack(componentStack) {\n    return componentStack.map(frame => ({\n      column: frame?.location?.column,\n      file: frame.fileName,\n      lineNumber: frame?.location?.row,\n      methodName: frame.content,\n      collapse: false\n    }));\n  }\n  function convertStackToComponentStack(stack) {\n    var componentStack = [];\n    for (var i = 0; i < stack.length; i++) {\n      var frame = stack[i];\n      // NOTE: Skip stack frames missing location.\n      if (frame.lineNumber != null && frame.column != null) {\n        componentStack.push({\n          fileName: frame?.file || '',\n          location: {\n            row: frame.lineNumber,\n            column: frame.column\n          },\n          content: frame.methodName,\n          collapse: false\n        });\n      }\n    }\n    return componentStack;\n  }\n  var LogBoxLog = /*#__PURE__*/function () {\n    function LogBoxLog(data) {\n      (0, _classCallCheck2.default)(this, LogBoxLog);\n      this.symbolicated = {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      };\n      this.symbolicatedComponentStack = {\n        error: null,\n        componentStack: null,\n        status: 'NONE'\n      };\n      this.level = data.level;\n      this.type = data.type;\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.componentStackType = data.componentStackType || 'legacy';\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.extraData = data.extraData;\n      this.count = 1;\n      this.onNotificationPress = data.onNotificationPress;\n    }\n    return (0, _createClass2.default)(LogBoxLog, [{\n      key: \"incrementCount\",\n      value: function incrementCount() {\n        this.count += 1;\n      }\n    }, {\n      key: \"getAvailableStack\",\n      value: function getAvailableStack() {\n        return this.symbolicated.status === 'COMPLETE' ? this.symbolicated.stack : this.stack;\n      }\n    }, {\n      key: \"getAvailableComponentStack\",\n      value: function getAvailableComponentStack() {\n        if (this.componentStackType === 'legacy') {\n          return this.componentStack;\n        }\n        return this.symbolicatedComponentStack.status === 'COMPLETE' ? this.symbolicatedComponentStack.componentStack : this.componentStack;\n      }\n    }, {\n      key: \"retrySymbolicate\",\n      value: function retrySymbolicate(callback) {\n        if (this.symbolicated.status !== 'COMPLETE') {\n          LogBoxSymbolication.deleteStack(this.stack);\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"symbolicate\",\n      value: function symbolicate(callback) {\n        if (this.symbolicated.status === 'NONE') {\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"handleSymbolicate\",\n      value: function handleSymbolicate(callback) {\n        if (this.symbolicated.status !== 'PENDING') {\n          this.updateStatus(null, null, null, callback);\n          LogBoxSymbolication.symbolicate(this.stack, this.extraData).then(data => {\n            this.updateStatus(null, data?.stack, data?.codeFrame, callback);\n          }, error => {\n            this.updateStatus(error, null, null, callback);\n          });\n          if (this.componentStack != null && this.componentStackType === 'stack') {\n            this.updateComponentStackStatus(null, null, null, callback);\n            var componentStackFrames = convertComponentStateToStack(this.componentStack);\n            LogBoxSymbolication.symbolicate(componentStackFrames, []).then(data => {\n              this.updateComponentStackStatus(null, convertStackToComponentStack(data.stack), null, callback);\n            }, error => {\n              this.updateComponentStackStatus(error, null, null, callback);\n            });\n          }\n        }\n      }\n    }, {\n      key: \"updateStatus\",\n      value: function updateStatus(error, stack, codeFrame, callback) {\n        var lastStatus = this.symbolicated.status;\n        if (error != null) {\n          this.symbolicated = {\n            error,\n            stack: null,\n            status: 'FAILED'\n          };\n        } else if (stack != null) {\n          if (codeFrame) {\n            this.codeFrame = codeFrame;\n          }\n          this.symbolicated = {\n            error: null,\n            stack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicated = {\n            error: null,\n            stack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicated.status) {\n          callback(this.symbolicated.status);\n        }\n      }\n    }, {\n      key: \"updateComponentStackStatus\",\n      value: function updateComponentStackStatus(error, componentStack, codeFrame, callback) {\n        var lastStatus = this.symbolicatedComponentStack.status;\n        if (error != null) {\n          this.symbolicatedComponentStack = {\n            error,\n            componentStack: null,\n            status: 'FAILED'\n          };\n        } else if (componentStack != null) {\n          this.symbolicatedComponentStack = {\n            error: null,\n            componentStack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicatedComponentStack = {\n            error: null,\n            componentStack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicatedComponentStack.status) {\n          callback(this.symbolicatedComponentStack.status);\n        }\n      }\n    }]);\n  }();\n  var _default = exports.default = LogBoxLog;\n});","lineCount":192,"map":[[9,2,20,0],[9,6,20,0,"LogBoxSymbolication"],[9,25,20,0],[9,28,20,0,"_interopRequireWildcard"],[9,51,20,0],[9,52,20,0,"_$$_REQUIRE"],[9,63,20,0],[9,64,20,0,"_dependencyMap"],[9,78,20,0],[10,2,20,61],[10,11,20,61,"_getRequireWildcardCache"],[10,36,20,61,"e"],[10,37,20,61],[10,66,20,61,"WeakMap"],[10,73,20,61],[10,92,20,61,"r"],[10,93,20,61],[10,100,20,61,"WeakMap"],[10,107,20,61],[10,111,20,61,"t"],[10,112,20,61],[10,119,20,61,"WeakMap"],[10,126,20,61],[10,138,20,61,"_getRequireWildcardCache"],[10,162,20,61],[10,174,20,61,"_getRequireWildcardCache"],[10,175,20,61,"e"],[10,176,20,61],[10,187,20,61,"e"],[10,188,20,61],[10,191,20,61,"t"],[10,192,20,61],[10,195,20,61,"r"],[10,196,20,61],[10,201,20,61,"e"],[10,202,20,61],[11,2,20,61],[11,11,20,61,"_interopRequireWildcard"],[11,35,20,61,"e"],[11,36,20,61],[11,38,20,61,"r"],[11,39,20,61],[11,48,20,61,"r"],[11,49,20,61],[11,53,20,61,"e"],[11,54,20,61],[11,58,20,61,"e"],[11,59,20,61],[11,60,20,61,"__esModule"],[11,70,20,61],[11,79,20,61,"e"],[11,80,20,61],[11,95,20,61,"e"],[11,96,20,61],[11,119,20,61,"e"],[11,120,20,61],[11,145,20,61,"e"],[11,146,20,61],[11,157,20,61,"default"],[11,164,20,61],[11,166,20,61,"e"],[11,167,20,61],[11,175,20,61,"t"],[11,176,20,61],[11,179,20,61,"_getRequireWildcardCache"],[11,203,20,61],[11,204,20,61,"r"],[11,205,20,61],[11,212,20,61,"t"],[11,213,20,61],[11,217,20,61,"t"],[11,218,20,61],[11,219,20,61,"has"],[11,222,20,61],[11,223,20,61,"e"],[11,224,20,61],[11,234,20,61,"t"],[11,235,20,61],[11,236,20,61,"get"],[11,239,20,61],[11,240,20,61,"e"],[11,241,20,61],[11,248,20,61,"n"],[11,249,20,61],[11,254,20,61,"__proto__"],[11,263,20,61],[11,273,20,61,"a"],[11,274,20,61],[11,277,20,61,"Object"],[11,283,20,61],[11,284,20,61,"defineProperty"],[11,298,20,61],[11,302,20,61,"Object"],[11,308,20,61],[11,309,20,61,"getOwnPropertyDescriptor"],[11,333,20,61],[11,344,20,61,"u"],[11,345,20,61],[11,349,20,61,"e"],[11,350,20,61],[11,370,20,61,"u"],[11,371,20,61],[11,375,20,61,"Object"],[11,381,20,61],[11,382,20,61,"prototype"],[11,391,20,61],[11,392,20,61,"hasOwnProperty"],[11,406,20,61],[11,407,20,61,"call"],[11,411,20,61],[11,412,20,61,"e"],[11,413,20,61],[11,415,20,61,"u"],[11,416,20,61],[11,425,20,61,"i"],[11,426,20,61],[11,429,20,61,"a"],[11,430,20,61],[11,433,20,61,"Object"],[11,439,20,61],[11,440,20,61,"getOwnPropertyDescriptor"],[11,464,20,61],[11,465,20,61,"e"],[11,466,20,61],[11,468,20,61,"u"],[11,469,20,61],[11,479,20,61,"i"],[11,480,20,61],[11,485,20,61,"i"],[11,486,20,61],[11,487,20,61,"get"],[11,490,20,61],[11,494,20,61,"i"],[11,495,20,61],[11,496,20,61,"set"],[11,499,20,61],[11,503,20,61,"Object"],[11,509,20,61],[11,510,20,61,"defineProperty"],[11,524,20,61],[11,525,20,61,"n"],[11,526,20,61],[11,528,20,61,"u"],[11,529,20,61],[11,531,20,61,"i"],[11,532,20,61],[11,536,20,61,"n"],[11,537,20,61],[11,538,20,61,"u"],[11,539,20,61],[11,543,20,61,"e"],[11,544,20,61],[11,545,20,61,"u"],[11,546,20,61],[11,558,20,61,"n"],[11,559,20,61],[11,560,20,61,"default"],[11,567,20,61],[11,570,20,61,"e"],[11,571,20,61],[11,573,20,61,"t"],[11,574,20,61],[11,578,20,61,"t"],[11,579,20,61],[11,580,20,61,"set"],[11,583,20,61],[11,584,20,61,"e"],[11,585,20,61],[11,587,20,61,"n"],[11,588,20,61],[11,591,20,61,"n"],[11,592,20,61],[12,2,1,0],[13,0,2,0],[14,0,3,0],[15,0,4,0],[16,0,5,0],[17,0,6,0],[18,0,7,0],[19,0,8,0],[20,0,9,0],[22,2,26,0],[23,2,27,0],[24,2,28,0],[24,11,28,9,"convertComponentStateToStack"],[24,39,28,37,"convertComponentStateToStack"],[24,40,28,38,"componentStack"],[24,54,28,68],[24,56,28,77],[25,4,29,2],[25,11,29,9,"componentStack"],[25,25,29,23],[25,26,29,24,"map"],[25,29,29,27],[25,30,29,28,"frame"],[25,35,29,33],[25,40,29,38],[26,6,30,4,"column"],[26,12,30,10],[26,14,30,12,"frame"],[26,19,30,17],[26,21,30,19,"location"],[26,29,30,27],[26,31,30,29,"column"],[26,37,30,35],[27,6,31,4,"file"],[27,10,31,8],[27,12,31,10,"frame"],[27,17,31,15],[27,18,31,16,"fileName"],[27,26,31,24],[28,6,32,4,"lineNumber"],[28,16,32,14],[28,18,32,16,"frame"],[28,23,32,21],[28,25,32,23,"location"],[28,33,32,31],[28,35,32,33,"row"],[28,38,32,36],[29,6,33,4,"methodName"],[29,16,33,14],[29,18,33,16,"frame"],[29,23,33,21],[29,24,33,22,"content"],[29,31,33,29],[30,6,34,4,"collapse"],[30,14,34,12],[30,16,34,14],[31,4,35,2],[31,5,35,3],[31,6,35,4],[31,7,35,5],[32,2,36,0],[33,2,38,0],[33,11,38,9,"convertStackToComponentStack"],[33,39,38,37,"convertStackToComponentStack"],[33,40,38,38,"stack"],[33,45,38,50],[33,47,38,68],[34,4,39,2],[34,8,39,8,"componentStack"],[34,22,39,22],[34,25,39,25],[34,27,39,27],[35,4,40,2],[35,9,40,7],[35,13,40,11,"i"],[35,14,40,12],[35,17,40,15],[35,18,40,16],[35,20,40,18,"i"],[35,21,40,19],[35,24,40,22,"stack"],[35,29,40,27],[35,30,40,28,"length"],[35,36,40,34],[35,38,40,36,"i"],[35,39,40,37],[35,41,40,39],[35,43,40,41],[36,6,41,4],[36,10,41,10,"frame"],[36,15,41,15],[36,18,41,18,"stack"],[36,23,41,23],[36,24,41,24,"i"],[36,25,41,25],[36,26,41,26],[37,6,42,4],[38,6,43,4],[38,10,43,8,"frame"],[38,15,43,13],[38,16,43,14,"lineNumber"],[38,26,43,24],[38,30,43,28],[38,34,43,32],[38,38,43,36,"frame"],[38,43,43,41],[38,44,43,42,"column"],[38,50,43,48],[38,54,43,52],[38,58,43,56],[38,60,43,58],[39,8,44,6,"componentStack"],[39,22,44,20],[39,23,44,21,"push"],[39,27,44,25],[39,28,44,26],[40,10,45,8,"fileName"],[40,18,45,16],[40,20,45,18,"frame"],[40,25,45,23],[40,27,45,25,"file"],[40,31,45,29],[40,35,45,33],[40,37,45,35],[41,10,46,8,"location"],[41,18,46,16],[41,20,46,18],[42,12,47,10,"row"],[42,15,47,13],[42,17,47,15,"frame"],[42,22,47,20],[42,23,47,21,"lineNumber"],[42,33,47,31],[43,12,48,10,"column"],[43,18,48,16],[43,20,48,18,"frame"],[43,25,48,23],[43,26,48,24,"column"],[44,10,49,8],[44,11,49,9],[45,10,50,8,"content"],[45,17,50,15],[45,19,50,17,"frame"],[45,24,50,22],[45,25,50,23,"methodName"],[45,35,50,33],[46,10,51,8,"collapse"],[46,18,51,16],[46,20,51,18],[47,8,52,6],[47,9,52,7],[47,10,52,8],[48,6,53,4],[49,4,54,2],[50,4,55,2],[50,11,55,9,"componentStack"],[50,25,55,23],[51,2,56,0],[52,2,56,1],[52,6,72,6,"LogBoxLog"],[52,15,72,15],[53,4,108,2],[53,13,108,2,"LogBoxLog"],[53,23,108,14,"data"],[53,27,108,33],[53,29,108,35],[54,6,108,35],[54,10,108,35,"_classCallCheck2"],[54,26,108,35],[54,27,108,35,"default"],[54,34,108,35],[54,42,108,35,"LogBoxLog"],[54,51,108,35],[55,6,108,35],[55,11,84,2,"symbolicated"],[55,23,84,14],[55,26,88,67],[56,8,89,4,"error"],[56,13,89,9],[56,15,89,11],[56,19,89,15],[57,8,90,4,"stack"],[57,13,90,9],[57,15,90,11],[57,19,90,15],[58,8,91,4,"status"],[58,14,91,10],[58,16,91,12],[59,6,92,2],[59,7,92,3],[60,6,92,3],[60,11,93,2,"symbolicatedComponentStack"],[60,37,93,28],[60,40,101,76],[61,8,102,4,"error"],[61,13,102,9],[61,15,102,11],[61,19,102,15],[62,8,103,4,"componentStack"],[62,22,103,18],[62,24,103,20],[62,28,103,24],[63,8,104,4,"status"],[63,14,104,10],[63,16,104,12],[64,6,105,2],[64,7,105,3],[65,6,109,4],[65,10,109,8],[65,11,109,9,"level"],[65,16,109,14],[65,19,109,17,"data"],[65,23,109,21],[65,24,109,22,"level"],[65,29,109,27],[66,6,110,4],[66,10,110,8],[66,11,110,9,"type"],[66,15,110,13],[66,18,110,16,"data"],[66,22,110,20],[66,23,110,21,"type"],[66,27,110,25],[67,6,111,4],[67,10,111,8],[67,11,111,9,"message"],[67,18,111,16],[67,21,111,19,"data"],[67,25,111,23],[67,26,111,24,"message"],[67,33,111,31],[68,6,112,4],[68,10,112,8],[68,11,112,9,"stack"],[68,16,112,14],[68,19,112,17,"data"],[68,23,112,21],[68,24,112,22,"stack"],[68,29,112,27],[69,6,113,4],[69,10,113,8],[69,11,113,9,"category"],[69,19,113,17],[69,22,113,20,"data"],[69,26,113,24],[69,27,113,25,"category"],[69,35,113,33],[70,6,114,4],[70,10,114,8],[70,11,114,9,"componentStack"],[70,25,114,23],[70,28,114,26,"data"],[70,32,114,30],[70,33,114,31,"componentStack"],[70,47,114,45],[71,6,115,4],[71,10,115,8],[71,11,115,9,"componentStackType"],[71,29,115,27],[71,32,115,30,"data"],[71,36,115,34],[71,37,115,35,"componentStackType"],[71,55,115,53],[71,59,115,57],[71,67,115,65],[72,6,116,4],[72,10,116,8],[72,11,116,9,"codeFrame"],[72,20,116,18],[72,23,116,21,"data"],[72,27,116,25],[72,28,116,26,"codeFrame"],[72,37,116,35],[73,6,117,4],[73,10,117,8],[73,11,117,9,"isComponentError"],[73,27,117,25],[73,30,117,28,"data"],[73,34,117,32],[73,35,117,33,"isComponentError"],[73,51,117,49],[74,6,118,4],[74,10,118,8],[74,11,118,9,"extraData"],[74,20,118,18],[74,23,118,21,"data"],[74,27,118,25],[74,28,118,26,"extraData"],[74,37,118,35],[75,6,119,4],[75,10,119,8],[75,11,119,9,"count"],[75,16,119,14],[75,19,119,17],[75,20,119,18],[76,6,120,4],[76,10,120,8],[76,11,120,9,"onNotificationPress"],[76,30,120,28],[76,33,120,31,"data"],[76,37,120,35],[76,38,120,36,"onNotificationPress"],[76,57,120,55],[77,4,121,2],[78,4,121,3],[78,15,121,3,"_createClass2"],[78,28,121,3],[78,29,121,3,"default"],[78,36,121,3],[78,38,121,3,"LogBoxLog"],[78,47,121,3],[79,6,121,3,"key"],[79,9,121,3],[80,6,121,3,"value"],[80,11,121,3],[80,13,123,2],[80,22,123,2,"incrementCount"],[80,36,123,16,"incrementCount"],[80,37,123,16],[80,39,123,25],[81,8,124,4],[81,12,124,8],[81,13,124,9,"count"],[81,18,124,14],[81,22,124,18],[81,23,124,19],[82,6,125,2],[83,4,125,3],[84,6,125,3,"key"],[84,9,125,3],[85,6,125,3,"value"],[85,11,125,3],[85,13,127,2],[85,22,127,2,"getAvailableStack"],[85,39,127,19,"getAvailableStack"],[85,40,127,19],[85,42,127,29],[86,8,128,4],[86,15,128,11],[86,19,128,15],[86,20,128,16,"symbolicated"],[86,32,128,28],[86,33,128,29,"status"],[86,39,128,35],[86,44,128,40],[86,54,128,50],[86,57,129,8],[86,61,129,12],[86,62,129,13,"symbolicated"],[86,74,129,25],[86,75,129,26,"stack"],[86,80,129,31],[86,83,130,8],[86,87,130,12],[86,88,130,13,"stack"],[86,93,130,18],[87,6,131,2],[88,4,131,3],[89,6,131,3,"key"],[89,9,131,3],[90,6,131,3,"value"],[90,11,131,3],[90,13,133,2],[90,22,133,2,"getAvailableComponentStack"],[90,48,133,28,"getAvailableComponentStack"],[90,49,133,28],[90,51,133,47],[91,8,134,4],[91,12,134,8],[91,16,134,12],[91,17,134,13,"componentStackType"],[91,35,134,31],[91,40,134,36],[91,48,134,44],[91,50,134,46],[92,10,135,6],[92,17,135,13],[92,21,135,17],[92,22,135,18,"componentStack"],[92,36,135,32],[93,8,136,4],[94,8,137,4],[94,15,137,11],[94,19,137,15],[94,20,137,16,"symbolicatedComponentStack"],[94,46,137,42],[94,47,137,43,"status"],[94,53,137,49],[94,58,137,54],[94,68,137,64],[94,71,138,8],[94,75,138,12],[94,76,138,13,"symbolicatedComponentStack"],[94,102,138,39],[94,103,138,40,"componentStack"],[94,117,138,54],[94,120,139,8],[94,124,139,12],[94,125,139,13,"componentStack"],[94,139,139,27],[95,6,140,2],[96,4,140,3],[97,6,140,3,"key"],[97,9,140,3],[98,6,140,3,"value"],[98,11,140,3],[98,13,142,2],[98,22,142,2,"retrySymbolicate"],[98,38,142,18,"retrySymbolicate"],[98,39,142,19,"callback"],[98,47,142,67],[98,49,142,75],[99,8,143,4],[99,12,143,8],[99,16,143,12],[99,17,143,13,"symbolicated"],[99,29,143,25],[99,30,143,26,"status"],[99,36,143,32],[99,41,143,37],[99,51,143,47],[99,53,143,49],[100,10,144,6,"LogBoxSymbolication"],[100,29,144,25],[100,30,144,26,"deleteStack"],[100,41,144,37],[100,42,144,38],[100,46,144,42],[100,47,144,43,"stack"],[100,52,144,48],[100,53,144,49],[101,10,145,6],[101,14,145,10],[101,15,145,11,"handleSymbolicate"],[101,32,145,28],[101,33,145,29,"callback"],[101,41,145,37],[101,42,145,38],[102,8,146,4],[103,6,147,2],[104,4,147,3],[105,6,147,3,"key"],[105,9,147,3],[106,6,147,3,"value"],[106,11,147,3],[106,13,149,2],[106,22,149,2,"symbolicate"],[106,33,149,13,"symbolicate"],[106,34,149,14,"callback"],[106,42,149,62],[106,44,149,70],[107,8,150,4],[107,12,150,8],[107,16,150,12],[107,17,150,13,"symbolicated"],[107,29,150,25],[107,30,150,26,"status"],[107,36,150,32],[107,41,150,37],[107,47,150,43],[107,49,150,45],[108,10,151,6],[108,14,151,10],[108,15,151,11,"handleSymbolicate"],[108,32,151,28],[108,33,151,29,"callback"],[108,41,151,37],[108,42,151,38],[109,8,152,4],[110,6,153,2],[111,4,153,3],[112,6,153,3,"key"],[112,9,153,3],[113,6,153,3,"value"],[113,11,153,3],[113,13,155,2],[113,22,155,2,"handleSymbolicate"],[113,39,155,19,"handleSymbolicate"],[113,40,155,20,"callback"],[113,48,155,68],[113,50,155,76],[114,8,156,4],[114,12,156,8],[114,16,156,12],[114,17,156,13,"symbolicated"],[114,29,156,25],[114,30,156,26,"status"],[114,36,156,32],[114,41,156,37],[114,50,156,46],[114,52,156,48],[115,10,157,6],[115,14,157,10],[115,15,157,11,"updateStatus"],[115,27,157,23],[115,28,157,24],[115,32,157,28],[115,34,157,30],[115,38,157,34],[115,40,157,36],[115,44,157,40],[115,46,157,42,"callback"],[115,54,157,50],[115,55,157,51],[116,10,158,6,"LogBoxSymbolication"],[116,29,158,25],[116,30,158,26,"symbolicate"],[116,41,158,37],[116,42,158,38],[116,46,158,42],[116,47,158,43,"stack"],[116,52,158,48],[116,54,158,50],[116,58,158,54],[116,59,158,55,"extraData"],[116,68,158,64],[116,69,158,65],[116,70,158,66,"then"],[116,74,158,70],[116,75,159,8,"data"],[116,79,159,12],[116,83,159,16],[117,12,160,10],[117,16,160,14],[117,17,160,15,"updateStatus"],[117,29,160,27],[117,30,160,28],[117,34,160,32],[117,36,160,34,"data"],[117,40,160,38],[117,42,160,40,"stack"],[117,47,160,45],[117,49,160,47,"data"],[117,53,160,51],[117,55,160,53,"codeFrame"],[117,64,160,62],[117,66,160,64,"callback"],[117,74,160,72],[117,75,160,73],[118,10,161,8],[118,11,161,9],[118,13,162,8,"error"],[118,18,162,13],[118,22,162,17],[119,12,163,10],[119,16,163,14],[119,17,163,15,"updateStatus"],[119,29,163,27],[119,30,163,28,"error"],[119,35,163,33],[119,37,163,35],[119,41,163,39],[119,43,163,41],[119,47,163,45],[119,49,163,47,"callback"],[119,57,163,55],[119,58,163,56],[120,10,164,8],[120,11,165,6],[120,12,165,7],[121,10,166,6],[121,14,166,10],[121,18,166,14],[121,19,166,15,"componentStack"],[121,33,166,29],[121,37,166,33],[121,41,166,37],[121,45,166,41],[121,49,166,45],[121,50,166,46,"componentStackType"],[121,68,166,64],[121,73,166,69],[121,80,166,76],[121,82,166,78],[122,12,167,8],[122,16,167,12],[122,17,167,13,"updateComponentStackStatus"],[122,43,167,39],[122,44,167,40],[122,48,167,44],[122,50,167,46],[122,54,167,50],[122,56,167,52],[122,60,167,56],[122,62,167,58,"callback"],[122,70,167,66],[122,71,167,67],[123,12,168,8],[123,16,168,14,"componentStackFrames"],[123,36,168,34],[123,39,168,37,"convertComponentStateToStack"],[123,67,168,65],[123,68,169,10],[123,72,169,14],[123,73,169,15,"componentStack"],[123,87,170,8],[123,88,170,9],[124,12,171,8,"LogBoxSymbolication"],[124,31,171,27],[124,32,171,28,"symbolicate"],[124,43,171,39],[124,44,171,40,"componentStackFrames"],[124,64,171,60],[124,66,171,62],[124,68,171,64],[124,69,171,65],[124,70,171,66,"then"],[124,74,171,70],[124,75,172,10,"data"],[124,79,172,14],[124,83,172,18],[125,14,173,12],[125,18,173,16],[125,19,173,17,"updateComponentStackStatus"],[125,45,173,43],[125,46,174,14],[125,50,174,18],[125,52,175,14,"convertStackToComponentStack"],[125,80,175,42],[125,81,175,43,"data"],[125,85,175,47],[125,86,175,48,"stack"],[125,91,175,53],[125,92,175,54],[125,94,176,14],[125,98,176,18],[125,100,177,14,"callback"],[125,108,178,12],[125,109,178,13],[126,12,179,10],[126,13,179,11],[126,15,180,10,"error"],[126,20,180,15],[126,24,180,19],[127,14,181,12],[127,18,181,16],[127,19,181,17,"updateComponentStackStatus"],[127,45,181,43],[127,46,181,44,"error"],[127,51,181,49],[127,53,181,51],[127,57,181,55],[127,59,181,57],[127,63,181,61],[127,65,181,63,"callback"],[127,73,181,71],[127,74,181,72],[128,12,182,10],[128,13,183,8],[128,14,183,9],[129,10,184,6],[130,8,185,4],[131,6,186,2],[132,4,186,3],[133,6,186,3,"key"],[133,9,186,3],[134,6,186,3,"value"],[134,11,186,3],[134,13,188,2],[134,22,188,2,"updateStatus"],[134,34,188,14,"updateStatus"],[134,35,189,4,"error"],[134,40,189,17],[134,42,190,4,"stack"],[134,47,190,17],[134,49,191,4,"codeFrame"],[134,58,191,25],[134,60,192,4,"callback"],[134,68,192,52],[134,70,193,10],[135,8,194,4],[135,12,194,10,"lastStatus"],[135,22,194,20],[135,25,194,23],[135,29,194,27],[135,30,194,28,"symbolicated"],[135,42,194,40],[135,43,194,41,"status"],[135,49,194,47],[136,8,195,4],[136,12,195,8,"error"],[136,17,195,13],[136,21,195,17],[136,25,195,21],[136,27,195,23],[137,10,196,6],[137,14,196,10],[137,15,196,11,"symbolicated"],[137,27,196,23],[137,30,196,26],[138,12,197,8,"error"],[138,17,197,13],[139,12,198,8,"stack"],[139,17,198,13],[139,19,198,15],[139,23,198,19],[140,12,199,8,"status"],[140,18,199,14],[140,20,199,16],[141,10,200,6],[141,11,200,7],[142,8,201,4],[142,9,201,5],[142,15,201,11],[142,19,201,15,"stack"],[142,24,201,20],[142,28,201,24],[142,32,201,28],[142,34,201,30],[143,10,202,6],[143,14,202,10,"codeFrame"],[143,23,202,19],[143,25,202,21],[144,12,203,8],[144,16,203,12],[144,17,203,13,"codeFrame"],[144,26,203,22],[144,29,203,25,"codeFrame"],[144,38,203,34],[145,10,204,6],[146,10,206,6],[146,14,206,10],[146,15,206,11,"symbolicated"],[146,27,206,23],[146,30,206,26],[147,12,207,8,"error"],[147,17,207,13],[147,19,207,15],[147,23,207,19],[148,12,208,8,"stack"],[148,17,208,13],[149,12,209,8,"status"],[149,18,209,14],[149,20,209,16],[150,10,210,6],[150,11,210,7],[151,8,211,4],[151,9,211,5],[151,15,211,11],[152,10,212,6],[152,14,212,10],[152,15,212,11,"symbolicated"],[152,27,212,23],[152,30,212,26],[153,12,213,8,"error"],[153,17,213,13],[153,19,213,15],[153,23,213,19],[154,12,214,8,"stack"],[154,17,214,13],[154,19,214,15],[154,23,214,19],[155,12,215,8,"status"],[155,18,215,14],[155,20,215,16],[156,10,216,6],[156,11,216,7],[157,8,217,4],[158,8,219,4],[158,12,219,8,"callback"],[158,20,219,16],[158,24,219,20,"lastStatus"],[158,34,219,30],[158,39,219,35],[158,43,219,39],[158,44,219,40,"symbolicated"],[158,56,219,52],[158,57,219,53,"status"],[158,63,219,59],[158,65,219,61],[159,10,220,6,"callback"],[159,18,220,14],[159,19,220,15],[159,23,220,19],[159,24,220,20,"symbolicated"],[159,36,220,32],[159,37,220,33,"status"],[159,43,220,39],[159,44,220,40],[160,8,221,4],[161,6,222,2],[162,4,222,3],[163,6,222,3,"key"],[163,9,222,3],[164,6,222,3,"value"],[164,11,222,3],[164,13,224,2],[164,22,224,2,"updateComponentStackStatus"],[164,48,224,28,"updateComponentStackStatus"],[164,49,225,4,"error"],[164,54,225,17],[164,56,226,4,"componentStack"],[164,70,226,35],[164,72,227,4,"codeFrame"],[164,81,227,25],[164,83,228,4,"callback"],[164,91,228,52],[164,93,229,10],[165,8,230,4],[165,12,230,10,"lastStatus"],[165,22,230,20],[165,25,230,23],[165,29,230,27],[165,30,230,28,"symbolicatedComponentStack"],[165,56,230,54],[165,57,230,55,"status"],[165,63,230,61],[166,8,231,4],[166,12,231,8,"error"],[166,17,231,13],[166,21,231,17],[166,25,231,21],[166,27,231,23],[167,10,232,6],[167,14,232,10],[167,15,232,11,"symbolicatedComponentStack"],[167,41,232,37],[167,44,232,40],[168,12,233,8,"error"],[168,17,233,13],[169,12,234,8,"componentStack"],[169,26,234,22],[169,28,234,24],[169,32,234,28],[170,12,235,8,"status"],[170,18,235,14],[170,20,235,16],[171,10,236,6],[171,11,236,7],[172,8,237,4],[172,9,237,5],[172,15,237,11],[172,19,237,15,"componentStack"],[172,33,237,29],[172,37,237,33],[172,41,237,37],[172,43,237,39],[173,10,238,6],[173,14,238,10],[173,15,238,11,"symbolicatedComponentStack"],[173,41,238,37],[173,44,238,40],[174,12,239,8,"error"],[174,17,239,13],[174,19,239,15],[174,23,239,19],[175,12,240,8,"componentStack"],[175,26,240,22],[176,12,241,8,"status"],[176,18,241,14],[176,20,241,16],[177,10,242,6],[177,11,242,7],[178,8,243,4],[178,9,243,5],[178,15,243,11],[179,10,244,6],[179,14,244,10],[179,15,244,11,"symbolicatedComponentStack"],[179,41,244,37],[179,44,244,40],[180,12,245,8,"error"],[180,17,245,13],[180,19,245,15],[180,23,245,19],[181,12,246,8,"componentStack"],[181,26,246,22],[181,28,246,24],[181,32,246,28],[182,12,247,8,"status"],[182,18,247,14],[182,20,247,16],[183,10,248,6],[183,11,248,7],[184,8,249,4],[185,8,251,4],[185,12,251,8,"callback"],[185,20,251,16],[185,24,251,20,"lastStatus"],[185,34,251,30],[185,39,251,35],[185,43,251,39],[185,44,251,40,"symbolicatedComponentStack"],[185,70,251,66],[185,71,251,67,"status"],[185,77,251,73],[185,79,251,75],[186,10,252,6,"callback"],[186,18,252,14],[186,19,252,15],[186,23,252,19],[186,24,252,20,"symbolicatedComponentStack"],[186,50,252,46],[186,51,252,47,"status"],[186,57,252,53],[186,58,252,54],[187,8,253,4],[188,6,254,2],[189,4,254,3],[190,2,254,3],[191,2,254,3],[191,6,254,3,"_default"],[191,14,254,3],[191,17,254,3,"exports"],[191,24,254,3],[191,25,254,3,"default"],[191,32,254,3],[191,35,257,15,"LogBoxLog"],[191,44,257,24],[192,0,257,24],[192,3]],"functionMap":{"names":["<global>","convertComponentStateToStack","componentStack.map$argument_0","convertStackToComponentStack","LogBoxLog","constructor","incrementCount","getAvailableStack","getAvailableComponentStack","retrySymbolicate","symbolicate","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","updateComponentStackStatus"],"mappings":"AAA;AC2B;4BCC;IDM;CDC;AGE;CHkB;AIgB;ECoC;GDa;EEE;GFE;EGE;GHI;EIE;GJO;EKE;GLK;EME;GNI;EOE;QCI;SDE;QEC;SFE;UCQ;WDO;UEC;WFE;GPI;EUE;GVkC;EWE;GX8B;CJC"}},"type":"js/module"}]}