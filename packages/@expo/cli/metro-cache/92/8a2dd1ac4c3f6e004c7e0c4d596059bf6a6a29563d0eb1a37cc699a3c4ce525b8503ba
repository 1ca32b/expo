{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":153,"column":0,"index":4139}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":153,"column":0,"index":4139}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"../../Network/RCTNetworking","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":12,"column":0,"index":252},"end":{"line":12,"column":53,"index":305}}],"key":"wySpsWJSjIQ5Ial9e44CE8RyR7A="}},{"name":"../../Utilities/DevLoadingView","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":0,"index":306},"end":{"line":13,"column":60,"index":366}}],"key":"0lNfgsVSaZT6xuORL0X+WRqSWkw="}},{"name":"../../Utilities/HMRClient","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0,"index":367},"end":{"line":14,"column":50,"index":417}}],"key":"LgBf4jLtCmwaRryTgQUTgtwHEdY="}},{"name":"./getDevServer","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":0,"index":418},"end":{"line":15,"column":42,"index":460}}],"key":"PEcM6TbyS4rBYfu5y89u4bAVQj8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _RCTNetworking = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../../Network/RCTNetworking\"));\n  var _DevLoadingView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../../Utilities/DevLoadingView\"));\n  var _HMRClient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../../Utilities/HMRClient\"));\n  var _getDevServer2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./getDevServer\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   * @oncall react_native\n   */\n\n  var pendingRequests = 0;\n  var cachedPromisesByUrl = new Map();\n  function asyncRequest(url) {\n    var id = null;\n    var responseText = null;\n    var headers = null;\n    var dataListener;\n    var completeListener;\n    var responseListener;\n    var incrementalDataListener;\n    return new Promise((resolve, reject) => {\n      dataListener = _RCTNetworking.default.addListener('didReceiveNetworkData', _ref => {\n        var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n          requestId = _ref2[0],\n          response = _ref2[1];\n        if (requestId === id) {\n          responseText = response;\n        }\n      });\n      incrementalDataListener = _RCTNetworking.default.addListener('didReceiveNetworkIncrementalData', _ref3 => {\n        var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n          requestId = _ref4[0],\n          data = _ref4[1];\n        if (requestId === id) {\n          if (responseText != null) {\n            responseText += data;\n          } else {\n            responseText = data;\n          }\n        }\n      });\n      responseListener = _RCTNetworking.default.addListener('didReceiveNetworkResponse', _ref5 => {\n        var _ref6 = (0, _slicedToArray2.default)(_ref5, 3),\n          requestId = _ref6[0],\n          status = _ref6[1],\n          responseHeaders = _ref6[2];\n        if (requestId === id) {\n          headers = responseHeaders;\n        }\n      });\n      completeListener = _RCTNetworking.default.addListener('didCompleteNetworkResponse', _ref7 => {\n        var _ref8 = (0, _slicedToArray2.default)(_ref7, 2),\n          requestId = _ref8[0],\n          error = _ref8[1];\n        if (requestId === id) {\n          if (error) {\n            reject(error);\n          } else {\n            //$FlowFixMe[incompatible-call]\n            resolve({\n              body: responseText,\n              headers\n            });\n          }\n        }\n      });\n      _RCTNetworking.default.sendRequest('GET', 'asyncRequest', url, {}, '', 'text', true, 0, requestId => {\n        id = requestId;\n      }, true);\n    }).finally(() => {\n      dataListener?.remove();\n      completeListener?.remove();\n      responseListener?.remove();\n      incrementalDataListener?.remove();\n    });\n  }\n  function buildUrlForBundle(bundlePathAndQuery) {\n    var _getDevServer = (0, _getDevServer2.default)(),\n      serverUrl = _getDevServer.url;\n    return serverUrl.replace(/\\/+$/, '') + '/' + bundlePathAndQuery.replace(/^\\/+/, '');\n  }\n  module.exports = function (bundlePathAndQuery) {\n    var requestUrl = buildUrlForBundle(bundlePathAndQuery);\n    var loadPromise = cachedPromisesByUrl.get(requestUrl);\n    if (loadPromise) {\n      return loadPromise;\n    }\n    _DevLoadingView.default.showMessage('Downloading...', 'load');\n    ++pendingRequests;\n    loadPromise = asyncRequest(requestUrl).then(_ref9 => {\n      var body = _ref9.body,\n        headers = _ref9.headers;\n      if (headers['Content-Type'] != null && headers['Content-Type'].indexOf('application/json') >= 0) {\n        // Errors are returned as JSON.\n        throw new Error(JSON.parse(body).message || `Unknown error fetching '${bundlePathAndQuery}'`);\n      }\n      _HMRClient.default.registerBundle(requestUrl);\n\n      // Some engines do not support `sourceURL` as a comment. We expose a\n      // `globalEvalWithSourceUrl` function to handle updates in that case.\n      if (global.globalEvalWithSourceUrl) {\n        global.globalEvalWithSourceUrl(body, requestUrl);\n      } else {\n        // eslint-disable-next-line no-eval\n        eval(body);\n      }\n    }).catch(e => {\n      cachedPromisesByUrl.delete(requestUrl);\n      throw e;\n    }).finally(() => {\n      if (! --pendingRequests) {\n        _DevLoadingView.default.hide();\n      }\n    });\n    cachedPromisesByUrl.set(requestUrl, loadPromise);\n    return loadPromise;\n  };\n});","lineCount":126,"map":[[4,2,12,0],[4,6,12,0,"_RCTNetworking"],[4,20,12,0],[4,23,12,0,"_interopRequireDefault"],[4,45,12,0],[4,46,12,0,"_$$_REQUIRE"],[4,57,12,0],[4,58,12,0,"_dependencyMap"],[4,72,12,0],[5,2,13,0],[5,6,13,0,"_DevLoadingView"],[5,21,13,0],[5,24,13,0,"_interopRequireDefault"],[5,46,13,0],[5,47,13,0,"_$$_REQUIRE"],[5,58,13,0],[5,59,13,0,"_dependencyMap"],[5,73,13,0],[6,2,14,0],[6,6,14,0,"_HMRClient"],[6,16,14,0],[6,19,14,0,"_interopRequireDefault"],[6,41,14,0],[6,42,14,0,"_$$_REQUIRE"],[6,53,14,0],[6,54,14,0,"_dependencyMap"],[6,68,14,0],[7,2,15,0],[7,6,15,0,"_getDevServer2"],[7,20,15,0],[7,23,15,0,"_interopRequireDefault"],[7,45,15,0],[7,46,15,0,"_$$_REQUIRE"],[7,57,15,0],[7,58,15,0,"_dependencyMap"],[7,72,15,0],[8,2,1,0],[9,0,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[19,2,19,0],[19,6,19,4,"pendingRequests"],[19,21,19,19],[19,24,19,22],[19,25,19,23],[20,2,21,0],[20,6,21,6,"cachedPromisesByUrl"],[20,25,21,25],[20,28,21,28],[20,32,21,32,"Map"],[20,35,21,35],[20,36,21,59],[20,37,21,60],[21,2,23,0],[21,11,23,9,"asyncRequest"],[21,23,23,21,"asyncRequest"],[21,24,24,2,"url"],[21,27,24,13],[21,29,25,56],[22,4,26,2],[22,8,26,6,"id"],[22,10,26,8],[22,13,26,11],[22,17,26,15],[23,4,27,2],[23,8,27,6,"responseText"],[23,20,27,18],[23,23,27,21],[23,27,27,25],[24,4,28,2],[24,8,28,6,"headers"],[24,15,28,13],[24,18,28,16],[24,22,28,20],[25,4,29,2],[25,8,29,6,"dataListener"],[25,20,29,18],[26,4,30,2],[26,8,30,6,"completeListener"],[26,24,30,22],[27,4,31,2],[27,8,31,6,"responseListener"],[27,24,31,22],[28,4,32,2],[28,8,32,6,"incrementalDataListener"],[28,31,32,29],[29,4,33,2],[29,11,33,9],[29,15,33,13,"Promise"],[29,22,33,20],[29,23,34,4],[29,24,34,5,"resolve"],[29,31,34,12],[29,33,34,14,"reject"],[29,39,34,20],[29,44,34,25],[30,6,35,6,"dataListener"],[30,18,35,18],[30,21,35,21,"Networking"],[30,43,35,31],[30,44,35,32,"addListener"],[30,55,35,43],[30,56,36,8],[30,79,36,31],[30,81,37,8,"_ref"],[30,85,37,8],[30,89,37,35],[31,8,37,35],[31,12,37,35,"_ref2"],[31,17,37,35],[31,24,37,35,"_slicedToArray2"],[31,39,37,35],[31,40,37,35,"default"],[31,47,37,35],[31,49,37,35,"_ref"],[31,53,37,35],[32,10,37,10,"requestId"],[32,19,37,19],[32,22,37,19,"_ref2"],[32,27,37,19],[33,10,37,21,"response"],[33,18,37,29],[33,21,37,29,"_ref2"],[33,26,37,29],[34,8,38,10],[34,12,38,14,"requestId"],[34,21,38,23],[34,26,38,28,"id"],[34,28,38,30],[34,30,38,32],[35,10,39,12,"responseText"],[35,22,39,24],[35,25,39,27,"response"],[35,33,39,35],[36,8,40,10],[37,6,41,8],[37,7,42,6],[37,8,42,7],[38,6,43,6,"incrementalDataListener"],[38,29,43,29],[38,32,43,32,"Networking"],[38,54,43,42],[38,55,43,43,"addListener"],[38,66,43,54],[38,67,44,8],[38,101,44,42],[38,103,45,8,"_ref3"],[38,108,45,8],[38,112,45,31],[39,8,45,31],[39,12,45,31,"_ref4"],[39,17,45,31],[39,24,45,31,"_slicedToArray2"],[39,39,45,31],[39,40,45,31,"default"],[39,47,45,31],[39,49,45,31,"_ref3"],[39,54,45,31],[40,10,45,10,"requestId"],[40,19,45,19],[40,22,45,19,"_ref4"],[40,27,45,19],[41,10,45,21,"data"],[41,14,45,25],[41,17,45,25,"_ref4"],[41,22,45,25],[42,8,46,10],[42,12,46,14,"requestId"],[42,21,46,23],[42,26,46,28,"id"],[42,28,46,30],[42,30,46,32],[43,10,47,12],[43,14,47,16,"responseText"],[43,26,47,28],[43,30,47,32],[43,34,47,36],[43,36,47,38],[44,12,48,14,"responseText"],[44,24,48,26],[44,28,48,30,"data"],[44,32,48,34],[45,10,49,12],[45,11,49,13],[45,17,49,19],[46,12,50,14,"responseText"],[46,24,50,26],[46,27,50,29,"data"],[46,31,50,33],[47,10,51,12],[48,8,52,10],[49,6,53,8],[49,7,54,6],[49,8,54,7],[50,6,55,6,"responseListener"],[50,22,55,22],[50,25,55,25,"Networking"],[50,47,55,35],[50,48,55,36,"addListener"],[50,59,55,47],[50,60,56,8],[50,87,56,35],[50,89,57,8,"_ref5"],[50,94,57,8],[50,98,57,50],[51,8,57,50],[51,12,57,50,"_ref6"],[51,17,57,50],[51,24,57,50,"_slicedToArray2"],[51,39,57,50],[51,40,57,50,"default"],[51,47,57,50],[51,49,57,50,"_ref5"],[51,54,57,50],[52,10,57,10,"requestId"],[52,19,57,19],[52,22,57,19,"_ref6"],[52,27,57,19],[53,10,57,21,"status"],[53,16,57,27],[53,19,57,27,"_ref6"],[53,24,57,27],[54,10,57,29,"responseHeaders"],[54,25,57,44],[54,28,57,44,"_ref6"],[54,33,57,44],[55,8,58,10],[55,12,58,14,"requestId"],[55,21,58,23],[55,26,58,28,"id"],[55,28,58,30],[55,30,58,32],[56,10,59,12,"headers"],[56,17,59,19],[56,20,59,22,"responseHeaders"],[56,35,59,37],[57,8,60,10],[58,6,61,8],[58,7,62,6],[58,8,62,7],[59,6,63,6,"completeListener"],[59,22,63,22],[59,25,63,25,"Networking"],[59,47,63,35],[59,48,63,36,"addListener"],[59,59,63,47],[59,60,64,8],[59,88,64,36],[59,90,65,8,"_ref7"],[59,95,65,8],[59,99,65,32],[60,8,65,32],[60,12,65,32,"_ref8"],[60,17,65,32],[60,24,65,32,"_slicedToArray2"],[60,39,65,32],[60,40,65,32,"default"],[60,47,65,32],[60,49,65,32,"_ref7"],[60,54,65,32],[61,10,65,10,"requestId"],[61,19,65,19],[61,22,65,19,"_ref8"],[61,27,65,19],[62,10,65,21,"error"],[62,15,65,26],[62,18,65,26,"_ref8"],[62,23,65,26],[63,8,66,10],[63,12,66,14,"requestId"],[63,21,66,23],[63,26,66,28,"id"],[63,28,66,30],[63,30,66,32],[64,10,67,12],[64,14,67,16,"error"],[64,19,67,21],[64,21,67,23],[65,12,68,14,"reject"],[65,18,68,20],[65,19,68,21,"error"],[65,24,68,26],[65,25,68,27],[66,10,69,12],[66,11,69,13],[66,17,69,19],[67,12,70,14],[68,12,71,14,"resolve"],[68,19,71,21],[68,20,71,22],[69,14,71,23,"body"],[69,18,71,27],[69,20,71,29,"responseText"],[69,32,71,41],[70,14,71,43,"headers"],[71,12,71,50],[71,13,71,51],[71,14,71,52],[72,10,72,12],[73,8,73,10],[74,6,74,8],[74,7,75,6],[74,8,75,7],[75,6,76,6,"Networking"],[75,28,76,16],[75,29,76,17,"sendRequest"],[75,40,76,28],[75,41,77,8],[75,46,77,13],[75,48,78,8],[75,62,78,22],[75,64,79,8,"url"],[75,67,79,11],[75,69,80,8],[75,70,80,9],[75,71,80,10],[75,73,81,8],[75,75,81,10],[75,77,82,8],[75,83,82,14],[75,85,83,8],[75,89,83,12],[75,91,84,8],[75,92,84,9],[75,94,85,8,"requestId"],[75,103,85,17],[75,107,85,21],[76,8,86,10,"id"],[76,10,86,12],[76,13,86,15,"requestId"],[76,22,86,24],[77,6,87,8],[77,7,87,9],[77,9,88,8],[77,13,89,6],[77,14,89,7],[78,4,90,4],[78,5,91,2],[78,6,91,3],[78,7,91,4,"finally"],[78,14,91,11],[78,15,91,12],[78,21,91,18],[79,6,92,4,"dataListener"],[79,18,92,16],[79,20,92,18,"remove"],[79,26,92,24],[79,27,92,25],[79,28,92,26],[80,6,93,4,"completeListener"],[80,22,93,20],[80,24,93,22,"remove"],[80,30,93,28],[80,31,93,29],[80,32,93,30],[81,6,94,4,"responseListener"],[81,22,94,20],[81,24,94,22,"remove"],[81,30,94,28],[81,31,94,29],[81,32,94,30],[82,6,95,4,"incrementalDataListener"],[82,29,95,27],[82,31,95,29,"remove"],[82,37,95,35],[82,38,95,36],[82,39,95,37],[83,4,96,2],[83,5,96,3],[83,6,96,4],[84,2,97,0],[85,2,99,0],[85,11,99,9,"buildUrlForBundle"],[85,28,99,26,"buildUrlForBundle"],[85,29,99,27,"bundlePathAndQuery"],[85,47,99,53],[85,49,99,55],[86,4,100,2],[86,8,100,2,"_getDevServer"],[86,21,100,2],[86,24,100,27],[86,28,100,27,"getDevServer"],[86,50,100,39],[86,52,100,40],[86,53,100,41],[87,6,100,14,"serverUrl"],[87,15,100,23],[87,18,100,23,"_getDevServer"],[87,31,100,23],[87,32,100,9,"url"],[87,35,100,12],[88,4,101,2],[88,11,102,4,"serverUrl"],[88,20,102,13],[88,21,102,14,"replace"],[88,28,102,21],[88,29,102,22],[88,35,102,28],[88,37,102,30],[88,39,102,32],[88,40,102,33],[88,43,102,36],[88,46,102,39],[88,49,102,42,"bundlePathAndQuery"],[88,67,102,60],[88,68,102,61,"replace"],[88,75,102,68],[88,76,102,69],[88,82,102,75],[88,84,102,77],[88,86,102,79],[88,87,102,80],[89,2,104,0],[90,2,106,0,"module"],[90,8,106,6],[90,9,106,7,"exports"],[90,16,106,14],[90,19,106,17],[90,29,106,27,"bundlePathAndQuery"],[90,47,106,53],[90,49,106,70],[91,4,107,2],[91,8,107,8,"requestUrl"],[91,18,107,18],[91,21,107,21,"buildUrlForBundle"],[91,38,107,38],[91,39,107,39,"bundlePathAndQuery"],[91,57,107,57],[91,58,107,58],[92,4,108,2],[92,8,108,6,"loadPromise"],[92,19,108,17],[92,22,108,20,"cachedPromisesByUrl"],[92,41,108,39],[92,42,108,40,"get"],[92,45,108,43],[92,46,108,44,"requestUrl"],[92,56,108,54],[92,57,108,55],[93,4,110,2],[93,8,110,6,"loadPromise"],[93,19,110,17],[93,21,110,19],[94,6,111,4],[94,13,111,11,"loadPromise"],[94,24,111,22],[95,4,112,2],[96,4,113,2,"DevLoadingView"],[96,27,113,16],[96,28,113,17,"showMessage"],[96,39,113,28],[96,40,113,29],[96,56,113,45],[96,58,113,47],[96,64,113,53],[96,65,113,54],[97,4,114,2],[97,6,114,4,"pendingRequests"],[97,21,114,19],[98,4,116,2,"loadPromise"],[98,15,116,13],[98,18,116,16,"asyncRequest"],[98,30,116,28],[98,31,116,29,"requestUrl"],[98,41,116,39],[98,42,116,40],[98,43,117,5,"then"],[98,47,117,9],[98,48,117,16,"_ref9"],[98,53,117,16],[98,57,117,37],[99,6,117,37],[99,10,117,18,"body"],[99,14,117,22],[99,17,117,22,"_ref9"],[99,22,117,22],[99,23,117,18,"body"],[99,27,117,22],[100,8,117,24,"headers"],[100,15,117,31],[100,18,117,31,"_ref9"],[100,23,117,31],[100,24,117,24,"headers"],[100,31,117,31],[101,6,118,6],[101,10,119,8,"headers"],[101,17,119,15],[101,18,119,16],[101,32,119,30],[101,33,119,31],[101,37,119,35],[101,41,119,39],[101,45,120,8,"headers"],[101,52,120,15],[101,53,120,16],[101,67,120,30],[101,68,120,31],[101,69,120,32,"indexOf"],[101,76,120,39],[101,77,120,40],[101,95,120,58],[101,96,120,59],[101,100,120,63],[101,101,120,64],[101,103,121,8],[102,8,122,8],[103,8,123,8],[103,14,123,14],[103,18,123,18,"Error"],[103,23,123,23],[103,24,124,10,"JSON"],[103,28,124,14],[103,29,124,15,"parse"],[103,34,124,20],[103,35,124,21,"body"],[103,39,124,25],[103,40,124,26],[103,41,124,27,"message"],[103,48,124,34],[103,52,125,12],[103,79,125,39,"bundlePathAndQuery"],[103,97,125,57],[103,100,126,8],[103,101,126,9],[104,6,127,6],[105,6,129,6,"HMRClient"],[105,24,129,15],[105,25,129,16,"registerBundle"],[105,39,129,30],[105,40,129,31,"requestUrl"],[105,50,129,41],[105,51,129,42],[107,6,131,6],[108,6,132,6],[109,6,133,6],[109,10,133,10,"global"],[109,16,133,16],[109,17,133,17,"globalEvalWithSourceUrl"],[109,40,133,40],[109,42,133,42],[110,8,134,8,"global"],[110,14,134,14],[110,15,134,15,"globalEvalWithSourceUrl"],[110,38,134,38],[110,39,134,39,"body"],[110,43,134,43],[110,45,134,45,"requestUrl"],[110,55,134,55],[110,56,134,56],[111,6,135,6],[111,7,135,7],[111,13,135,13],[112,8,136,8],[113,8,137,8,"eval"],[113,12,137,12],[113,13,137,13,"body"],[113,17,137,17],[113,18,137,18],[114,6,138,6],[115,4,139,4],[115,5,139,5],[115,6,139,6],[115,7,140,5,"catch"],[115,12,140,10],[115,13,140,17,"e"],[115,14,140,18],[115,18,140,22],[116,6,141,6,"cachedPromisesByUrl"],[116,25,141,25],[116,26,141,26,"delete"],[116,32,141,32],[116,33,141,33,"requestUrl"],[116,43,141,43],[116,44,141,44],[117,6,142,6],[117,12,142,12,"e"],[117,13,142,13],[118,4,143,4],[118,5,143,5],[118,6,143,6],[118,7,144,5,"finally"],[118,14,144,12],[118,15,144,13],[118,21,144,19],[119,6,145,6],[119,10,145,10],[119,11,145,11],[119,14,145,13,"pendingRequests"],[119,29,145,28],[119,31,145,30],[120,8,146,8,"DevLoadingView"],[120,31,146,22],[120,32,146,23,"hide"],[120,36,146,27],[120,37,146,28],[120,38,146,29],[121,6,147,6],[122,4,148,4],[122,5,148,5],[122,6,148,6],[123,4,150,2,"cachedPromisesByUrl"],[123,23,150,21],[123,24,150,22,"set"],[123,27,150,25],[123,28,150,26,"requestUrl"],[123,38,150,36],[123,40,150,38,"loadPromise"],[123,51,150,49],[123,52,150,50],[124,4,151,2],[124,11,151,9,"loadPromise"],[124,22,151,20],[125,2,152,0],[125,3,152,1],[126,0,152,2],[126,3]],"functionMap":{"names":["<global>","asyncRequest","Promise$argument_0","Networking.addListener$argument_1","Networking.sendRequest$argument_8","Promise._finally$argument_0","buildUrlForBundle","module.exports","asyncRequest.then$argument_0","asyncRequest.then._catch$argument_0","asyncRequest.then._catch._finally$argument_0"],"mappings":"AAA;ACsB;ICW;QCG;SDI;QCI;SDQ;QCI;SDI;QCI;SDS;QEW;SFE;KDG;YIC;GJK;CDC;AME;CNK;iBOE;gBCW;KDsB;iBEC;KFG;aGC;KHI;CPI"}},"type":"js/module"}]}