{"dependencies":[{"name":"../BatchedBridge/BatchedBridge","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":31,"column":24,"index":765},"end":{"line":31,"column":65,"index":806}}],"key":"MvuFHLrr66uWZvuv+I/rfsDBNt0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var registerCallableModule = function () {\n    if (global.RN$Bridgeless === true) {\n      return (name, moduleOrFactory) => {\n        if (typeof moduleOrFactory === 'function') {\n          global.RN$registerCallableModule(name, moduleOrFactory);\n          return;\n        }\n        global.RN$registerCallableModule(name, () => moduleOrFactory);\n      };\n    }\n    var BatchedBridge = _$$_REQUIRE(_dependencyMap[0], \"../BatchedBridge/BatchedBridge\");\n    return (name, moduleOrFactory) => {\n      if (typeof moduleOrFactory === 'function') {\n        BatchedBridge.registerLazyCallableModule(name, moduleOrFactory);\n        return;\n      }\n      BatchedBridge.registerCallableModule(name, moduleOrFactory);\n    };\n  }();\n  var _default = exports.default = registerCallableModule;\n});","lineCount":38,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13,"Object"],[14,8,11,13],[14,9,11,13,"defineProperty"],[14,23,11,13],[14,24,11,13,"exports"],[14,31,11,13],[15,4,11,13,"value"],[15,9,11,13],[16,2,11,13],[17,2,11,13,"exports"],[17,9,11,13],[17,10,11,13,"default"],[17,17,11,13],[18,2,19,0],[18,6,19,6,"registerCallableModule"],[18,28,19,52],[18,31,19,56],[18,43,19,68],[19,4,20,2],[19,8,20,6,"global"],[19,14,20,12],[19,15,20,13,"RN$Bridgeless"],[19,28,20,26],[19,33,20,31],[19,37,20,35],[19,39,20,37],[20,6,21,4],[20,13,21,11],[20,14,21,12,"name"],[20,18,21,16],[20,20,21,18,"moduleOrFactory"],[20,35,21,33],[20,40,21,38],[21,8,22,6],[21,12,22,10],[21,19,22,17,"moduleOrFactory"],[21,34,22,32],[21,39,22,37],[21,49,22,47],[21,51,22,49],[22,10,23,8,"global"],[22,16,23,14],[22,17,23,15,"RN$registerCallableModule"],[22,42,23,40],[22,43,23,41,"name"],[22,47,23,45],[22,49,23,47,"moduleOrFactory"],[22,64,23,62],[22,65,23,63],[23,10,24,8],[24,8,25,6],[25,8,27,6,"global"],[25,14,27,12],[25,15,27,13,"RN$registerCallableModule"],[25,40,27,38],[25,41,27,39,"name"],[25,45,27,43],[25,47,27,45],[25,53,27,51,"moduleOrFactory"],[25,68,27,66],[25,69,27,67],[26,6,28,4],[26,7,28,5],[27,4,29,2],[28,4,31,2],[28,8,31,8,"BatchedBridge"],[28,21,31,21],[28,24,31,24,"require"],[28,35,31,31],[28,36,31,31,"_dependencyMap"],[28,50,31,31],[28,87,31,64],[28,88,31,65],[29,4,32,2],[29,11,32,9],[29,12,32,10,"name"],[29,16,32,14],[29,18,32,16,"moduleOrFactory"],[29,33,32,31],[29,38,32,36],[30,6,33,4],[30,10,33,8],[30,17,33,15,"moduleOrFactory"],[30,32,33,30],[30,37,33,35],[30,47,33,45],[30,49,33,47],[31,8,34,6,"BatchedBridge"],[31,21,34,19],[31,22,34,20,"registerLazyCallableModule"],[31,48,34,46],[31,49,34,47,"name"],[31,53,34,51],[31,55,34,53,"moduleOrFactory"],[31,70,34,68],[31,71,34,69],[32,8,35,6],[33,6,36,4],[34,6,38,4,"BatchedBridge"],[34,19,38,17],[34,20,38,18,"registerCallableModule"],[34,42,38,40],[34,43,38,41,"name"],[34,47,38,45],[34,49,38,47,"moduleOrFactory"],[34,64,38,62],[34,65,38,63],[35,4,39,2],[35,5,39,3],[36,2,40,0],[36,3,40,1],[36,4,40,3],[36,5,40,4],[37,2,40,5],[37,6,40,5,"_default"],[37,14,40,5],[37,17,40,5,"exports"],[37,24,40,5],[37,25,40,5,"default"],[37,32,40,5],[37,35,42,15,"registerCallableModule"],[37,57,42,37],[38,0,42,37],[38,3]],"functionMap":{"names":["<global>","<anonymous>","global.RN$registerCallableModule$argument_1"],"mappings":"AAA;wDCkB;6CCQ,qBD;CDa"}},"type":"js/module"}]}