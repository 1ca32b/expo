{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":294,"column":0,"index":8718}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/readOnlyError","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":294,"column":0,"index":8718}}],"key":"sXvaNDymRtlPafiB+f0cuzg7sKM="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":294,"column":0,"index":8718}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":294,"column":0,"index":8718}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"../../../../Libraries/Utilities/warnOnce","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":20,"column":0,"index":500},"end":{"line":20,"column":64,"index":564}}],"key":"Ghh5qlfuZKYys9QXlkSDlK8AUjk="}},{"name":"./EventCounts","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":21,"column":0,"index":565},"end":{"line":21,"column":40,"index":605}}],"key":"jwR/v3s0YGimAkhZcXLqPRw0Pig="}},{"name":"./MemoryInfo","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":22,"column":0,"index":606},"end":{"line":22,"column":38,"index":644}}],"key":"dxSGpmGNu9nn97h5U//y4Z7TNCE="}},{"name":"./PerformanceEntry","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":23,"column":0,"index":645},"end":{"line":23,"column":61,"index":706}}],"key":"limm2T+T1Tv0g3goGjXkwAZT0/A="}},{"name":"./PerformanceObserver","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":24,"column":0,"index":707},"end":{"line":24,"column":70,"index":777}}],"key":"dZd/Qr9hEmOi9AeTIps7GE30VG4="}},{"name":"./RawPerformanceEntry","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":25,"column":0,"index":778},"end":{"line":28,"column":31,"index":872}}],"key":"zrkCAbiGCMzHpBgnI/Ykq8YEer4="}},{"name":"./ReactNativeStartupTiming","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":30,"column":0,"index":942},"end":{"line":30,"column":66,"index":1008}}],"key":"e1WSS1Vx32J2Zrr9VnAGPRKnSbc="}},{"name":"./specs/NativePerformance","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":31,"column":0,"index":1009},"end":{"line":31,"column":58,"index":1067}}],"key":"dSyYbx9fIQc06HOZYZ8x/I6MjMY="}},{"name":"./specs/NativePerformanceObserver","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":32,"column":0,"index":1068},"end":{"line":32,"column":74,"index":1142}}],"key":"e5cFiNYK24FFj+OBvYsOcKKfpSs="}},{"name":"./UserTiming","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":33,"column":0,"index":1143},"end":{"line":33,"column":65,"index":1208}}],"key":"XM+UYOP8Bdq7Emnl92thq3oOZ90="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _readOnlyError2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/readOnlyError\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _warnOnce = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../../../../Libraries/Utilities/warnOnce\"));\n  var _EventCounts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./EventCounts\"));\n  var _MemoryInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./MemoryInfo\"));\n  var _PerformanceEntry = _$$_REQUIRE(_dependencyMap[7], \"./PerformanceEntry\");\n  var _PerformanceObserver = _$$_REQUIRE(_dependencyMap[8], \"./PerformanceObserver\");\n  var _RawPerformanceEntry = _$$_REQUIRE(_dependencyMap[9], \"./RawPerformanceEntry\");\n  var _ReactNativeStartupTiming = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./ReactNativeStartupTiming\"));\n  var _NativePerformance = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./specs/NativePerformance\"));\n  var _NativePerformanceObserver = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./specs/NativePerformanceObserver\"));\n  var _UserTiming = _$$_REQUIRE(_dependencyMap[13], \"./UserTiming\");\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  // flowlint unsafe-getters-setters:off\n\n  var getCurrentTimeStamp = _NativePerformance.default?.now ?? global.nativePerformanceNow ?? (() => Date.now());\n\n  // We want some of the performance entry types to be always logged,\n  // even if they are not currently observed - this is either to be able to\n  // retrieve them at any time via Performance.getEntries* or to refer by other entries\n  // (such as when measures may refer to marks, even if the latter are not observed)\n  if (_NativePerformanceObserver.default?.setIsBuffered) {\n    _NativePerformanceObserver.default?.setIsBuffered(_PerformanceEntry.ALWAYS_LOGGED_ENTRY_TYPES.map(_RawPerformanceEntry.performanceEntryTypeToRaw), true);\n  }\n  function warnNoNativePerformance() {\n    (0, _warnOnce.default)('missing-native-performance', 'Missing native implementation of Performance');\n  }\n\n  /**\n   * Partial implementation of the Performance interface for RN,\n   * corresponding to the standard in\n   * https://www.w3.org/TR/user-timing/#extensions-performance-interface\n   */\n  var Performance = exports.default = /*#__PURE__*/function () {\n    function Performance() {\n      (0, _classCallCheck2.default)(this, Performance);\n      this.eventCounts = new _EventCounts.default();\n    }\n    return (0, _createClass2.default)(Performance, [{\n      key: \"memory\",\n      get:\n      // Get the current JS memory information.\n      function () {\n        if (_NativePerformance.default?.getSimpleMemoryInfo) {\n          // JSI API implementations may have different variants of names for the JS\n          // heap information we need here. We will parse the result based on our\n          // guess of the implementation for now.\n          var memoryInfo = _NativePerformance.default.getSimpleMemoryInfo();\n          if (memoryInfo.hasOwnProperty('hermes_heapSize')) {\n            // We got memory information from Hermes\n            var totalJSHeapSize = memoryInfo.hermes_heapSize,\n              usedJSHeapSize = memoryInfo.hermes_allocatedBytes;\n            return new _MemoryInfo.default({\n              jsHeapSizeLimit: null,\n              // We don't know the heap size limit from Hermes.\n              totalJSHeapSize,\n              usedJSHeapSize\n            });\n          } else {\n            // JSC and V8 has no native implementations for memory information in JSI::Instrumentation\n            return new _MemoryInfo.default();\n          }\n        }\n        return new _MemoryInfo.default();\n      }\n\n      // Startup metrics is not used in web, but only in React Native.\n    }, {\n      key: \"rnStartupTiming\",\n      get: function () {\n        if (_NativePerformance.default?.getReactNativeStartupTiming) {\n          var _NativePerformance$ge = _NativePerformance.default.getReactNativeStartupTiming(),\n            startTime = _NativePerformance$ge.startTime,\n            endTime = _NativePerformance$ge.endTime,\n            initializeRuntimeStart = _NativePerformance$ge.initializeRuntimeStart,\n            initializeRuntimeEnd = _NativePerformance$ge.initializeRuntimeEnd,\n            executeJavaScriptBundleEntryPointStart = _NativePerformance$ge.executeJavaScriptBundleEntryPointStart,\n            executeJavaScriptBundleEntryPointEnd = _NativePerformance$ge.executeJavaScriptBundleEntryPointEnd;\n          return new _ReactNativeStartupTiming.default({\n            startTime,\n            endTime,\n            initializeRuntimeStart,\n            initializeRuntimeEnd,\n            executeJavaScriptBundleEntryPointStart,\n            executeJavaScriptBundleEntryPointEnd\n          });\n        }\n        return new _ReactNativeStartupTiming.default();\n      }\n    }, {\n      key: \"mark\",\n      value: function mark(markName, markOptions) {\n        var mark = new _UserTiming.PerformanceMark(markName, markOptions);\n        if (_NativePerformance.default?.mark) {\n          _NativePerformance.default.mark(markName, mark.startTime);\n        } else {\n          warnNoNativePerformance();\n        }\n        return mark;\n      }\n    }, {\n      key: \"clearMarks\",\n      value: function clearMarks(markName) {\n        if (!_NativePerformanceObserver.default?.clearEntries) {\n          (0, _PerformanceObserver.warnNoNativePerformanceObserver)();\n          return;\n        }\n        _NativePerformanceObserver.default?.clearEntries(_RawPerformanceEntry.RawPerformanceEntryTypeValues.MARK, markName);\n      }\n    }, {\n      key: \"measure\",\n      value: function measure(measureName, startMarkOrOptions, endMark) {\n        var options;\n        var startMarkName,\n          endMarkName = endMark,\n          duration,\n          startTime = 0,\n          endTime = 0;\n        if (typeof startMarkOrOptions === 'string') {\n          startMarkName = startMarkOrOptions;\n        } else if (startMarkOrOptions !== undefined) {\n          options = startMarkOrOptions;\n          if (endMark !== undefined) {\n            throw new TypeError(\"Performance.measure: Can't have both options and endMark\");\n          }\n          if (options.start === undefined && options.end === undefined) {\n            throw new TypeError('Performance.measure: Must have at least one of start/end specified in options');\n          }\n          if (options.start !== undefined && options.end !== undefined && options.duration !== undefined) {\n            throw new TypeError(\"Performance.measure: Can't have both start/end and duration explicitly in options\");\n          }\n          if (typeof options.start === 'number') {\n            startTime = options.start;\n          } else {\n            startMarkName = options.start;\n          }\n          if (typeof options.end === 'number') {\n            endTime = options.end;\n          } else {\n            endMarkName = options.end;\n          }\n          duration = options.duration ?? duration;\n        }\n        var measure = new _UserTiming.PerformanceMeasure(measureName, options);\n        if (_NativePerformance.default?.measure) {\n          _NativePerformance.default.measure(measureName, startTime, endTime, duration, startMarkName, endMarkName);\n        } else {\n          warnNoNativePerformance();\n        }\n        return measure;\n      }\n    }, {\n      key: \"clearMeasures\",\n      value: function clearMeasures(measureName) {\n        if (!_NativePerformanceObserver.default?.clearEntries) {\n          (0, _PerformanceObserver.warnNoNativePerformanceObserver)();\n          return;\n        }\n        _NativePerformanceObserver.default?.clearEntries(_RawPerformanceEntry.RawPerformanceEntryTypeValues.MEASURE, measureName);\n      }\n\n      /**\n       * Returns a double, measured in milliseconds.\n       * https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n       */\n    }, {\n      key: \"now\",\n      value: function now() {\n        return getCurrentTimeStamp();\n      }\n\n      /**\n       * An extension that allows to get back to JS all currently logged marks/measures\n       * (in our case, be it from JS or native), see\n       * https://www.w3.org/TR/performance-timeline/#extensions-to-the-performance-interface\n       */\n    }, {\n      key: \"getEntries\",\n      value: function getEntries() {\n        if (!_NativePerformanceObserver.default?.getEntries) {\n          (0, _PerformanceObserver.warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries().map(_RawPerformanceEntry.rawToPerformanceEntry);\n      }\n    }, {\n      key: \"getEntriesByType\",\n      value: function getEntriesByType(entryType) {\n        if (!_PerformanceEntry.ALWAYS_LOGGED_ENTRY_TYPES.includes(entryType)) {\n          console.warn(`Performance.getEntriesByType: Only valid for ${JSON.stringify(_PerformanceEntry.ALWAYS_LOGGED_ENTRY_TYPES)} entry types, got ${entryType}`);\n          return [];\n        }\n        if (!_NativePerformanceObserver.default?.getEntries) {\n          (0, _PerformanceObserver.warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries((0, _RawPerformanceEntry.performanceEntryTypeToRaw)(entryType)).map(_RawPerformanceEntry.rawToPerformanceEntry);\n      }\n    }, {\n      key: \"getEntriesByName\",\n      value: function getEntriesByName(entryName, entryType) {\n        if (entryType !== undefined && !_PerformanceEntry.ALWAYS_LOGGED_ENTRY_TYPES.includes(entryType)) {\n          console.warn(`Performance.getEntriesByName: Only valid for ${JSON.stringify(_PerformanceEntry.ALWAYS_LOGGED_ENTRY_TYPES)} entry types, got ${entryType}`);\n          return [];\n        }\n        if (!_NativePerformanceObserver.default?.getEntries) {\n          (0, _PerformanceObserver.warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries(entryType != null ? (0, _RawPerformanceEntry.performanceEntryTypeToRaw)(entryType) : undefined, entryName).map(_RawPerformanceEntry.rawToPerformanceEntry);\n      }\n    }]);\n  }();\n});","lineCount":230,"map":[[10,2,20,0],[10,6,20,0,"_warnOnce"],[10,15,20,0],[10,18,20,0,"_interopRequireDefault"],[10,40,20,0],[10,41,20,0,"_$$_REQUIRE"],[10,52,20,0],[10,53,20,0,"_dependencyMap"],[10,67,20,0],[11,2,21,0],[11,6,21,0,"_EventCounts"],[11,18,21,0],[11,21,21,0,"_interopRequireDefault"],[11,43,21,0],[11,44,21,0,"_$$_REQUIRE"],[11,55,21,0],[11,56,21,0,"_dependencyMap"],[11,70,21,0],[12,2,22,0],[12,6,22,0,"_MemoryInfo"],[12,17,22,0],[12,20,22,0,"_interopRequireDefault"],[12,42,22,0],[12,43,22,0,"_$$_REQUIRE"],[12,54,22,0],[12,55,22,0,"_dependencyMap"],[12,69,22,0],[13,2,23,0],[13,6,23,0,"_PerformanceEntry"],[13,23,23,0],[13,26,23,0,"_$$_REQUIRE"],[13,37,23,0],[13,38,23,0,"_dependencyMap"],[13,52,23,0],[14,2,24,0],[14,6,24,0,"_PerformanceObserver"],[14,26,24,0],[14,29,24,0,"_$$_REQUIRE"],[14,40,24,0],[14,41,24,0,"_dependencyMap"],[14,55,24,0],[15,2,25,0],[15,6,25,0,"_RawPerformanceEntry"],[15,26,25,0],[15,29,25,0,"_$$_REQUIRE"],[15,40,25,0],[15,41,25,0,"_dependencyMap"],[15,55,25,0],[16,2,30,0],[16,6,30,0,"_ReactNativeStartupTiming"],[16,31,30,0],[16,34,30,0,"_interopRequireDefault"],[16,56,30,0],[16,57,30,0,"_$$_REQUIRE"],[16,68,30,0],[16,69,30,0,"_dependencyMap"],[16,83,30,0],[17,2,31,0],[17,6,31,0,"_NativePerformance"],[17,24,31,0],[17,27,31,0,"_interopRequireDefault"],[17,49,31,0],[17,50,31,0,"_$$_REQUIRE"],[17,61,31,0],[17,62,31,0,"_dependencyMap"],[17,76,31,0],[18,2,32,0],[18,6,32,0,"_NativePerformanceObserver"],[18,32,32,0],[18,35,32,0,"_interopRequireDefault"],[18,57,32,0],[18,58,32,0,"_$$_REQUIRE"],[18,69,32,0],[18,70,32,0,"_dependencyMap"],[18,84,32,0],[19,2,33,0],[19,6,33,0,"_UserTiming"],[19,17,33,0],[19,20,33,0,"_$$_REQUIRE"],[19,31,33,0],[19,32,33,0,"_dependencyMap"],[19,46,33,0],[20,2,1,0],[21,0,2,0],[22,0,3,0],[23,0,4,0],[24,0,5,0],[25,0,6,0],[26,0,7,0],[27,0,8,0],[28,0,9,0],[30,2,11,0],[32,2,40,0],[32,6,40,6,"getCurrentTimeStamp"],[32,25,40,49],[32,28,41,2,"NativePerformance"],[32,54,41,19],[32,56,41,21,"now"],[32,59,41,24],[32,63,41,28,"global"],[32,69,41,34],[32,70,41,35,"nativePerformanceNow"],[32,90,41,55],[32,95,41,60],[32,101,41,66,"Date"],[32,105,41,70],[32,106,41,71,"now"],[32,109,41,74],[32,110,41,75],[32,111,41,76],[32,112,41,77],[34,2,43,0],[35,2,44,0],[36,2,45,0],[37,2,46,0],[38,2,47,0],[38,6,47,4,"NativePerformanceObserver"],[38,40,47,29],[38,42,47,31,"setIsBuffered"],[38,55,47,44],[38,57,47,46],[39,4,48,2,"NativePerformanceObserver"],[39,38,48,27],[39,40,48,29,"setIsBuffered"],[39,53,48,42],[39,54,49,4,"ALWAYS_LOGGED_ENTRY_TYPES"],[39,97,49,29],[39,98,49,30,"map"],[39,101,49,33],[39,102,49,34,"performanceEntryTypeToRaw"],[39,148,49,59],[39,149,49,60],[39,151,50,4],[39,155,51,2],[39,156,51,3],[40,2,52,0],[41,2,54,0],[41,11,54,9,"warnNoNativePerformance"],[41,34,54,32,"warnNoNativePerformance"],[41,35,54,32],[41,37,54,35],[42,4,55,2],[42,8,55,2,"warnOnce"],[42,25,55,10],[42,27,56,4],[42,55,56,32],[42,57,57,4],[42,103,58,2],[42,104,58,3],[43,2,59,0],[45,2,61,0],[46,0,62,0],[47,0,63,0],[48,0,64,0],[49,0,65,0],[50,2,61,0],[50,6,66,21,"Performance"],[50,17,66,32],[50,20,66,32,"exports"],[50,27,66,32],[50,28,66,32,"default"],[50,35,66,32],[51,4,66,32],[51,13,66,32,"Performance"],[51,25,66,32],[52,6,66,32],[52,10,66,32,"_classCallCheck2"],[52,26,66,32],[52,27,66,32,"default"],[52,34,66,32],[52,42,66,32,"Performance"],[52,53,66,32],[53,6,66,32],[53,11,67,2,"eventCounts"],[53,22,67,13],[53,25,67,29],[53,29,67,33,"EventCounts"],[53,49,67,44],[53,50,67,45],[53,51,67,46],[54,4,67,46],[55,4,67,46],[55,15,67,46,"_createClass2"],[55,28,67,46],[55,29,67,46,"default"],[55,36,67,46],[55,38,67,46,"Performance"],[55,49,67,46],[56,6,67,46,"key"],[56,9,67,46],[57,6,67,46,"get"],[57,9,67,46],[58,6,69,2],[59,6,70,2],[59,15,70,2,"get"],[59,16,70,2],[59,18,70,27],[60,8,71,4],[60,12,71,8,"NativePerformance"],[60,38,71,25],[60,40,71,27,"getSimpleMemoryInfo"],[60,59,71,46],[60,61,71,48],[61,10,72,6],[62,10,73,6],[63,10,74,6],[64,10,75,6],[64,14,75,12,"memoryInfo"],[64,24,75,22],[64,27,75,25,"NativePerformance"],[64,53,75,42],[64,54,75,43,"getSimpleMemoryInfo"],[64,73,75,62],[64,74,75,63],[64,75,75,64],[65,10,76,6],[65,14,76,10,"memoryInfo"],[65,24,76,20],[65,25,76,21,"hasOwnProperty"],[65,39,76,35],[65,40,76,36],[65,57,76,53],[65,58,76,54],[65,60,76,56],[66,12,77,8],[67,12,78,8],[67,16,79,27,"totalJSHeapSize"],[67,31,79,42],[67,34,81,12,"memoryInfo"],[67,44,81,22],[67,45,79,10,"hermes_heapSize"],[67,60,79,25],[68,14,80,33,"usedJSHeapSize"],[68,28,80,47],[68,31,81,12,"memoryInfo"],[68,41,81,22],[68,42,80,10,"hermes_allocatedBytes"],[68,63,80,31],[69,12,83,8],[69,19,83,15],[69,23,83,19,"MemoryInfo"],[69,42,83,29],[69,43,83,30],[70,14,84,10,"jsHeapSizeLimit"],[70,29,84,25],[70,31,84,27],[70,35,84,31],[71,14,84,33],[72,14,85,10,"totalJSHeapSize"],[72,29,85,25],[73,14,86,10,"usedJSHeapSize"],[74,12,87,8],[74,13,87,9],[74,14,87,10],[75,10,88,6],[75,11,88,7],[75,17,88,13],[76,12,89,8],[77,12,90,8],[77,19,90,15],[77,23,90,19,"MemoryInfo"],[77,42,90,29],[77,43,90,30],[77,44,90,31],[78,10,91,6],[79,8,92,4],[80,8,94,4],[80,15,94,11],[80,19,94,15,"MemoryInfo"],[80,38,94,25],[80,39,94,26],[80,40,94,27],[81,6,95,2],[83,6,97,2],[84,4,97,2],[85,6,97,2,"key"],[85,9,97,2],[86,6,97,2,"get"],[86,9,97,2],[86,11,98,2],[86,20,98,2,"get"],[86,21,98,2],[86,23,98,50],[87,8,99,4],[87,12,99,8,"NativePerformance"],[87,38,99,25],[87,40,99,27,"getReactNativeStartupTiming"],[87,67,99,54],[87,69,99,56],[88,10,100,6],[88,14,100,6,"_NativePerformance$ge"],[88,35,100,6],[88,38,107,10,"NativePerformance"],[88,64,107,27],[88,65,107,28,"getReactNativeStartupTiming"],[88,92,107,55],[88,93,107,56],[88,94,107,57],[89,12,101,8,"startTime"],[89,21,101,17],[89,24,101,17,"_NativePerformance$ge"],[89,45,101,17],[89,46,101,8,"startTime"],[89,55,101,17],[90,12,102,8,"endTime"],[90,19,102,15],[90,22,102,15,"_NativePerformance$ge"],[90,43,102,15],[90,44,102,8,"endTime"],[90,51,102,15],[91,12,103,8,"initializeRuntimeStart"],[91,34,103,30],[91,37,103,30,"_NativePerformance$ge"],[91,58,103,30],[91,59,103,8,"initializeRuntimeStart"],[91,81,103,30],[92,12,104,8,"initializeRuntimeEnd"],[92,32,104,28],[92,35,104,28,"_NativePerformance$ge"],[92,56,104,28],[92,57,104,8,"initializeRuntimeEnd"],[92,77,104,28],[93,12,105,8,"executeJavaScriptBundleEntryPointStart"],[93,50,105,46],[93,53,105,46,"_NativePerformance$ge"],[93,74,105,46],[93,75,105,8,"executeJavaScriptBundleEntryPointStart"],[93,113,105,46],[94,12,106,8,"executeJavaScriptBundleEntryPointEnd"],[94,48,106,44],[94,51,106,44,"_NativePerformance$ge"],[94,72,106,44],[94,73,106,8,"executeJavaScriptBundleEntryPointEnd"],[94,109,106,44],[95,10,108,6],[95,17,108,13],[95,21,108,17,"ReactNativeStartupTiming"],[95,54,108,41],[95,55,108,42],[96,12,109,8,"startTime"],[96,21,109,17],[97,12,110,8,"endTime"],[97,19,110,15],[98,12,111,8,"initializeRuntimeStart"],[98,34,111,30],[99,12,112,8,"initializeRuntimeEnd"],[99,32,112,28],[100,12,113,8,"executeJavaScriptBundleEntryPointStart"],[100,50,113,46],[101,12,114,8,"executeJavaScriptBundleEntryPointEnd"],[102,10,115,6],[102,11,115,7],[102,12,115,8],[103,8,116,4],[104,8,117,4],[104,15,117,11],[104,19,117,15,"ReactNativeStartupTiming"],[104,52,117,39],[104,53,117,40],[104,54,117,41],[105,6,118,2],[106,4,118,3],[107,6,118,3,"key"],[107,9,118,3],[108,6,118,3,"value"],[108,11,118,3],[108,13,120,2],[108,22,120,2,"mark"],[108,26,120,6,"mark"],[108,27,121,4,"markName"],[108,35,121,20],[108,37,122,4,"markOptions"],[108,48,122,40],[108,50,123,21],[109,8,124,4],[109,12,124,10,"mark"],[109,16,124,14],[109,19,124,17],[109,23,124,21,"PerformanceMark"],[109,50,124,36],[109,51,124,37,"markName"],[109,59,124,45],[109,61,124,47,"markOptions"],[109,72,124,58],[109,73,124,59],[110,8,126,4],[110,12,126,8,"NativePerformance"],[110,38,126,25],[110,40,126,27,"mark"],[110,44,126,31],[110,46,126,33],[111,10,127,6,"NativePerformance"],[111,36,127,23],[111,37,127,24,"mark"],[111,41,127,28],[111,42,127,29,"markName"],[111,50,127,37],[111,52,127,39,"mark"],[111,56,127,43],[111,57,127,44,"startTime"],[111,66,127,53],[111,67,127,54],[112,8,128,4],[112,9,128,5],[112,15,128,11],[113,10,129,6,"warnNoNativePerformance"],[113,33,129,29],[113,34,129,30],[113,35,129,31],[114,8,130,4],[115,8,132,4],[115,15,132,11,"mark"],[115,19,132,15],[116,6,133,2],[117,4,133,3],[118,6,133,3,"key"],[118,9,133,3],[119,6,133,3,"value"],[119,11,133,3],[119,13,135,2],[119,22,135,2,"clearMarks"],[119,32,135,12,"clearMarks"],[119,33,135,13,"markName"],[119,41,135,30],[119,43,135,38],[120,8,136,4],[120,12,136,8],[120,13,136,9,"NativePerformanceObserver"],[120,47,136,34],[120,49,136,36,"clearEntries"],[120,61,136,48],[120,63,136,50],[121,10,137,6],[121,14,137,6,"warnNoNativePerformanceObserver"],[121,66,137,37],[121,68,137,38],[121,69,137,39],[122,10,138,6],[123,8,139,4],[124,8,141,4,"NativePerformanceObserver"],[124,42,141,29],[124,44,141,31,"clearEntries"],[124,56,141,43],[124,57,142,6,"RawPerformanceEntryTypeValues"],[124,107,142,35],[124,108,142,36,"MARK"],[124,112,142,40],[124,114,143,6,"markName"],[124,122,144,4],[124,123,144,5],[125,6,145,2],[126,4,145,3],[127,6,145,3,"key"],[127,9,145,3],[128,6,145,3,"value"],[128,11,145,3],[128,13,147,2],[128,22,147,2,"measure"],[128,29,147,9,"measure"],[128,30,148,4,"measureName"],[128,41,148,23],[128,43,149,4,"startMarkOrOptions"],[128,61,149,59],[128,63,150,4,"endMark"],[128,70,150,20],[128,72,151,24],[129,8,152,4],[129,12,152,8,"options"],[129,19,152,15],[130,8,153,4],[130,12,153,8,"startMarkName"],[130,25,153,21],[131,10,154,6,"endMarkName"],[131,21,154,17],[131,24,154,20,"endMark"],[131,31,154,27],[132,10,155,6,"duration"],[132,18,155,14],[133,10,156,6,"startTime"],[133,19,156,15],[133,22,156,18],[133,23,156,19],[134,10,157,6,"endTime"],[134,17,157,13],[134,20,157,16],[134,21,157,17],[135,8,159,4],[135,12,159,8],[135,19,159,15,"startMarkOrOptions"],[135,37,159,33],[135,42,159,38],[135,50,159,46],[135,52,159,48],[136,10,160,6,"startMarkName"],[136,23,160,19],[136,26,160,22,"startMarkOrOptions"],[136,44,160,40],[137,8,161,4],[137,9,161,5],[137,15,161,11],[137,19,161,15,"startMarkOrOptions"],[137,37,161,33],[137,42,161,38,"undefined"],[137,51,161,47],[137,53,161,49],[138,10,162,6,"options"],[138,17,162,13],[138,20,162,16,"startMarkOrOptions"],[138,38,162,34],[139,10,163,6],[139,14,163,10,"endMark"],[139,21,163,17],[139,26,163,22,"undefined"],[139,35,163,31],[139,37,163,33],[140,12,164,8],[140,18,164,14],[140,22,164,18,"TypeError"],[140,31,164,27],[140,32,165,10],[140,90,166,8],[140,91,166,9],[141,10,167,6],[142,10,168,6],[142,14,168,10,"options"],[142,21,168,17],[142,22,168,18,"start"],[142,27,168,23],[142,32,168,28,"undefined"],[142,41,168,37],[142,45,168,41,"options"],[142,52,168,48],[142,53,168,49,"end"],[142,56,168,52],[142,61,168,57,"undefined"],[142,70,168,66],[142,72,168,68],[143,12,169,8],[143,18,169,14],[143,22,169,18,"TypeError"],[143,31,169,27],[143,32,170,10],[143,111,171,8],[143,112,171,9],[144,10,172,6],[145,10,173,6],[145,14,174,8,"options"],[145,21,174,15],[145,22,174,16,"start"],[145,27,174,21],[145,32,174,26,"undefined"],[145,41,174,35],[145,45,175,8,"options"],[145,52,175,15],[145,53,175,16,"end"],[145,56,175,19],[145,61,175,24,"undefined"],[145,70,175,33],[145,74,176,8,"options"],[145,81,176,15],[145,82,176,16,"duration"],[145,90,176,24],[145,95,176,29,"undefined"],[145,104,176,38],[145,106,177,8],[146,12,178,8],[146,18,178,14],[146,22,178,18,"TypeError"],[146,31,178,27],[146,32,179,10],[146,115,180,8],[146,116,180,9],[147,10,181,6],[148,10,183,6],[148,14,183,10],[148,21,183,17,"options"],[148,28,183,24],[148,29,183,25,"start"],[148,34,183,30],[148,39,183,35],[148,47,183,43],[148,49,183,45],[149,12,184,8,"startTime"],[149,21,184,17],[149,24,184,20,"options"],[149,31,184,27],[149,32,184,28,"start"],[149,37,184,33],[150,10,185,6],[150,11,185,7],[150,17,185,13],[151,12,186,8,"startMarkName"],[151,25,186,21],[151,28,186,24,"options"],[151,35,186,31],[151,36,186,32,"start"],[151,41,186,37],[152,10,187,6],[153,10,189,6],[153,14,189,10],[153,21,189,17,"options"],[153,28,189,24],[153,29,189,25,"end"],[153,32,189,28],[153,37,189,33],[153,45,189,41],[153,47,189,43],[154,12,190,8,"endTime"],[154,19,190,15],[154,22,190,18,"options"],[154,29,190,25],[154,30,190,26,"end"],[154,33,190,29],[155,10,191,6],[155,11,191,7],[155,17,191,13],[156,12,192,8,"endMarkName"],[156,23,192,19],[156,26,192,22,"options"],[156,33,192,29],[156,34,192,30,"end"],[156,37,192,33],[157,10,193,6],[158,10,195,6,"duration"],[158,18,195,14],[158,21,195,17,"options"],[158,28,195,24],[158,29,195,25,"duration"],[158,37,195,33],[158,41,195,37,"duration"],[158,49,195,45],[159,8,196,4],[160,8,198,4],[160,12,198,10,"measure"],[160,19,198,17],[160,22,198,20],[160,26,198,24,"PerformanceMeasure"],[160,56,198,42],[160,57,198,43,"measureName"],[160,68,198,54],[160,70,198,56,"options"],[160,77,198,63],[160,78,198,64],[161,8,200,4],[161,12,200,8,"NativePerformance"],[161,38,200,25],[161,40,200,27,"measure"],[161,47,200,34],[161,49,200,36],[162,10,201,6,"NativePerformance"],[162,36,201,23],[162,37,201,24,"measure"],[162,44,201,31],[162,45,202,8,"measureName"],[162,56,202,19],[162,58,203,8,"startTime"],[162,67,203,17],[162,69,204,8,"endTime"],[162,76,204,15],[162,78,205,8,"duration"],[162,86,205,16],[162,88,206,8,"startMarkName"],[162,101,206,21],[162,103,207,8,"endMarkName"],[162,114,208,6],[162,115,208,7],[163,8,209,4],[163,9,209,5],[163,15,209,11],[164,10,210,6,"warnNoNativePerformance"],[164,33,210,29],[164,34,210,30],[164,35,210,31],[165,8,211,4],[166,8,213,4],[166,15,213,11,"measure"],[166,22,213,18],[167,6,214,2],[168,4,214,3],[169,6,214,3,"key"],[169,9,214,3],[170,6,214,3,"value"],[170,11,214,3],[170,13,216,2],[170,22,216,2,"clearMeasures"],[170,35,216,15,"clearMeasures"],[170,36,216,16,"measureName"],[170,47,216,36],[170,49,216,44],[171,8,217,4],[171,12,217,8],[171,13,217,9,"NativePerformanceObserver"],[171,47,217,34],[171,49,217,36,"clearEntries"],[171,61,217,48],[171,63,217,50],[172,10,218,6],[172,14,218,6,"warnNoNativePerformanceObserver"],[172,66,218,37],[172,68,218,38],[172,69,218,39],[173,10,219,6],[174,8,220,4],[175,8,222,4,"NativePerformanceObserver"],[175,42,222,29],[175,44,222,31,"clearEntries"],[175,56,222,43],[175,57,223,6,"RawPerformanceEntryTypeValues"],[175,107,223,35],[175,108,223,36,"MEASURE"],[175,115,223,43],[175,117,224,6,"measureName"],[175,128,225,4],[175,129,225,5],[176,6,226,2],[178,6,228,2],[179,0,229,0],[180,0,230,0],[181,0,231,0],[182,4,228,2],[183,6,228,2,"key"],[183,9,228,2],[184,6,228,2,"value"],[184,11,228,2],[184,13,232,2],[184,22,232,2,"now"],[184,25,232,5,"now"],[184,26,232,5],[184,28,232,26],[185,8,233,4],[185,15,233,11,"getCurrentTimeStamp"],[185,34,233,30],[185,35,233,31],[185,36,233,32],[186,6,234,2],[188,6,236,2],[189,0,237,0],[190,0,238,0],[191,0,239,0],[192,0,240,0],[193,4,236,2],[194,6,236,2,"key"],[194,9,236,2],[195,6,236,2,"value"],[195,11,236,2],[195,13,241,2],[195,22,241,2,"getEntries"],[195,32,241,12,"getEntries"],[195,33,241,12],[195,35,241,37],[196,8,242,4],[196,12,242,8],[196,13,242,9,"NativePerformanceObserver"],[196,47,242,34],[196,49,242,36,"getEntries"],[196,59,242,46],[196,61,242,48],[197,10,243,6],[197,14,243,6,"warnNoNativePerformanceObserver"],[197,66,243,37],[197,68,243,38],[197,69,243,39],[198,10,244,6],[198,17,244,13],[198,19,244,15],[199,8,245,4],[200,8,246,4],[200,15,246,11,"NativePerformanceObserver"],[200,49,246,36],[200,50,246,37,"getEntries"],[200,60,246,47],[200,61,246,48],[200,62,246,49],[200,63,246,50,"map"],[200,66,246,53],[200,67,246,54,"rawToPerformanceEntry"],[200,109,246,75],[200,110,246,76],[201,6,247,2],[202,4,247,3],[203,6,247,3,"key"],[203,9,247,3],[204,6,247,3,"value"],[204,11,247,3],[204,13,249,2],[204,22,249,2,"getEntriesByType"],[204,38,249,18,"getEntriesByType"],[204,39,249,19,"entryType"],[204,48,249,50],[204,50,249,74],[205,8,250,4],[205,12,250,8],[205,13,250,9,"ALWAYS_LOGGED_ENTRY_TYPES"],[205,56,250,34],[205,57,250,35,"includes"],[205,65,250,43],[205,66,250,44,"entryType"],[205,75,250,53],[205,76,250,54],[205,78,250,56],[206,10,251,6,"console"],[206,17,251,13],[206,18,251,14,"warn"],[206,22,251,18],[206,23,252,8],[206,71,252,56,"JSON"],[206,75,252,60],[206,76,252,61,"stringify"],[206,85,252,70],[206,86,253,10,"ALWAYS_LOGGED_ENTRY_TYPES"],[206,129,254,8],[206,130,254,9],[206,151,254,30,"entryType"],[206,160,254,39],[206,162,255,6],[206,163,255,7],[207,10,256,6],[207,17,256,13],[207,19,256,15],[208,8,257,4],[209,8,259,4],[209,12,259,8],[209,13,259,9,"NativePerformanceObserver"],[209,47,259,34],[209,49,259,36,"getEntries"],[209,59,259,46],[209,61,259,48],[210,10,260,6],[210,14,260,6,"warnNoNativePerformanceObserver"],[210,66,260,37],[210,68,260,38],[210,69,260,39],[211,10,261,6],[211,17,261,13],[211,19,261,15],[212,8,262,4],[213,8,263,4],[213,15,263,11,"NativePerformanceObserver"],[213,49,263,36],[213,50,263,37,"getEntries"],[213,60,263,47],[213,61,264,6],[213,65,264,6,"performanceEntryTypeToRaw"],[213,111,264,31],[213,113,264,32,"entryType"],[213,122,264,41],[213,123,265,4],[213,124,265,5],[213,125,265,6,"map"],[213,128,265,9],[213,129,265,10,"rawToPerformanceEntry"],[213,171,265,31],[213,172,265,32],[214,6,266,2],[215,4,266,3],[216,6,266,3,"key"],[216,9,266,3],[217,6,266,3,"value"],[217,11,266,3],[217,13,268,2],[217,22,268,2,"getEntriesByName"],[217,38,268,18,"getEntriesByName"],[217,39,269,4,"entryName"],[217,48,269,21],[217,50,270,4,"entryType"],[217,59,270,36],[217,61,271,26],[218,8,272,4],[218,12,273,6,"entryType"],[218,21,273,15],[218,26,273,20,"undefined"],[218,35,273,29],[218,39,274,6],[218,40,274,7,"ALWAYS_LOGGED_ENTRY_TYPES"],[218,83,274,32],[218,84,274,33,"includes"],[218,92,274,41],[218,93,274,42,"entryType"],[218,102,274,51],[218,103,274,52],[218,105,275,6],[219,10,276,6,"console"],[219,17,276,13],[219,18,276,14,"warn"],[219,22,276,18],[219,23,277,8],[219,71,277,56,"JSON"],[219,75,277,60],[219,76,277,61,"stringify"],[219,85,277,70],[219,86,278,10,"ALWAYS_LOGGED_ENTRY_TYPES"],[219,129,279,8],[219,130,279,9],[219,151,279,30,"entryType"],[219,160,279,39],[219,162,280,6],[219,163,280,7],[220,10,281,6],[220,17,281,13],[220,19,281,15],[221,8,282,4],[222,8,284,4],[222,12,284,8],[222,13,284,9,"NativePerformanceObserver"],[222,47,284,34],[222,49,284,36,"getEntries"],[222,59,284,46],[222,61,284,48],[223,10,285,6],[223,14,285,6,"warnNoNativePerformanceObserver"],[223,66,285,37],[223,68,285,38],[223,69,285,39],[224,10,286,6],[224,17,286,13],[224,19,286,15],[225,8,287,4],[226,8,288,4],[226,15,288,11,"NativePerformanceObserver"],[226,49,288,36],[226,50,288,37,"getEntries"],[226,60,288,47],[226,61,289,6,"entryType"],[226,70,289,15],[226,74,289,19],[226,78,289,23],[226,81,289,26],[226,85,289,26,"performanceEntryTypeToRaw"],[226,131,289,51],[226,133,289,52,"entryType"],[226,142,289,61],[226,143,289,62],[226,146,289,65,"undefined"],[226,155,289,74],[226,157,290,6,"entryName"],[226,166,291,4],[226,167,291,5],[226,168,291,6,"map"],[226,171,291,9],[226,172,291,10,"rawToPerformanceEntry"],[226,214,291,31],[226,215,291,32],[227,6,292,2],[228,4,292,3],[229,2,292,3],[230,0,292,3],[230,3]],"functionMap":{"names":["<global>","<anonymous>","warnNoNativePerformance","Performance","get__memory","get__rnStartupTiming","mark","clearMarks","measure","clearMeasures","now","getEntries","getEntriesByType","getEntriesByName"],"mappings":"AAA;4DCwC,gBD;AEa;CFK;eGO;ECI;GDyB;EEG;GFoB;EGE;GHa;EIE;GJU;EKE;GLmE;EME;GNU;EOM;GPE;EQO;GRM;ESE;GTiB;EUE;GVwB;CHC"}},"type":"js/module"}]}