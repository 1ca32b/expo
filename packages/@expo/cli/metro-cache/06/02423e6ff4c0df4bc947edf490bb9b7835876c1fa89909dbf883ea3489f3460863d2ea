{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":180,"column":0,"index":5039}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":180,"column":0,"index":5039}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":180,"column":0,"index":5039}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"./NativeBlobModule","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":13,"column":0,"index":300},"end":{"line":13,"column":50,"index":350}}],"key":"8yhexf66+KMPl6M2NPjj2sFxaVw="}},{"name":"invariant","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":14,"column":0,"index":351},"end":{"line":14,"column":34,"index":385}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"./Blob","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":13,"index":400},"end":{"line":16,"column":30,"index":417}}],"key":"EbjXBySE25qcfnrYju25x5GaG3k="}},{"name":"./BlobRegistry","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":17,"column":21,"index":440},"end":{"line":17,"column":46,"index":465}}],"key":"J79JGfKe/FiysxfBPf87zeBV7Ns="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _NativeBlobModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./NativeBlobModule\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"invariant\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  var Blob = _$$_REQUIRE(_dependencyMap[5], \"./Blob\");\n  var BlobRegistry = _$$_REQUIRE(_dependencyMap[6], \"./BlobRegistry\");\n\n  /*eslint-disable no-bitwise */\n  /*eslint-disable eqeqeq */\n\n  /**\n   * Based on the rfc4122-compliant solution posted at\n   * http://stackoverflow.com/questions/105034\n   */\n  function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n      var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  // **Temporary workaround**\n  // TODO(#24654): Use turbomodules for the Blob module.\n  // Blob collector is a jsi::HostObject that is used by native to know\n  // when the a Blob instance is deallocated. This allows to free the\n  // underlying native resources. This is a hack to workaround the fact\n  // that the current bridge infra doesn't allow to track js objects\n  // deallocation. Ideally the whole Blob object should be a jsi::HostObject.\n  function createBlobCollector(blobId) {\n    if (global.__blobCollectorProvider == null) {\n      return null;\n    } else {\n      return global.__blobCollectorProvider(blobId);\n    }\n  }\n\n  /**\n   * Module to manage blobs. Wrapper around the native blob module.\n   */\n  var BlobManager = /*#__PURE__*/function () {\n    function BlobManager() {\n      (0, _classCallCheck2.default)(this, BlobManager);\n    }\n    return (0, _createClass2.default)(BlobManager, null, [{\n      key: \"createFromParts\",\n      value:\n      /**\n       * Create blob from existing array of blobs.\n       */\n      function createFromParts(parts, options) {\n        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');\n        var blobId = uuidv4();\n        var items = parts.map(part => {\n          if (part instanceof ArrayBuffer || ArrayBuffer.isView(part)) {\n            throw new Error(\"Creating blobs from 'ArrayBuffer' and 'ArrayBufferView' are not supported\");\n          }\n          if (part instanceof Blob) {\n            return {\n              data: part.data,\n              type: 'blob'\n            };\n          } else {\n            return {\n              data: String(part),\n              type: 'string'\n            };\n          }\n        });\n        var size = items.reduce((acc, curr) => {\n          if (curr.type === 'string') {\n            return acc + global.unescape(encodeURI(curr.data)).length;\n          } else {\n            return acc + curr.data.size;\n          }\n        }, 0);\n        _NativeBlobModule.default.createFromParts(items, blobId);\n        return BlobManager.createFromOptions({\n          blobId,\n          offset: 0,\n          size,\n          type: options ? options.type : '',\n          lastModified: options ? options.lastModified : Date.now()\n        });\n      }\n\n      /**\n       * Create blob instance from blob data from native.\n       * Used internally by modules like XHR, WebSocket, etc.\n       */\n    }, {\n      key: \"createFromOptions\",\n      value: function createFromOptions(options) {\n        BlobRegistry.register(options.blobId);\n        // $FlowFixMe[prop-missing]\n        return Object.assign(Object.create(Blob.prototype), {\n          data:\n          // Reuse the collector instance when creating from an existing blob.\n          // This will make sure that the underlying resource is only deallocated\n          // when all blobs that refer to it are deallocated.\n          options.__collector == null ? {\n            ...options,\n            __collector: createBlobCollector(options.blobId)\n          } : options\n        });\n      }\n\n      /**\n       * Deallocate resources for a blob.\n       */\n    }, {\n      key: \"release\",\n      value: function release(blobId) {\n        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');\n        BlobRegistry.unregister(blobId);\n        if (BlobRegistry.has(blobId)) {\n          return;\n        }\n        _NativeBlobModule.default.release(blobId);\n      }\n\n      /**\n       * Inject the blob content handler in the networking module to support blob\n       * requests and responses.\n       */\n    }, {\n      key: \"addNetworkingHandler\",\n      value: function addNetworkingHandler() {\n        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');\n        _NativeBlobModule.default.addNetworkingHandler();\n      }\n\n      /**\n       * Indicate the websocket should return a blob for incoming binary\n       * messages.\n       */\n    }, {\n      key: \"addWebSocketHandler\",\n      value: function addWebSocketHandler(socketId) {\n        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');\n        _NativeBlobModule.default.addWebSocketHandler(socketId);\n      }\n\n      /**\n       * Indicate the websocket should no longer return a blob for incoming\n       * binary messages.\n       */\n    }, {\n      key: \"removeWebSocketHandler\",\n      value: function removeWebSocketHandler(socketId) {\n        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');\n        _NativeBlobModule.default.removeWebSocketHandler(socketId);\n      }\n\n      /**\n       * Send a blob message to a websocket.\n       */\n    }, {\n      key: \"sendOverSocket\",\n      value: function sendOverSocket(blob, socketId) {\n        (0, _invariant.default)(_NativeBlobModule.default, 'NativeBlobModule is available.');\n        _NativeBlobModule.default.sendOverSocket(blob.data, socketId);\n      }\n    }]);\n  }();\n  /**\n   * If the native blob module is available.\n   */\n  BlobManager.isAvailable = !!_NativeBlobModule.default;\n  module.exports = BlobManager;\n});","lineCount":183,"map":[[5,2,13,0],[5,6,13,0,"_NativeBlobModule"],[5,23,13,0],[5,26,13,0,"_interopRequireDefault"],[5,48,13,0],[5,49,13,0,"_$$_REQUIRE"],[5,60,13,0],[5,61,13,0,"_dependencyMap"],[5,75,13,0],[6,2,14,0],[6,6,14,0,"_invariant"],[6,16,14,0],[6,19,14,0,"_interopRequireDefault"],[6,41,14,0],[6,42,14,0,"_$$_REQUIRE"],[6,53,14,0],[6,54,14,0,"_dependencyMap"],[6,68,14,0],[7,2,1,0],[8,0,2,0],[9,0,3,0],[10,0,4,0],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,0,8,0],[15,0,9,0],[17,2,16,0],[17,6,16,6,"Blob"],[17,10,16,10],[17,13,16,13,"require"],[17,24,16,20],[17,25,16,20,"_dependencyMap"],[17,39,16,20],[17,52,16,29],[17,53,16,30],[18,2,17,0],[18,6,17,6,"BlobRegistry"],[18,18,17,18],[18,21,17,21,"require"],[18,32,17,28],[18,33,17,28,"_dependencyMap"],[18,47,17,28],[18,68,17,45],[18,69,17,46],[20,2,19,0],[21,2,20,0],[23,2,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,2,26,0],[27,11,26,9,"uuidv4"],[27,17,26,15,"uuidv4"],[27,18,26,15],[27,20,26,26],[28,4,27,2],[28,11,27,9],[28,49,27,47],[28,50,27,48,"replace"],[28,57,27,55],[28,58,27,56],[28,65,27,63],[28,67,27,65,"c"],[28,68,27,66],[28,72,27,70],[29,6,28,4],[29,10,28,10,"r"],[29,11,28,11],[29,14,28,15,"Math"],[29,18,28,19],[29,19,28,20,"random"],[29,25,28,26],[29,26,28,27],[29,27,28,28],[29,30,28,31],[29,32,28,33],[29,35,28,37],[29,36,28,38],[30,8,29,6,"v"],[30,9,29,7],[30,12,29,10,"c"],[30,13,29,11],[30,17,29,15],[30,20,29,18],[30,23,29,21,"r"],[30,24,29,22],[30,27,29,26,"r"],[30,28,29,27],[30,31,29,30],[30,34,29,33],[30,37,29,37],[30,40,29,40],[31,6,30,4],[31,13,30,11,"v"],[31,14,30,12],[31,15,30,13,"toString"],[31,23,30,21],[31,24,30,22],[31,26,30,24],[31,27,30,25],[32,4,31,2],[32,5,31,3],[32,6,31,4],[33,2,32,0],[35,2,34,0],[36,2,35,0],[37,2,36,0],[38,2,37,0],[39,2,38,0],[40,2,39,0],[41,2,40,0],[42,2,41,0],[42,11,41,9,"createBlobCollector"],[42,30,41,28,"createBlobCollector"],[42,31,41,29,"blobId"],[42,37,41,43],[42,39,41,67],[43,4,42,2],[43,8,42,6,"global"],[43,14,42,12],[43,15,42,13,"__blobCollectorProvider"],[43,38,42,36],[43,42,42,40],[43,46,42,44],[43,48,42,46],[44,6,43,4],[44,13,43,11],[44,17,43,15],[45,4,44,2],[45,5,44,3],[45,11,44,9],[46,6,45,4],[46,13,45,11,"global"],[46,19,45,17],[46,20,45,18,"__blobCollectorProvider"],[46,43,45,41],[46,44,45,42,"blobId"],[46,50,45,48],[46,51,45,49],[47,4,46,2],[48,2,47,0],[50,2,49,0],[51,0,50,0],[52,0,51,0],[53,2,49,0],[53,6,52,6,"BlobManager"],[53,17,52,17],[54,4,52,17],[54,13,52,17,"BlobManager"],[54,25,52,17],[55,6,52,17],[55,10,52,17,"_classCallCheck2"],[55,26,52,17],[55,27,52,17,"default"],[55,34,52,17],[55,42,52,17,"BlobManager"],[55,53,52,17],[56,4,52,17],[57,4,52,17],[57,15,52,17,"_createClass2"],[57,28,52,17],[57,29,52,17,"default"],[57,36,52,17],[57,38,52,17,"BlobManager"],[57,49,52,17],[58,6,52,17,"key"],[58,9,52,17],[59,6,52,17,"value"],[59,11,52,17],[60,6,58,2],[61,0,59,0],[62,0,60,0],[63,6,61,2],[63,15,61,9,"createFromParts"],[63,30,61,24,"createFromParts"],[63,31,62,4,"parts"],[63,36,62,31],[63,38,63,4,"options"],[63,45,63,25],[63,47,64,10],[64,8,65,4],[64,12,65,4,"invariant"],[64,30,65,13],[64,32,65,14,"NativeBlobModule"],[64,57,65,30],[64,59,65,32],[64,91,65,64],[64,92,65,65],[65,8,67,4],[65,12,67,10,"blobId"],[65,18,67,16],[65,21,67,19,"uuidv4"],[65,27,67,25],[65,28,67,26],[65,29,67,27],[66,8,68,4],[66,12,68,10,"items"],[66,17,68,15],[66,20,68,18,"parts"],[66,25,68,23],[66,26,68,24,"map"],[66,29,68,27],[66,30,68,28,"part"],[66,34,68,32],[66,38,68,36],[67,10,69,6],[67,14,69,10,"part"],[67,18,69,14],[67,30,69,26,"ArrayBuffer"],[67,41,69,37],[67,45,69,41,"ArrayBuffer"],[67,56,69,52],[67,57,69,53,"isView"],[67,63,69,59],[67,64,69,60,"part"],[67,68,69,64],[67,69,69,65],[67,71,69,67],[68,12,70,8],[68,18,70,14],[68,22,70,18,"Error"],[68,27,70,23],[68,28,71,10],[68,103,72,8],[68,104,72,9],[69,10,73,6],[70,10,74,6],[70,14,74,10,"part"],[70,18,74,14],[70,30,74,26,"Blob"],[70,34,74,30],[70,36,74,32],[71,12,75,8],[71,19,75,15],[72,14,76,10,"data"],[72,18,76,14],[72,20,76,16,"part"],[72,24,76,20],[72,25,76,21,"data"],[72,29,76,25],[73,14,77,10,"type"],[73,18,77,14],[73,20,77,16],[74,12,78,8],[74,13,78,9],[75,10,79,6],[75,11,79,7],[75,17,79,13],[76,12,80,8],[76,19,80,15],[77,14,81,10,"data"],[77,18,81,14],[77,20,81,16,"String"],[77,26,81,22],[77,27,81,23,"part"],[77,31,81,27],[77,32,81,28],[78,14,82,10,"type"],[78,18,82,14],[78,20,82,16],[79,12,83,8],[79,13,83,9],[80,10,84,6],[81,8,85,4],[81,9,85,5],[81,10,85,6],[82,8,86,4],[82,12,86,10,"size"],[82,16,86,14],[82,19,86,17,"items"],[82,24,86,22],[82,25,86,23,"reduce"],[82,31,86,29],[82,32,86,30],[82,33,86,31,"acc"],[82,36,86,34],[82,38,86,36,"curr"],[82,42,86,40],[82,47,86,45],[83,10,87,6],[83,14,87,10,"curr"],[83,18,87,14],[83,19,87,15,"type"],[83,23,87,19],[83,28,87,24],[83,36,87,32],[83,38,87,34],[84,12,88,8],[84,19,88,15,"acc"],[84,22,88,18],[84,25,88,21,"global"],[84,31,88,27],[84,32,88,28,"unescape"],[84,40,88,36],[84,41,88,37,"encodeURI"],[84,50,88,46],[84,51,88,47,"curr"],[84,55,88,51],[84,56,88,52,"data"],[84,60,88,56],[84,61,88,57],[84,62,88,58],[84,63,88,59,"length"],[84,69,88,65],[85,10,89,6],[85,11,89,7],[85,17,89,13],[86,12,90,8],[86,19,90,15,"acc"],[86,22,90,18],[86,25,90,21,"curr"],[86,29,90,25],[86,30,90,26,"data"],[86,34,90,30],[86,35,90,31,"size"],[86,39,90,35],[87,10,91,6],[88,8,92,4],[88,9,92,5],[88,11,92,7],[88,12,92,8],[88,13,92,9],[89,8,94,4,"NativeBlobModule"],[89,33,94,20],[89,34,94,21,"createFromParts"],[89,49,94,36],[89,50,94,37,"items"],[89,55,94,42],[89,57,94,44,"blobId"],[89,63,94,50],[89,64,94,51],[90,8,96,4],[90,15,96,11,"BlobManager"],[90,26,96,22],[90,27,96,23,"createFromOptions"],[90,44,96,40],[90,45,96,41],[91,10,97,6,"blobId"],[91,16,97,12],[92,10,98,6,"offset"],[92,16,98,12],[92,18,98,14],[92,19,98,15],[93,10,99,6,"size"],[93,14,99,10],[94,10,100,6,"type"],[94,14,100,10],[94,16,100,12,"options"],[94,23,100,19],[94,26,100,22,"options"],[94,33,100,29],[94,34,100,30,"type"],[94,38,100,34],[94,41,100,37],[94,43,100,39],[95,10,101,6,"lastModified"],[95,22,101,18],[95,24,101,20,"options"],[95,31,101,27],[95,34,101,30,"options"],[95,41,101,37],[95,42,101,38,"lastModified"],[95,54,101,50],[95,57,101,53,"Date"],[95,61,101,57],[95,62,101,58,"now"],[95,65,101,61],[95,66,101,62],[96,8,102,4],[96,9,102,5],[96,10,102,6],[97,6,103,2],[99,6,105,2],[100,0,106,0],[101,0,107,0],[102,0,108,0],[103,4,105,2],[104,6,105,2,"key"],[104,9,105,2],[105,6,105,2,"value"],[105,11,105,2],[105,13,109,2],[105,22,109,9,"createFromOptions"],[105,39,109,26,"createFromOptions"],[105,40,109,27,"options"],[105,47,109,44],[105,49,109,52],[106,8,110,4,"BlobRegistry"],[106,20,110,16],[106,21,110,17,"register"],[106,29,110,25],[106,30,110,26,"options"],[106,37,110,33],[106,38,110,34,"blobId"],[106,44,110,40],[106,45,110,41],[107,8,111,4],[108,8,112,4],[108,15,112,11,"Object"],[108,21,112,17],[108,22,112,18,"assign"],[108,28,112,24],[108,29,112,25,"Object"],[108,35,112,31],[108,36,112,32,"create"],[108,42,112,38],[108,43,112,39,"Blob"],[108,47,112,43],[108,48,112,44,"prototype"],[108,57,112,53],[108,58,112,54],[108,60,112,56],[109,10,113,6,"data"],[109,14,113,10],[110,10,114,8],[111,10,115,8],[112,10,116,8],[113,10,117,8,"options"],[113,17,117,15],[113,18,117,16,"__collector"],[113,29,117,27],[113,33,117,31],[113,37,117,35],[113,40,118,12],[114,12,119,14],[114,15,119,17,"options"],[114,22,119,24],[115,12,120,14,"__collector"],[115,23,120,25],[115,25,120,27,"createBlobCollector"],[115,44,120,46],[115,45,120,47,"options"],[115,52,120,54],[115,53,120,55,"blobId"],[115,59,120,61],[116,10,121,12],[116,11,121,13],[116,14,122,12,"options"],[117,8,123,4],[117,9,123,5],[117,10,123,6],[118,6,124,2],[120,6,126,2],[121,0,127,0],[122,0,128,0],[123,4,126,2],[124,6,126,2,"key"],[124,9,126,2],[125,6,126,2,"value"],[125,11,126,2],[125,13,129,2],[125,22,129,9,"release"],[125,29,129,16,"release"],[125,30,129,17,"blobId"],[125,36,129,31],[125,38,129,39],[126,8,130,4],[126,12,130,4,"invariant"],[126,30,130,13],[126,32,130,14,"NativeBlobModule"],[126,57,130,30],[126,59,130,32],[126,91,130,64],[126,92,130,65],[127,8,132,4,"BlobRegistry"],[127,20,132,16],[127,21,132,17,"unregister"],[127,31,132,27],[127,32,132,28,"blobId"],[127,38,132,34],[127,39,132,35],[128,8,133,4],[128,12,133,8,"BlobRegistry"],[128,24,133,20],[128,25,133,21,"has"],[128,28,133,24],[128,29,133,25,"blobId"],[128,35,133,31],[128,36,133,32],[128,38,133,34],[129,10,134,6],[130,8,135,4],[131,8,136,4,"NativeBlobModule"],[131,33,136,20],[131,34,136,21,"release"],[131,41,136,28],[131,42,136,29,"blobId"],[131,48,136,35],[131,49,136,36],[132,6,137,2],[134,6,139,2],[135,0,140,0],[136,0,141,0],[137,0,142,0],[138,4,139,2],[139,6,139,2,"key"],[139,9,139,2],[140,6,139,2,"value"],[140,11,139,2],[140,13,143,2],[140,22,143,9,"addNetworkingHandler"],[140,42,143,29,"addNetworkingHandler"],[140,43,143,29],[140,45,143,38],[141,8,144,4],[141,12,144,4,"invariant"],[141,30,144,13],[141,32,144,14,"NativeBlobModule"],[141,57,144,30],[141,59,144,32],[141,91,144,64],[141,92,144,65],[142,8,146,4,"NativeBlobModule"],[142,33,146,20],[142,34,146,21,"addNetworkingHandler"],[142,54,146,41],[142,55,146,42],[142,56,146,43],[143,6,147,2],[145,6,149,2],[146,0,150,0],[147,0,151,0],[148,0,152,0],[149,4,149,2],[150,6,149,2,"key"],[150,9,149,2],[151,6,149,2,"value"],[151,11,149,2],[151,13,153,2],[151,22,153,9,"addWebSocketHandler"],[151,41,153,28,"addWebSocketHandler"],[151,42,153,29,"socketId"],[151,50,153,45],[151,52,153,53],[152,8,154,4],[152,12,154,4,"invariant"],[152,30,154,13],[152,32,154,14,"NativeBlobModule"],[152,57,154,30],[152,59,154,32],[152,91,154,64],[152,92,154,65],[153,8,156,4,"NativeBlobModule"],[153,33,156,20],[153,34,156,21,"addWebSocketHandler"],[153,53,156,40],[153,54,156,41,"socketId"],[153,62,156,49],[153,63,156,50],[154,6,157,2],[156,6,159,2],[157,0,160,0],[158,0,161,0],[159,0,162,0],[160,4,159,2],[161,6,159,2,"key"],[161,9,159,2],[162,6,159,2,"value"],[162,11,159,2],[162,13,163,2],[162,22,163,9,"removeWebSocketHandler"],[162,44,163,31,"removeWebSocketHandler"],[162,45,163,32,"socketId"],[162,53,163,48],[162,55,163,56],[163,8,164,4],[163,12,164,4,"invariant"],[163,30,164,13],[163,32,164,14,"NativeBlobModule"],[163,57,164,30],[163,59,164,32],[163,91,164,64],[163,92,164,65],[164,8,166,4,"NativeBlobModule"],[164,33,166,20],[164,34,166,21,"removeWebSocketHandler"],[164,56,166,43],[164,57,166,44,"socketId"],[164,65,166,52],[164,66,166,53],[165,6,167,2],[167,6,169,2],[168,0,170,0],[169,0,171,0],[170,4,169,2],[171,6,169,2,"key"],[171,9,169,2],[172,6,169,2,"value"],[172,11,169,2],[172,13,172,2],[172,22,172,9,"sendOverSocket"],[172,36,172,23,"sendOverSocket"],[172,37,172,24,"blob"],[172,41,172,34],[172,43,172,36,"socketId"],[172,51,172,52],[172,53,172,60],[173,8,173,4],[173,12,173,4,"invariant"],[173,30,173,13],[173,32,173,14,"NativeBlobModule"],[173,57,173,30],[173,59,173,32],[173,91,173,64],[173,92,173,65],[174,8,175,4,"NativeBlobModule"],[174,33,175,20],[174,34,175,21,"sendOverSocket"],[174,48,175,35],[174,49,175,36,"blob"],[174,53,175,40],[174,54,175,41,"data"],[174,58,175,45],[174,60,175,47,"socketId"],[174,68,175,55],[174,69,175,56],[175,6,176,2],[176,4,176,3],[177,2,176,3],[178,2,53,2],[179,0,54,0],[180,0,55,0],[181,2,52,6,"BlobManager"],[181,13,52,17],[181,14,56,9,"isAvailable"],[181,25,56,20],[181,28,56,32],[181,29,56,33],[181,30,56,34,"NativeBlobModule"],[181,55,56,50],[182,2,179,0,"module"],[182,8,179,6],[182,9,179,7,"exports"],[182,16,179,14],[182,19,179,17,"BlobManager"],[182,30,179,28],[183,0,179,29],[183,3]],"functionMap":{"names":["<global>","uuidv4","xxxxxxxxXxxx4xxxYxxxXxxxxxxxxxxx.replace$argument_1","createBlobCollector","BlobManager","createFromParts","parts.map$argument_0","items.reduce$argument_0","createFromOptions","release","addNetworkingHandler","addWebSocketHandler","removeWebSocketHandler","sendOverSocket"],"mappings":"AAA;ACyB;iECC;GDI;CDC;AGS;CHM;AIK;ECS;4BCO;KDiB;8BEC;KFM;GDW;EIM;GJe;EKK;GLQ;EMM;GNI;EOM;GPI;EQM;GRI;ESK;GTI;CJC"}},"type":"js/module"}]}