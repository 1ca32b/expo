{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":298,"column":0,"index":8369}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":298,"column":0,"index":8369}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"query-string","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":0,"index":94},"end":{"line":6,"column":44,"index":138}}],"key":"GFSDDT7dIJnvWSebFhtcKgwXBCQ="}},{"name":"./fromEntries","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":0,"index":140},"end":{"line":8,"column":40,"index":180}}],"key":"d+ic4Sb74EHMEZTFDxW8pFJcVt0="}},{"name":"./validatePathConfig","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":0,"index":239},"end":{"line":10,"column":54,"index":293}}],"key":"cg7LCOlFjZ3IP0CYIpbP6C+VR6g="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getPathFromState;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var queryString = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2], \"query-string\"));\n  var _fromEntries = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./fromEntries\"));\n  var _validatePathConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./validatePathConfig\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var getActiveRoute = state => {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n    if (route.state) {\n      return getActiveRoute(route.state);\n    }\n    return route;\n  };\n\n  /**\n   * Utility to serialize a navigation state object to a path string.\n   *\n   * @example\n   * ```js\n   * getPathFromState(\n   *   {\n   *     routes: [\n   *       {\n   *         name: 'Chat',\n   *         params: { author: 'Jane', id: 42 },\n   *       },\n   *     ],\n   *   },\n   *   {\n   *     screens: {\n   *       Chat: {\n   *         path: 'chat/:author/:id',\n   *         stringify: { author: author => author.toLowerCase() }\n   *       }\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @param state Navigation state to serialize.\n   * @param options Extra options to fine-tune how to serialize the path.\n   * @returns Path representing the state, e.g. /foo/bar?count=42.\n   */\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(\"Got 'undefined' for the navigation state. You must pass a valid state object.\");\n    }\n    if (options) {\n      (0, _validatePathConfig.default)(options);\n    }\n\n    // Create a normalized configs object which will be easier to use\n    var configs = options?.screens ? createNormalizedConfigs(options?.screens) : {};\n    var path = '/';\n    var current = state;\n    var allParams = {};\n    var _loop = function () {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var pattern;\n      var focusedParams;\n      var focusedRoute = getActiveRoute(state);\n      var currentOptions = configs;\n\n      // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n      var nestedRouteNames = [];\n      var hasNext = true;\n      var _loop2 = function () {\n        pattern = currentOptions[route.name].pattern;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          var stringify = currentOptions[route.name]?.stringify;\n          var currentParams = (0, _fromEntries.default)(Object.entries(route.params).map(_ref => {\n            var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n            return [key, stringify?.[key] ? stringify[key](value) : String(value)];\n          }));\n          if (pattern) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            // If this is the focused route, keep the params for later use\n            // We save it here since it's been stringified already\n            focusedParams = {\n              ...currentParams\n            };\n            pattern?.split('/').filter(p => p.startsWith(':'))\n            // eslint-disable-next-line no-loop-func\n            .forEach(p => {\n              var name = getParamName(p);\n\n              // Remove the params present in the pattern since we'll only use the rest for query string\n              if (focusedParams) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete focusedParams[name];\n              }\n            });\n          }\n        }\n\n        // If there is no `screens` property or no nested state, we return pattern\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          // if there is config for next route name, we go deeper\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            // If not, there is no sense in going deeper in config\n            hasNext = false;\n          }\n        }\n      };\n      while (route.name in currentOptions && hasNext) {\n        _loop2();\n      }\n      if (pattern === undefined) {\n        pattern = nestedRouteNames.join('/');\n      }\n      if (currentOptions[route.name] !== undefined) {\n        path += pattern.split('/').map(p => {\n          var name = getParamName(p);\n\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (p === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (p.startsWith(':')) {\n            var _value = allParams[name];\n            if (_value === undefined && p.endsWith('?')) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n            return encodeURIComponent(_value);\n          }\n          return encodeURIComponent(p);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams) {\n        focusedParams = focusedRoute.params;\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete focusedParams[param];\n          }\n        }\n        var query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += `?${query}`;\n        }\n      }\n      current = route.state;\n    };\n    while (current) {\n      _loop();\n    }\n\n    // Remove multiple as well as trailing slashes\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n    return path;\n  }\n  var getParamName = pattern => pattern.replace(/^:/, '').replace(/\\?$/, '');\n  var joinPaths = function () {\n    for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n      paths[_key] = arguments[_key];\n    }\n    return [].concat(...paths.map(p => p.split('/'))).filter(Boolean).join('/');\n  };\n  var createConfigItem = (config, parentPattern) => {\n    if (typeof config === 'string') {\n      // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n      var _pattern = parentPattern ? joinPaths(parentPattern, config) : config;\n      return {\n        pattern: _pattern\n      };\n    }\n\n    // If an object is specified as the value (e.g. Foo: { ... }),\n    // It can have `path` property and `screens` prop which has nested configs\n    var pattern;\n    if (config.exact && config.path === undefined) {\n      throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n    }\n    pattern = config.exact !== true ? joinPaths(parentPattern || '', config.path || '') : config.path || '';\n    var screens = config.screens ? createNormalizedConfigs(config.screens, pattern) : undefined;\n    return {\n      // Normalize pattern to remove any leading, trailing slashes, duplicate slashes etc.\n      pattern: pattern?.split('/').filter(Boolean).join('/'),\n      stringify: config.stringify,\n      screens\n    };\n  };\n  var createNormalizedConfigs = (options, pattern) => (0, _fromEntries.default)(Object.entries(options).map(_ref3 => {\n    var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n      name = _ref4[0],\n      c = _ref4[1];\n    var result = createConfigItem(c, pattern);\n    return [name, result];\n  }));\n});","lineCount":225,"map":[[8,2,6,0],[8,6,6,0,"queryString"],[8,17,6,0],[8,20,6,0,"_interopRequireWildcard"],[8,43,6,0],[8,44,6,0,"_$$_REQUIRE"],[8,55,6,0],[8,56,6,0,"_dependencyMap"],[8,70,6,0],[9,2,8,0],[9,6,8,0,"_fromEntries"],[9,18,8,0],[9,21,8,0,"_interopRequireDefault"],[9,43,8,0],[9,44,8,0,"_$$_REQUIRE"],[9,55,8,0],[9,56,8,0,"_dependencyMap"],[9,70,8,0],[10,2,10,0],[10,6,10,0,"_validatePathConfig"],[10,25,10,0],[10,28,10,0,"_interopRequireDefault"],[10,50,10,0],[10,51,10,0,"_$$_REQUIRE"],[10,62,10,0],[10,63,10,0,"_dependencyMap"],[10,77,10,0],[11,2,10,54],[11,11,10,54,"_getRequireWildcardCache"],[11,36,10,54,"e"],[11,37,10,54],[11,66,10,54,"WeakMap"],[11,73,10,54],[11,92,10,54,"r"],[11,93,10,54],[11,100,10,54,"WeakMap"],[11,107,10,54],[11,111,10,54,"t"],[11,112,10,54],[11,119,10,54,"WeakMap"],[11,126,10,54],[11,138,10,54,"_getRequireWildcardCache"],[11,162,10,54],[11,174,10,54,"_getRequireWildcardCache"],[11,175,10,54,"e"],[11,176,10,54],[11,187,10,54,"e"],[11,188,10,54],[11,191,10,54,"t"],[11,192,10,54],[11,195,10,54,"r"],[11,196,10,54],[11,201,10,54,"e"],[11,202,10,54],[12,2,10,54],[12,11,10,54,"_interopRequireWildcard"],[12,35,10,54,"e"],[12,36,10,54],[12,38,10,54,"r"],[12,39,10,54],[12,48,10,54,"r"],[12,49,10,54],[12,53,10,54,"e"],[12,54,10,54],[12,58,10,54,"e"],[12,59,10,54],[12,60,10,54,"__esModule"],[12,70,10,54],[12,79,10,54,"e"],[12,80,10,54],[12,95,10,54,"e"],[12,96,10,54],[12,119,10,54,"e"],[12,120,10,54],[12,145,10,54,"e"],[12,146,10,54],[12,157,10,54,"default"],[12,164,10,54],[12,166,10,54,"e"],[12,167,10,54],[12,175,10,54,"t"],[12,176,10,54],[12,179,10,54,"_getRequireWildcardCache"],[12,203,10,54],[12,204,10,54,"r"],[12,205,10,54],[12,212,10,54,"t"],[12,213,10,54],[12,217,10,54,"t"],[12,218,10,54],[12,219,10,54,"has"],[12,222,10,54],[12,223,10,54,"e"],[12,224,10,54],[12,234,10,54,"t"],[12,235,10,54],[12,236,10,54,"get"],[12,239,10,54],[12,240,10,54,"e"],[12,241,10,54],[12,248,10,54,"n"],[12,249,10,54],[12,254,10,54,"__proto__"],[12,263,10,54],[12,273,10,54,"a"],[12,274,10,54],[12,277,10,54,"Object"],[12,283,10,54],[12,284,10,54,"defineProperty"],[12,298,10,54],[12,302,10,54,"Object"],[12,308,10,54],[12,309,10,54,"getOwnPropertyDescriptor"],[12,333,10,54],[12,344,10,54,"u"],[12,345,10,54],[12,349,10,54,"e"],[12,350,10,54],[12,370,10,54,"u"],[12,371,10,54],[12,375,10,54,"Object"],[12,381,10,54],[12,382,10,54,"prototype"],[12,391,10,54],[12,392,10,54,"hasOwnProperty"],[12,406,10,54],[12,407,10,54,"call"],[12,411,10,54],[12,412,10,54,"e"],[12,413,10,54],[12,415,10,54,"u"],[12,416,10,54],[12,425,10,54,"i"],[12,426,10,54],[12,429,10,54,"a"],[12,430,10,54],[12,433,10,54,"Object"],[12,439,10,54],[12,440,10,54,"getOwnPropertyDescriptor"],[12,464,10,54],[12,465,10,54,"e"],[12,466,10,54],[12,468,10,54,"u"],[12,469,10,54],[12,479,10,54,"i"],[12,480,10,54],[12,485,10,54,"i"],[12,486,10,54],[12,487,10,54,"get"],[12,490,10,54],[12,494,10,54,"i"],[12,495,10,54],[12,496,10,54,"set"],[12,499,10,54],[12,503,10,54,"Object"],[12,509,10,54],[12,510,10,54,"defineProperty"],[12,524,10,54],[12,525,10,54,"n"],[12,526,10,54],[12,528,10,54,"u"],[12,529,10,54],[12,531,10,54,"i"],[12,532,10,54],[12,536,10,54,"n"],[12,537,10,54],[12,538,10,54,"u"],[12,539,10,54],[12,543,10,54,"e"],[12,544,10,54],[12,545,10,54,"u"],[12,546,10,54],[12,558,10,54,"n"],[12,559,10,54],[12,560,10,54,"default"],[12,567,10,54],[12,570,10,54,"e"],[12,571,10,54],[12,573,10,54,"t"],[12,574,10,54],[12,578,10,54,"t"],[12,579,10,54],[12,580,10,54,"set"],[12,583,10,54],[12,584,10,54,"e"],[12,585,10,54],[12,587,10,54,"n"],[12,588,10,54],[12,591,10,54,"n"],[12,592,10,54],[13,2,27,0],[13,6,27,6,"getActiveRoute"],[13,20,27,20],[13,23,27,24,"state"],[13,28,27,36],[13,32,27,76],[14,4,28,2],[14,8,28,8,"route"],[14,13,28,13],[14,16,29,4],[14,23,29,11,"state"],[14,28,29,16],[14,29,29,17,"index"],[14,34,29,22],[14,39,29,27],[14,47,29,35],[14,50,30,8,"state"],[14,55,30,13],[14,56,30,14,"routes"],[14,62,30,20],[14,63,30,21,"state"],[14,68,30,26],[14,69,30,27,"index"],[14,74,30,32],[14,75,30,33],[14,78,31,8,"state"],[14,83,31,13],[14,84,31,14,"routes"],[14,90,31,20],[14,91,31,21,"state"],[14,96,31,26],[14,97,31,27,"routes"],[14,103,31,33],[14,104,31,34,"length"],[14,110,31,40],[14,113,31,43],[14,114,31,44],[14,115,31,45],[15,4,33,2],[15,8,33,6,"route"],[15,13,33,11],[15,14,33,12,"state"],[15,19,33,17],[15,21,33,19],[16,6,34,4],[16,13,34,11,"getActiveRoute"],[16,27,34,25],[16,28,34,26,"route"],[16,33,34,31],[16,34,34,32,"state"],[16,39,34,37],[16,40,34,38],[17,4,35,2],[18,4,37,2],[18,11,37,9,"route"],[18,16,37,14],[19,2,38,0],[19,3,38,1],[21,2,40,0],[22,0,41,0],[23,0,42,0],[24,0,43,0],[25,0,44,0],[26,0,45,0],[27,0,46,0],[28,0,47,0],[29,0,48,0],[30,0,49,0],[31,0,50,0],[32,0,51,0],[33,0,52,0],[34,0,53,0],[35,0,54,0],[36,0,55,0],[37,0,56,0],[38,0,57,0],[39,0,58,0],[40,0,59,0],[41,0,60,0],[42,0,61,0],[43,0,62,0],[44,0,63,0],[45,0,64,0],[46,0,65,0],[47,0,66,0],[48,0,67,0],[49,0,68,0],[50,2,69,15],[50,11,69,24,"getPathFromState"],[50,27,69,40,"getPathFromState"],[50,28,70,2,"state"],[50,33,70,14],[50,35,71,2,"options"],[50,42,71,30],[50,44,72,10],[51,4,73,2],[51,8,73,6,"state"],[51,13,73,11],[51,17,73,15],[51,21,73,19],[51,23,73,21],[52,6,74,4],[52,12,74,10,"Error"],[52,17,74,15],[52,18,75,6],[52,97,76,4],[52,98,76,5],[53,4,77,2],[54,4,79,2],[54,8,79,6,"options"],[54,15,79,13],[54,17,79,15],[55,6,80,4],[55,10,80,4,"validatePathConfig"],[55,37,80,22],[55,39,80,23,"options"],[55,46,80,30],[55,47,80,31],[56,4,81,2],[58,4,83,2],[59,4,84,2],[59,8,84,8,"configs"],[59,15,84,43],[59,18,84,46,"options"],[59,25,84,53],[59,27,84,55,"screens"],[59,34,84,62],[59,37,85,6,"createNormalizedConfigs"],[59,60,85,29],[59,61,85,30,"options"],[59,68,85,37],[59,70,85,39,"screens"],[59,77,85,46],[59,78,85,47],[59,81,86,6],[59,82,86,7],[59,83,86,8],[60,4,88,2],[60,8,88,6,"path"],[60,12,88,10],[60,15,88,13],[60,18,88,16],[61,4,89,2],[61,8,89,6,"current"],[61,15,89,32],[61,18,89,35,"state"],[61,23,89,40],[62,4,91,2],[62,8,91,8,"allParams"],[62,17,91,38],[62,20,91,41],[62,21,91,42],[62,22,91,43],[63,4,91,44],[63,8,91,44,"_loop"],[63,13,91,44],[63,25,91,44,"_loop"],[63,26,91,44],[63,28,93,18],[64,6,94,4],[64,10,94,8,"index"],[64,15,94,13],[64,18,94,16],[64,25,94,23,"current"],[64,32,94,30],[64,33,94,31,"index"],[64,38,94,36],[64,43,94,41],[64,51,94,49],[64,54,94,52,"current"],[64,61,94,59],[64,62,94,60,"index"],[64,67,94,65],[64,70,94,68],[64,71,94,69],[65,6,95,4],[65,10,95,8,"route"],[65,15,95,13],[65,18,95,16,"current"],[65,25,95,23],[65,26,95,24,"routes"],[65,32,95,30],[65,33,95,31,"index"],[65,38,95,36],[65,39,97,5],[66,6,99,4],[66,10,99,8,"pattern"],[66,17,99,35],[67,6,101,4],[67,10,101,8,"focusedParams"],[67,23,101,54],[68,6,102,4],[68,10,102,8,"focusedRoute"],[68,22,102,20],[68,25,102,23,"getActiveRoute"],[68,39,102,37],[68,40,102,38,"state"],[68,45,102,43],[68,46,102,44],[69,6,103,4],[69,10,103,8,"currentOptions"],[69,24,103,22],[69,27,103,25,"configs"],[69,34,103,32],[71,6,105,4],[72,6,106,4],[72,10,106,8,"nestedRouteNames"],[72,26,106,24],[72,29,106,27],[72,31,106,29],[73,6,108,4],[73,10,108,8,"hasNext"],[73,17,108,15],[73,20,108,18],[73,24,108,22],[74,6,108,23],[74,10,108,23,"_loop2"],[74,16,108,23],[74,28,108,23,"_loop2"],[74,29,108,23],[74,31,110,52],[75,8,111,6,"pattern"],[75,15,111,13],[75,18,111,16,"currentOptions"],[75,32,111,30],[75,33,111,31,"route"],[75,38,111,36],[75,39,111,37,"name"],[75,43,111,41],[75,44,111,42],[75,45,111,43,"pattern"],[75,52,111,50],[76,8,113,6,"nestedRouteNames"],[76,24,113,22],[76,25,113,23,"push"],[76,29,113,27],[76,30,113,28,"route"],[76,35,113,33],[76,36,113,34,"name"],[76,40,113,38],[76,41,113,39],[77,8,115,6],[77,12,115,10,"route"],[77,17,115,15],[77,18,115,16,"params"],[77,24,115,22],[77,26,115,24],[78,10,116,8],[78,14,116,14,"stringify"],[78,23,116,23],[78,26,116,26,"currentOptions"],[78,40,116,40],[78,41,116,41,"route"],[78,46,116,46],[78,47,116,47,"name"],[78,51,116,51],[78,52,116,52],[78,54,116,54,"stringify"],[78,63,116,63],[79,10,118,8],[79,14,118,14,"currentParams"],[79,27,118,27],[79,30,118,30],[79,34,118,30,"fromEntries"],[79,54,118,41],[79,56,119,10,"Object"],[79,62,119,16],[79,63,119,17,"entries"],[79,70,119,24],[79,71,119,25,"route"],[79,76,119,30],[79,77,119,31,"params"],[79,83,119,37],[79,84,119,38],[79,85,119,39,"map"],[79,88,119,42],[79,89,119,43,"_ref"],[79,93,119,43],[80,12,119,43],[80,16,119,43,"_ref2"],[80,21,119,43],[80,28,119,43,"_slicedToArray2"],[80,43,119,43],[80,44,119,43,"default"],[80,51,119,43],[80,53,119,43,"_ref"],[80,57,119,43],[81,14,119,45,"key"],[81,17,119,48],[81,20,119,48,"_ref2"],[81,25,119,48],[82,14,119,50,"value"],[82,19,119,55],[82,22,119,55,"_ref2"],[82,27,119,55],[83,12,119,55],[83,19,119,61],[83,20,120,12,"key"],[83,23,120,15],[83,25,121,12,"stringify"],[83,34,121,21],[83,37,121,24,"key"],[83,40,121,27],[83,41,121,28],[83,44,121,31,"stringify"],[83,53,121,40],[83,54,121,41,"key"],[83,57,121,44],[83,58,121,45],[83,59,121,46,"value"],[83,64,121,51],[83,65,121,52],[83,68,121,55,"String"],[83,74,121,61],[83,75,121,62,"value"],[83,80,121,67],[83,81,121,68],[83,82,122,11],[84,10,122,11],[84,12,123,8],[84,13,123,9],[85,10,125,8],[85,14,125,12,"pattern"],[85,21,125,19],[85,23,125,21],[86,12,126,10,"Object"],[86,18,126,16],[86,19,126,17,"assign"],[86,25,126,23],[86,26,126,24,"allParams"],[86,35,126,33],[86,37,126,35,"currentParams"],[86,50,126,48],[86,51,126,49],[87,10,127,8],[88,10,129,8],[88,14,129,12,"focusedRoute"],[88,26,129,24],[88,31,129,29,"route"],[88,36,129,34],[88,38,129,36],[89,12,130,10],[90,12,131,10],[91,12,132,10,"focusedParams"],[91,25,132,23],[91,28,132,26],[92,14,132,28],[92,17,132,31,"currentParams"],[93,12,132,45],[93,13,132,46],[94,12,134,10,"pattern"],[94,19,134,17],[94,21,135,14,"split"],[94,26,135,19],[94,27,135,20],[94,30,135,23],[94,31,135,24],[94,32,136,13,"filter"],[94,38,136,19],[94,39,136,21,"p"],[94,40,136,22],[94,44,136,27,"p"],[94,45,136,28],[94,46,136,29,"startsWith"],[94,56,136,39],[94,57,136,40],[94,60,136,43],[94,61,136,44],[95,12,137,12],[96,12,137,12],[96,13,138,13,"forEach"],[96,20,138,20],[96,21,138,22,"p"],[96,22,138,23],[96,26,138,28],[97,14,139,14],[97,18,139,20,"name"],[97,22,139,24],[97,25,139,27,"getParamName"],[97,37,139,39],[97,38,139,40,"p"],[97,39,139,41],[97,40,139,42],[99,14,141,14],[100,14,142,14],[100,18,142,18,"focusedParams"],[100,31,142,31],[100,33,142,33],[101,16,143,16],[102,16,144,16],[102,23,144,23,"focusedParams"],[102,36,144,36],[102,37,144,37,"name"],[102,41,144,41],[102,42,144,42],[103,14,145,14],[104,12,146,12],[104,13,146,13],[104,14,146,14],[105,10,147,8],[106,8,148,6],[108,8,150,6],[109,8,151,6],[109,12,151,10],[109,13,151,11,"currentOptions"],[109,27,151,25],[109,28,151,26,"route"],[109,33,151,31],[109,34,151,32,"name"],[109,38,151,36],[109,39,151,37],[109,40,151,38,"screens"],[109,47,151,45],[109,51,151,49,"route"],[109,56,151,54],[109,57,151,55,"state"],[109,62,151,60],[109,67,151,65,"undefined"],[109,76,151,74],[109,78,151,76],[110,10,152,8,"hasNext"],[110,17,152,15],[110,20,152,18],[110,25,152,23],[111,8,153,6],[111,9,153,7],[111,15,153,13],[112,10,154,8,"index"],[112,15,154,13],[112,18,155,10],[112,25,155,17,"route"],[112,30,155,22],[112,31,155,23,"state"],[112,36,155,28],[112,37,155,29,"index"],[112,42,155,34],[112,47,155,39],[112,55,155,47],[112,58,156,14,"route"],[112,63,156,19],[112,64,156,20,"state"],[112,69,156,25],[112,70,156,26,"index"],[112,75,156,31],[112,78,157,14,"route"],[112,83,157,19],[112,84,157,20,"state"],[112,89,157,25],[112,90,157,26,"routes"],[112,96,157,32],[112,97,157,33,"length"],[112,103,157,39],[112,106,157,42],[112,107,157,43],[113,10,159,8],[113,14,159,14,"nextRoute"],[113,23,159,23],[113,26,159,26,"route"],[113,31,159,31],[113,32,159,32,"state"],[113,37,159,37],[113,38,159,38,"routes"],[113,44,159,44],[113,45,159,45,"index"],[113,50,159,50],[113,51,159,51],[114,10,160,8],[114,14,160,14,"nestedConfig"],[114,26,160,26],[114,29,160,29,"currentOptions"],[114,43,160,43],[114,44,160,44,"route"],[114,49,160,49],[114,50,160,50,"name"],[114,54,160,54],[114,55,160,55],[114,56,160,56,"screens"],[114,63,160,63],[116,10,162,8],[117,10,163,8],[117,14,163,12,"nestedConfig"],[117,26,163,24],[117,30,163,28,"nextRoute"],[117,39,163,37],[117,40,163,38,"name"],[117,44,163,42],[117,48,163,46,"nestedConfig"],[117,60,163,58],[117,62,163,60],[118,12,164,10,"route"],[118,17,164,15],[118,20,164,18,"nextRoute"],[118,29,164,64],[119,12,165,10,"currentOptions"],[119,26,165,24],[119,29,165,27,"nestedConfig"],[119,41,165,39],[120,10,166,8],[120,11,166,9],[120,17,166,15],[121,12,167,10],[122,12,168,10,"hasNext"],[122,19,168,17],[122,22,168,20],[122,27,168,25],[123,10,169,8],[124,8,170,6],[125,6,171,4],[125,7,171,5],[126,6,110,4],[126,13,110,11,"route"],[126,18,110,16],[126,19,110,17,"name"],[126,23,110,21],[126,27,110,25,"currentOptions"],[126,41,110,39],[126,45,110,43,"hasNext"],[126,52,110,50],[127,8,110,50,"_loop2"],[127,14,110,50],[128,6,110,50],[129,6,173,4],[129,10,173,8,"pattern"],[129,17,173,15],[129,22,173,20,"undefined"],[129,31,173,29],[129,33,173,31],[130,8,174,6,"pattern"],[130,15,174,13],[130,18,174,16,"nestedRouteNames"],[130,34,174,32],[130,35,174,33,"join"],[130,39,174,37],[130,40,174,38],[130,43,174,41],[130,44,174,42],[131,6,175,4],[132,6,177,4],[132,10,177,8,"currentOptions"],[132,24,177,22],[132,25,177,23,"route"],[132,30,177,28],[132,31,177,29,"name"],[132,35,177,33],[132,36,177,34],[132,41,177,39,"undefined"],[132,50,177,48],[132,52,177,50],[133,8,178,6,"path"],[133,12,178,10],[133,16,178,14,"pattern"],[133,23,178,21],[133,24,179,9,"split"],[133,29,179,14],[133,30,179,15],[133,33,179,18],[133,34,179,19],[133,35,180,9,"map"],[133,38,180,12],[133,39,180,14,"p"],[133,40,180,15],[133,44,180,20],[134,10,181,10],[134,14,181,16,"name"],[134,18,181,20],[134,21,181,23,"getParamName"],[134,33,181,35],[134,34,181,36,"p"],[134,35,181,37],[134,36,181,38],[136,10,183,10],[137,10,184,10],[138,10,185,10],[139,10,186,10],[139,14,186,14,"p"],[139,15,186,15],[139,20,186,20],[139,23,186,23],[139,25,186,25],[140,12,187,12],[140,19,187,19,"route"],[140,24,187,24],[140,25,187,25,"name"],[140,29,187,29],[141,10,188,10],[143,10,190,10],[144,10,191,10],[144,14,191,14,"p"],[144,15,191,15],[144,16,191,16,"startsWith"],[144,26,191,26],[144,27,191,27],[144,30,191,30],[144,31,191,31],[144,33,191,33],[145,12,192,12],[145,16,192,18,"value"],[145,22,192,23],[145,25,192,26,"allParams"],[145,34,192,35],[145,35,192,36,"name"],[145,39,192,40],[145,40,192,41],[146,12,194,12],[146,16,194,16,"value"],[146,22,194,21],[146,27,194,26,"undefined"],[146,36,194,35],[146,40,194,39,"p"],[146,41,194,40],[146,42,194,41,"endsWith"],[146,50,194,49],[146,51,194,50],[146,54,194,53],[146,55,194,54],[146,57,194,56],[147,14,195,14],[148,14,196,14],[148,21,196,21],[148,23,196,23],[149,12,197,12],[150,12,199,12],[150,19,199,19,"encodeURIComponent"],[150,37,199,37],[150,38,199,38,"value"],[150,44,199,43],[150,45,199,44],[151,10,200,10],[152,10,202,10],[152,17,202,17,"encodeURIComponent"],[152,35,202,35],[152,36,202,36,"p"],[152,37,202,37],[152,38,202,38],[153,8,203,8],[153,9,203,9],[153,10,203,10],[153,11,204,9,"join"],[153,15,204,13],[153,16,204,14],[153,19,204,17],[153,20,204,18],[154,6,205,4],[154,7,205,5],[154,13,205,11],[155,8,206,6,"path"],[155,12,206,10],[155,16,206,14,"encodeURIComponent"],[155,34,206,32],[155,35,206,33,"route"],[155,40,206,38],[155,41,206,39,"name"],[155,45,206,43],[155,46,206,44],[156,6,207,4],[157,6,209,4],[157,10,209,8],[157,11,209,9,"focusedParams"],[157,24,209,22],[157,26,209,24],[158,8,210,6,"focusedParams"],[158,21,210,19],[158,24,210,22,"focusedRoute"],[158,36,210,34],[158,37,210,35,"params"],[158,43,210,41],[159,6,211,4],[160,6,213,4],[160,10,213,8,"route"],[160,15,213,13],[160,16,213,14,"state"],[160,21,213,19],[160,23,213,21],[161,8,214,6,"path"],[161,12,214,10],[161,16,214,14],[161,19,214,17],[162,6,215,4],[162,7,215,5],[162,13,215,11],[162,17,215,15,"focusedParams"],[162,30,215,28],[162,32,215,30],[163,8,216,6],[163,13,216,11],[163,17,216,15,"param"],[163,22,216,20],[163,26,216,24,"focusedParams"],[163,39,216,37],[163,41,216,39],[164,10,217,8],[164,14,217,12,"focusedParams"],[164,27,217,25],[164,28,217,26,"param"],[164,33,217,31],[164,34,217,32],[164,39,217,37],[164,50,217,48],[164,52,217,50],[165,12,218,10],[166,12,219,10],[166,19,219,17,"focusedParams"],[166,32,219,30],[166,33,219,31,"param"],[166,38,219,36],[166,39,219,37],[167,10,220,8],[168,8,221,6],[169,8,223,6],[169,12,223,12,"query"],[169,17,223,17],[169,20,223,20,"queryString"],[169,31,223,31],[169,32,223,32,"stringify"],[169,41,223,41],[169,42,223,42,"focusedParams"],[169,55,223,55],[169,57,223,57],[170,10,223,59,"sort"],[170,14,223,63],[170,16,223,65],[171,8,223,71],[171,9,223,72],[171,10,223,73],[172,8,225,6],[172,12,225,10,"query"],[172,17,225,15],[172,19,225,17],[173,10,226,8,"path"],[173,14,226,12],[173,18,226,16],[173,22,226,20,"query"],[173,27,226,25],[173,29,226,27],[174,8,227,6],[175,6,228,4],[176,6,230,4,"current"],[176,13,230,11],[176,16,230,14,"route"],[176,21,230,19],[176,22,230,20,"state"],[176,27,230,25],[177,4,231,2],[177,5,231,3],[178,4,93,2],[178,11,93,9,"current"],[178,18,93,16],[179,6,93,16,"_loop"],[179,11,93,16],[180,4,93,16],[182,4,233,2],[183,4,234,2,"path"],[183,8,234,6],[183,11,234,9,"path"],[183,15,234,13],[183,16,234,14,"replace"],[183,23,234,21],[183,24,234,22],[183,30,234,28],[183,32,234,30],[183,35,234,33],[183,36,234,34],[184,4,235,2,"path"],[184,8,235,6],[184,11,235,9,"path"],[184,15,235,13],[184,16,235,14,"length"],[184,22,235,20],[184,25,235,23],[184,26,235,24],[184,29,235,27,"path"],[184,33,235,31],[184,34,235,32,"replace"],[184,41,235,39],[184,42,235,40],[184,47,235,45],[184,49,235,47],[184,51,235,49],[184,52,235,50],[184,55,235,53,"path"],[184,59,235,57],[185,4,237,2],[185,11,237,9,"path"],[185,15,237,13],[186,2,238,0],[187,2,240,0],[187,6,240,6,"getParamName"],[187,18,240,18],[187,21,240,22,"pattern"],[187,28,240,37],[187,32,241,2,"pattern"],[187,39,241,9],[187,40,241,10,"replace"],[187,47,241,17],[187,48,241,18],[187,52,241,22],[187,54,241,24],[187,56,241,26],[187,57,241,27],[187,58,241,28,"replace"],[187,65,241,35],[187,66,241,36],[187,71,241,41],[187,73,241,43],[187,75,241,45],[187,76,241,46],[188,2,243,0],[188,6,243,6,"joinPaths"],[188,15,243,15],[188,18,243,18],[188,27,243,18,"joinPaths"],[188,28,243,18],[189,4,243,18],[189,13,243,18,"_len"],[189,17,243,18],[189,20,243,18,"arguments"],[189,29,243,18],[189,30,243,18,"length"],[189,36,243,18],[189,38,243,22,"paths"],[189,43,243,27],[189,50,243,27,"Array"],[189,55,243,27],[189,56,243,27,"_len"],[189,60,243,27],[189,63,243,27,"_key"],[189,67,243,27],[189,73,243,27,"_key"],[189,77,243,27],[189,80,243,27,"_len"],[189,84,243,27],[189,86,243,27,"_key"],[189,90,243,27],[190,6,243,22,"paths"],[190,11,243,27],[190,12,243,27,"_key"],[190,16,243,27],[190,20,243,27,"arguments"],[190,29,243,27],[190,30,243,27,"_key"],[190,34,243,27],[191,4,243,27],[192,4,243,27],[192,11,244,3],[192,13,244,5],[192,14,245,5,"concat"],[192,20,245,11],[192,21,245,12],[192,24,245,15,"paths"],[192,29,245,20],[192,30,245,21,"map"],[192,33,245,24],[192,34,245,26,"p"],[192,35,245,27],[192,39,245,32,"p"],[192,40,245,33],[192,41,245,34,"split"],[192,46,245,39],[192,47,245,40],[192,50,245,43],[192,51,245,44],[192,52,245,45],[192,53,245,46],[192,54,246,5,"filter"],[192,60,246,11],[192,61,246,12,"Boolean"],[192,68,246,19],[192,69,246,20],[192,70,247,5,"join"],[192,74,247,9],[192,75,247,10],[192,78,247,13],[192,79,247,14],[193,2,247,14],[194,2,249,0],[194,6,249,6,"createConfigItem"],[194,22,249,22],[194,25,249,25,"createConfigItem"],[194,26,250,2,"config"],[194,32,250,37],[194,34,251,2,"parentPattern"],[194,47,251,24],[194,52,252,17],[195,4,253,2],[195,8,253,6],[195,15,253,13,"config"],[195,21,253,19],[195,26,253,24],[195,34,253,32],[195,36,253,34],[196,6,254,4],[197,6,255,4],[197,10,255,10,"pattern"],[197,18,255,17],[197,21,255,20,"parentPattern"],[197,34,255,33],[197,37,255,36,"joinPaths"],[197,46,255,45],[197,47,255,46,"parentPattern"],[197,60,255,59],[197,62,255,61,"config"],[197,68,255,67],[197,69,255,68],[197,72,255,71,"config"],[197,78,255,77],[198,6,257,4],[198,13,257,11],[199,8,257,13,"pattern"],[199,15,257,20],[199,17,257,13,"pattern"],[200,6,257,21],[200,7,257,22],[201,4,258,2],[203,4,260,2],[204,4,261,2],[205,4,262,2],[205,8,262,6,"pattern"],[205,15,262,33],[206,4,264,2],[206,8,264,6,"config"],[206,14,264,12],[206,15,264,13,"exact"],[206,20,264,18],[206,24,264,22,"config"],[206,30,264,28],[206,31,264,29,"path"],[206,35,264,33],[206,40,264,38,"undefined"],[206,49,264,47],[206,51,264,49],[207,6,265,4],[207,12,265,10],[207,16,265,14,"Error"],[207,21,265,19],[207,22,266,6],[207,172,267,4],[207,173,267,5],[208,4,268,2],[209,4,270,2,"pattern"],[209,11,270,9],[209,14,271,4,"config"],[209,20,271,10],[209,21,271,11,"exact"],[209,26,271,16],[209,31,271,21],[209,35,271,25],[209,38,272,8,"joinPaths"],[209,47,272,17],[209,48,272,18,"parentPattern"],[209,61,272,31],[209,65,272,35],[209,67,272,37],[209,69,272,39,"config"],[209,75,272,45],[209,76,272,46,"path"],[209,80,272,50],[209,84,272,54],[209,86,272,56],[209,87,272,57],[209,90,273,8,"config"],[209,96,273,14],[209,97,273,15,"path"],[209,101,273,19],[209,105,273,23],[209,107,273,25],[210,4,275,2],[210,8,275,8,"screens"],[210,15,275,15],[210,18,275,18,"config"],[210,24,275,24],[210,25,275,25,"screens"],[210,32,275,32],[210,35,276,6,"createNormalizedConfigs"],[210,58,276,29],[210,59,276,30,"config"],[210,65,276,36],[210,66,276,37,"screens"],[210,73,276,44],[210,75,276,46,"pattern"],[210,82,276,53],[210,83,276,54],[210,86,277,6,"undefined"],[210,95,277,15],[211,4,279,2],[211,11,279,9],[212,6,280,4],[213,6,281,4,"pattern"],[213,13,281,11],[213,15,281,13,"pattern"],[213,22,281,20],[213,24,281,22,"split"],[213,29,281,27],[213,30,281,28],[213,33,281,31],[213,34,281,32],[213,35,281,33,"filter"],[213,41,281,39],[213,42,281,40,"Boolean"],[213,49,281,47],[213,50,281,48],[213,51,281,49,"join"],[213,55,281,53],[213,56,281,54],[213,59,281,57],[213,60,281,58],[214,6,282,4,"stringify"],[214,15,282,13],[214,17,282,15,"config"],[214,23,282,21],[214,24,282,22,"stringify"],[214,33,282,31],[215,6,283,4,"screens"],[216,4,284,2],[216,5,284,3],[217,2,285,0],[217,3,285,1],[218,2,287,0],[218,6,287,6,"createNormalizedConfigs"],[218,29,287,29],[218,32,287,32,"createNormalizedConfigs"],[218,33,288,2,"options"],[218,40,288,32],[218,42,289,2,"pattern"],[218,49,289,18],[218,54,291,2],[218,58,291,2,"fromEntries"],[218,78,291,13],[218,80,292,4,"Object"],[218,86,292,10],[218,87,292,11,"entries"],[218,94,292,18],[218,95,292,19,"options"],[218,102,292,26],[218,103,292,27],[218,104,292,28,"map"],[218,107,292,31],[218,108,292,32,"_ref3"],[218,113,292,32],[218,117,292,47],[219,4,292,47],[219,8,292,47,"_ref4"],[219,13,292,47],[219,20,292,47,"_slicedToArray2"],[219,35,292,47],[219,36,292,47,"default"],[219,43,292,47],[219,45,292,47,"_ref3"],[219,50,292,47],[220,6,292,34,"name"],[220,10,292,38],[220,13,292,38,"_ref4"],[220,18,292,38],[221,6,292,40,"c"],[221,7,292,41],[221,10,292,41,"_ref4"],[221,15,292,41],[222,4,293,6],[222,8,293,12,"result"],[222,14,293,18],[222,17,293,21,"createConfigItem"],[222,33,293,37],[222,34,293,38,"c"],[222,35,293,39],[222,37,293,41,"pattern"],[222,44,293,48],[222,45,293,49],[223,4,295,6],[223,11,295,13],[223,12,295,14,"name"],[223,16,295,18],[223,18,295,20,"result"],[223,24,295,26],[223,25,295,27],[224,2,296,4],[224,3,296,5],[224,4,297,2],[224,5,297,3],[225,0,297,4],[225,3]],"functionMap":{"names":["<global>","getActiveRoute","getPathFromState","Object.entries.map$argument_0","pattern.split.filter$argument_0","pattern.split.filter.forEach$argument_0","pattern.split.map$argument_0","getParamName","joinPaths","paths.map$argument_0","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;uBC0B;CDW;eE+B;2CCkD;WDG;oBEc,wBF;qBGE;aHQ;aIkC;SJuB;CFmC;qBOE;8CPC;kBQE;yBCE,mBD;cRE;yBUE;CVoC;gCWE;gCRK;KQI;GXC"}},"type":"js/module"}]}