{"dependencies":[{"name":"react-native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.enableFreeze = enableFreeze;\n  exports.enableScreens = enableScreens;\n  exports.freezeEnabled = freezeEnabled;\n  exports.isNativePlatformSupported = void 0;\n  exports.screensEnabled = screensEnabled;\n  exports.shouldUseActivityState = void 0;\n  var _reactNative = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n  // const that tells if the library should use new implementation, will be undefined for older versions\n  var shouldUseActivityState = exports.shouldUseActivityState = true;\n  var isNativePlatformSupported = exports.isNativePlatformSupported = _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'windows';\n  var ENABLE_SCREENS = isNativePlatformSupported;\n  function enableScreens() {\n    var shouldEnableScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    ENABLE_SCREENS = shouldEnableScreens;\n    if (!isNativePlatformSupported) {\n      return;\n    }\n    if (ENABLE_SCREENS && !_reactNative.UIManager.getViewManagerConfig('RNSScreen')) {\n      console.error(`Screen native module hasn't been linked. Please check the react-native-screens README for more details`);\n    }\n  }\n  var ENABLE_FREEZE = false;\n  function enableFreeze() {\n    var shouldEnableReactFreeze = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (!isNativePlatformSupported) {\n      return;\n    }\n    ENABLE_FREEZE = shouldEnableReactFreeze;\n  }\n  function screensEnabled() {\n    return ENABLE_SCREENS;\n  }\n  function freezeEnabled() {\n    return ENABLE_FREEZE;\n  }\n});","lineCount":40,"map":[[11,2,1,0],[11,6,1,0,"_reactNative"],[11,18,1,0],[11,21,1,0,"_$$_REQUIRE"],[11,32,1,0],[11,33,1,0,"_dependencyMap"],[11,47,1,0],[12,2,3,0],[13,2,4,7],[13,6,4,13,"shouldUseActivityState"],[13,28,4,35],[13,31,4,35,"exports"],[13,38,4,35],[13,39,4,35,"shouldUseActivityState"],[13,61,4,35],[13,64,4,38],[13,68,4,42],[14,2,6,7],[14,6,6,13,"isNativePlatformSupported"],[14,31,6,38],[14,34,6,38,"exports"],[14,41,6,38],[14,42,6,38,"isNativePlatformSupported"],[14,67,6,38],[14,70,7,2,"Platform"],[14,91,7,10],[14,92,7,11,"OS"],[14,94,7,13],[14,99,7,18],[14,104,7,23],[14,108,8,2,"Platform"],[14,129,8,10],[14,130,8,11,"OS"],[14,132,8,13],[14,137,8,18],[14,146,8,27],[14,150,9,2,"Platform"],[14,171,9,10],[14,172,9,11,"OS"],[14,174,9,13],[14,179,9,18],[14,188,9,27],[15,2,11,0],[15,6,11,4,"ENABLE_SCREENS"],[15,20,11,18],[15,23,11,21,"isNativePlatformSupported"],[15,48,11,46],[16,2,13,7],[16,11,13,16,"enableScreens"],[16,24,13,29,"enableScreens"],[16,25,13,29],[16,27,13,58],[17,4,13,58],[17,8,13,30,"shouldEnableScreens"],[17,27,13,49],[17,30,13,49,"arguments"],[17,39,13,49],[17,40,13,49,"length"],[17,46,13,49],[17,54,13,49,"arguments"],[17,63,13,49],[17,71,13,49,"undefined"],[17,80,13,49],[17,83,13,49,"arguments"],[17,92,13,49],[17,98,13,52],[17,102,13,56],[18,4,14,2,"ENABLE_SCREENS"],[18,18,14,16],[18,21,14,19,"shouldEnableScreens"],[18,40,14,38],[19,4,16,2],[19,8,16,6],[19,9,16,7,"isNativePlatformSupported"],[19,34,16,32],[19,36,16,34],[20,6,17,4],[21,4,18,2],[22,4,20,2],[22,8,20,6,"ENABLE_SCREENS"],[22,22,20,20],[22,26,20,24],[22,27,20,25,"UIManager"],[22,49,20,34],[22,50,20,35,"getViewManagerConfig"],[22,70,20,55],[22,71,20,56],[22,82,20,67],[22,83,20,68],[22,85,20,70],[23,6,21,4,"console"],[23,13,21,11],[23,14,21,12,"error"],[23,19,21,17],[23,20,22,6],[23,124,23,4],[23,125,23,5],[24,4,24,2],[25,2,25,0],[26,2,27,0],[26,6,27,4,"ENABLE_FREEZE"],[26,19,27,17],[26,22,27,20],[26,27,27,25],[27,2,29,7],[27,11,29,16,"enableFreeze"],[27,23,29,28,"enableFreeze"],[27,24,29,28],[27,26,29,61],[28,4,29,61],[28,8,29,29,"shouldEnableReactFreeze"],[28,31,29,52],[28,34,29,52,"arguments"],[28,43,29,52],[28,44,29,52,"length"],[28,50,29,52],[28,58,29,52,"arguments"],[28,67,29,52],[28,75,29,52,"undefined"],[28,84,29,52],[28,87,29,52,"arguments"],[28,96,29,52],[28,102,29,55],[28,106,29,59],[29,4,30,2],[29,8,30,6],[29,9,30,7,"isNativePlatformSupported"],[29,34,30,32],[29,36,30,34],[30,6,31,4],[31,4,32,2],[32,4,34,2,"ENABLE_FREEZE"],[32,17,34,15],[32,20,34,18,"shouldEnableReactFreeze"],[32,43,34,41],[33,2,35,0],[34,2,37,7],[34,11,37,16,"screensEnabled"],[34,25,37,30,"screensEnabled"],[34,26,37,30],[34,28,37,33],[35,4,38,2],[35,11,38,9,"ENABLE_SCREENS"],[35,25,38,23],[36,2,39,0],[37,2,41,7],[37,11,41,16,"freezeEnabled"],[37,24,41,29,"freezeEnabled"],[37,25,41,29],[37,27,41,32],[38,4,42,2],[38,11,42,9,"ENABLE_FREEZE"],[38,24,42,22],[39,2,43,0],[40,0,43,1],[40,3]],"functionMap":{"names":["<global>","enableScreens","enableFreeze","screensEnabled","freezeEnabled"],"mappings":"AAA;OCY;CDY;OEI;CFM;OGE;CHE;OIE;CJE"}},"type":"js/module"}]}