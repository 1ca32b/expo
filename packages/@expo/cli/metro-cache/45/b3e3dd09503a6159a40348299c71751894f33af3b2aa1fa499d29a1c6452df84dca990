{"dependencies":[{"name":"../Utilities/Platform","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":15,"column":17,"index":325},"end":{"line":15,"column":49,"index":357}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"./normalizeColor","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":16,"column":23,"index":382},"end":{"line":16,"column":50,"index":409}}],"key":"bSrzmX8p0y7QBE6Jdeg6EaLqc+M="}},{"name":"./PlatformColorValueTypes","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":33,"column":6,"index":872},"end":{"line":33,"column":42,"index":908}}],"key":"A/gT/twMuWQJuxX+pg9LpS+HdLk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var Platform = _$$_REQUIRE(_dependencyMap[0], \"../Utilities/Platform\");\n  var normalizeColor = _$$_REQUIRE(_dependencyMap[1], \"./normalizeColor\");\n  /* eslint no-bitwise: 0 */\n  function processColor(color) {\n    if (color === undefined || color === null) {\n      return color;\n    }\n    var normalizedColor = normalizeColor(color);\n    if (normalizedColor === null || normalizedColor === undefined) {\n      return undefined;\n    }\n    if (typeof normalizedColor === 'object') {\n      var processColorObject = _$$_REQUIRE(_dependencyMap[2], \"./PlatformColorValueTypes\").processColorObject;\n      var processedColorObj = processColorObject(normalizedColor);\n      if (processedColorObj != null) {\n        return processedColorObj;\n      }\n    }\n    if (typeof normalizedColor !== 'number') {\n      return null;\n    }\n\n    // Converts 0xrrggbbaa into 0xaarrggbb\n    normalizedColor = (normalizedColor << 24 | normalizedColor >>> 8) >>> 0;\n    if (Platform.OS === 'android') {\n      // Android use 32 bit *signed* integer to represent the color\n      // We utilize the fact that bitwise operations in JS also operates on\n      // signed 32 bit integers, so that we can use those to convert from\n      // *unsigned* to *signed* 32bit int that way.\n      normalizedColor = normalizedColor | 0x0;\n    }\n    return normalizedColor;\n  }\n  var _default = exports.default = processColor;\n});","lineCount":52,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13,"Object"],[14,8,11,13],[14,9,11,13,"defineProperty"],[14,23,11,13],[14,24,11,13,"exports"],[14,31,11,13],[15,4,11,13,"value"],[15,9,11,13],[16,2,11,13],[17,2,11,13,"exports"],[17,9,11,13],[17,10,11,13,"default"],[17,17,11,13],[18,2,15,0],[18,6,15,6,"Platform"],[18,14,15,14],[18,17,15,17,"require"],[18,28,15,24],[18,29,15,24,"_dependencyMap"],[18,43,15,24],[18,71,15,48],[18,72,15,49],[19,2,16,0],[19,6,16,6,"normalizeColor"],[19,20,16,20],[19,23,16,23,"require"],[19,34,16,30],[19,35,16,30,"_dependencyMap"],[19,49,16,30],[19,72,16,49],[19,73,16,50],[20,2,20,0],[21,2,21,0],[21,11,21,9,"processColor"],[21,23,21,21,"processColor"],[21,24,21,22,"color"],[21,29,21,52],[21,31,21,76],[22,4,22,2],[22,8,22,6,"color"],[22,13,22,11],[22,18,22,16,"undefined"],[22,27,22,25],[22,31,22,29,"color"],[22,36,22,34],[22,41,22,39],[22,45,22,43],[22,47,22,45],[23,6,23,4],[23,13,23,11,"color"],[23,18,23,16],[24,4,24,2],[25,4,26,2],[25,8,26,6,"normalizedColor"],[25,23,26,21],[25,26,26,24,"normalizeColor"],[25,40,26,38],[25,41,26,39,"color"],[25,46,26,44],[25,47,26,45],[26,4,27,2],[26,8,27,6,"normalizedColor"],[26,23,27,21],[26,28,27,26],[26,32,27,30],[26,36,27,34,"normalizedColor"],[26,51,27,49],[26,56,27,54,"undefined"],[26,65,27,63],[26,67,27,65],[27,6,28,4],[27,13,28,11,"undefined"],[27,22,28,20],[28,4,29,2],[29,4,31,2],[29,8,31,6],[29,15,31,13,"normalizedColor"],[29,30,31,28],[29,35,31,33],[29,43,31,41],[29,45,31,43],[30,6,32,4],[30,10,32,10,"processColorObject"],[30,28,32,28],[30,31,33,6,"require"],[30,42,33,13],[30,43,33,13,"_dependencyMap"],[30,57,33,13],[30,89,33,41],[30,90,33,42],[30,91,33,43,"processColorObject"],[30,109,33,61],[31,6,35,4],[31,10,35,10,"processedColorObj"],[31,27,35,27],[31,30,35,30,"processColorObject"],[31,48,35,48],[31,49,35,49,"normalizedColor"],[31,64,35,64],[31,65,35,65],[32,6,37,4],[32,10,37,8,"processedColorObj"],[32,27,37,25],[32,31,37,29],[32,35,37,33],[32,37,37,35],[33,8,38,6],[33,15,38,13,"processedColorObj"],[33,32,38,30],[34,6,39,4],[35,4,40,2],[36,4,42,2],[36,8,42,6],[36,15,42,13,"normalizedColor"],[36,30,42,28],[36,35,42,33],[36,43,42,41],[36,45,42,43],[37,6,43,4],[37,13,43,11],[37,17,43,15],[38,4,44,2],[40,4,46,2],[41,4,47,2,"normalizedColor"],[41,19,47,17],[41,22,47,20],[41,23,47,22,"normalizedColor"],[41,38,47,37],[41,42,47,41],[41,44,47,43],[41,47,47,48,"normalizedColor"],[41,62,47,63],[41,67,47,68],[41,68,47,70],[41,74,47,76],[41,75,47,77],[42,4,49,2],[42,8,49,6,"Platform"],[42,16,49,14],[42,17,49,15,"OS"],[42,19,49,17],[42,24,49,22],[42,33,49,31],[42,35,49,33],[43,6,50,4],[44,6,51,4],[45,6,52,4],[46,6,53,4],[47,6,54,4,"normalizedColor"],[47,21,54,19],[47,24,54,22,"normalizedColor"],[47,39,54,37],[47,42,54,40],[47,45,54,43],[48,4,55,2],[49,4,56,2],[49,11,56,9,"normalizedColor"],[49,26,56,24],[50,2,57,0],[51,2,57,1],[51,6,57,1,"_default"],[51,14,57,1],[51,17,57,1,"exports"],[51,24,57,1],[51,25,57,1,"default"],[51,32,57,1],[51,35,59,15,"processColor"],[51,47,59,27],[52,0,59,27],[52,3]],"functionMap":{"names":["<global>","processColor"],"mappings":"AAA;ACoB;CDoC"}},"type":"js/module"}]}